{
  "version": 3,
  "sources": ["Source_TS/Check.ts", "Source_TS/Reset.ts", "Source_TS/Vacuum.ts", "Source_TS/Stage.ts", "Source_TS/Update.ts", "Source_TS/Hotkeys.ts", "Source_TS/Special.ts", "Source_TS/Limit.ts", "Source_TS/Player.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import Overlimit from './Limit';\nimport { global, player } from './Player';\nimport type { gameTab } from './Types';\n\nexport const checkTab = (tab: gameTab, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.stage.true >= 7 || (player.stage.true >= 6 && player.stage.resets >= 1); }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'upgrade':\n            if (player.stage.true < 2 && player.discharge.energyMax < 12) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return global.stageInfo.activeAll.includes(4) && player.upgrades[4][1] === 1; }\n            return subtab === 'Upgrades' || subtab === null;\n        case 'strangeness':\n            if (player.stage.true < 7 && player.strange[0].total <= 0 && (!player.inflation.vacuum || player.stage.current < 5)) { return false; }\n            if (subtab === 'Milestones') { return player.stage.true >= 7 || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'inflation':\n            if (player.stage.true < 7) { return false; }\n            return subtab === 'Researches' || subtab === 'Milestones' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.stage.true >= 7 || player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n        default:\n            return false;\n    }\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (index < 1 || global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][8] === 1; }\n        if (index === 5) { return player.upgrades[3][11] === 1; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index] && player.researchesExtra[5][0] < 1) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.researchesExtra[4][0] >= 1; }\n        if (index === 3) { return player.researchesExtra[4][0] >= 2; }\n        if (index === 4) { return player.researchesExtra[4][0] >= 3; }\n        if (index === 5) { return player.elements[26] >= 1 && (player.challenges.active !== 0 || player.inflation.tree[3] >= 1); }\n    } else if (stageIndex === 5) {\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n        if (index === 3) { return player.researchesExtra[5][0] >= 1; }\n    } else if (stageIndex === 6) {\n        return player.inflation.vacuum;\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'inflation'): boolean => {\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade === 3) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 4 : 2].total.moreThan('0'); }\n                if (upgrade === 4) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 5 : 3].total.moreThan('0'); }\n                if (upgrade > 5) { return player.upgrades[1][5] === 1; }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 0) { return player.buildings[2][1].true >= 1 || player.buildings[2][2].current.moreOrEqual('1'); }\n                if (upgrade === 7) { return player.strangeness[2][2] >= 3; }\n                if (upgrade === 8) { return player.strangeness[2][8] >= 3; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankU[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 7) { return player.strangeness[3][2] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (player.collapse.mass < global.collapseInfo.unlockU[upgrade] && player.researchesExtra[5][0] < 1) { return false; }\n                if (upgrade === 2) { return player.upgrades[4][1] === 1; }\n                if (upgrade === 3) { return player.strangeness[4][2] >= 3 && player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1); }\n                if (upgrade === 4) { return player.strangeness[4][9] >= 1 && player.upgrades[4][3] === 1; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1; }\n                if (upgrade === 3) { return player.inflation.vacuum ? player.accretion.rank >= 7 : player.milestones[5][1] >= 8; }\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade] && player.accretion.rank !== 0;\n            } else if (stageIndex === 4) {\n                if (player.collapse.mass < global.collapseInfo.unlockR[upgrade] && player.researchesExtra[5][0] < 1) { return false; }\n                if (upgrade === 3) { return (player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][2] >= 1; }\n                if (upgrade === 4) { return player.collapse.stars[2] > 0 || player.researchesExtra[5][0] >= 1; }\n                if (upgrade === 5) { return (player.collapse.stars[2] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][9] >= 3; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 3) { return player.researchesExtra[1][2] >= 1; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 3) { return player.accretion.rank >= 6; }\n                return player.upgrades[2][2] === 1;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankE[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 4) { return player.researchesExtra[1][2] >= 2; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1; }\n                if (upgrade === 2) { return (player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][2] >= 2; }\n                if (upgrade === 3) { return (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][9] >= 2; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return (player.inflation.vacuum || player.milestones[4][1] >= 8) && player.strangeness[5][3] >= 1; }\n            }\n            break;\n        case 'researchesAuto': {\n            const autoStage = global.researchesAutoInfo.autoStage[upgrade][player.researchesAuto[upgrade]]; //Can be undefined\n            if (!(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { return false; }\n            if (upgrade === 0) { return player.inflation.vacuum; }\n            if (upgrade === 1) { return player.inflation.vacuum && player.accretion.rank >= 6; }\n            return true;\n        }\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            if (stageIndex === 3) { return player.accretion.rank >= 1; }\n            return true;\n        case 'elements':\n            if (upgrade >= 29) { return player.upgrades[4][4] === 1 && player.buildings[6][1].true >= upgrade - 29; }\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1); }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1 && upgrade > 0;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 3; }\n                    if (upgrade === 8) { return player.challenges.void[2] >= 1; }\n                    if (upgrade === 9) { return player.challenges.void[2] >= 2; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 4; }\n                    if (upgrade === 9) { return player.challenges.void[5] >= 2; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 3; }\n                    if (upgrade === 9) { return player.challenges.void[5] >= 1; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 4) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[3] >= 5; }\n                    if ([0, 1, 5, 7].includes(upgrade)) { return player.strangeness[5][3] >= 1; }\n                }\n                return true;\n            }\n            if (((stageIndex === 1 || stageIndex === 2) && upgrade < 6) || ((stageIndex === 3 || stageIndex === 4) && upgrade < 7)) { return true; }\n            if (player.milestones[4][0] < 8) { return false; }\n            if (stageIndex === 5) {\n                if (upgrade === 2) { return player.milestones[5][0] >= 8; }\n                if (upgrade === 4) { return player.milestones[4][1] >= 8; }\n                if ([0, 1, 3, 5].includes(upgrade)) { return player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7; }\n            }\n            return true;\n        case 'inflation':\n            return player.stage.true >= 7;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 5) { return check !== 3; }\n            if (stageIndex === 6) { return check < 1; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) { return check !== 5; }\n            if (stageIndex === 2) { return check !== 2; }\n            if (stageIndex === 4) { return false; }\n            if (stageIndex === 5) { return check !== 3; }\n            break;\n        case 'researches':\n            if (stageIndex === 1) { return check !== 3; }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) { return check !== 2; }\n            if (stageIndex === 2) { return check > 1; }\n            if (stageIndex === 4) { return check !== 0; }\n            if (stageIndex === 5) { return check !== 0; }\n            break;\n        case 'elements':\n            return ![26, 29, 30].includes(check);\n    }\n\n    return true;\n};\n\nexport const milestoneGetValue = (index: number, stageIndex: number): number | Overlimit => {\n    if (stageIndex === 1) {\n        if (index === 0) { return player.buildings[1][player.inflation.vacuum ? 1 : 0].total; }\n        if (index === 1) { return player.discharge.energy; }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.buildings[2][1].total : player.buildings[2][2].current; }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return player.buildings[3][0].total; }\n        if (index === 1) { return player.buildings[3][4].true + player.buildings[3][5].true; }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return player.buildings[4][0].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.collapse.stars[2] : global.collapseInfo.newMass; }\n    } else if (stageIndex === 5) {\n        if (index === 0) {\n            if (!player.inflation.vacuum) { return global.collapseInfo.trueStars; }\n            const stars = player.buildings[4];\n            return new Overlimit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n        }\n        if (index === 1) { return player.buildings[5][3].true; }\n    }\n    throw new TypeError(`Milestone s${stageIndex}-i${index} doesn't exist`);\n};\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    const pointer = global.milestonesInfo[stageIndex];\n    if (player.inflation.vacuum) {\n        if (player.challenges.active !== 0 || player.inflation.tree[4] < 1) { return false; }\n    } else if (pointer.max[index] <= player.milestones[stageIndex][index] ||\n        (player.stage.true < 7 && player.stage.resets < 4) ||\n        (stageIndex === 5 && player.milestones[4][index] < 8)\n    ) { return false; }\n    return pointer.time[index] >= player.time.stage && pointer.need[index].lessOrEqual(milestoneGetValue(index, stageIndex));\n};\n", "import { allowedToBeReset, checkTab } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, autoElementsSet, assignMilestoneInformation, assignStrangeInfo, assignMaxRank, assignPuddles, assignTrueEnergy, assignSubmergedLevels, assignBuildingsProduction } from './Stage';\nimport { setRemnants, stageUpdate, switchTab, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    const { dischargeInfo } = global;\n    const { energyStage, energyType } = dischargeInfo;\n    const { buildings, discharge } = player;\n\n    if (type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n\n            elements[i] = 0;\n            visualUpdateUpgrades(i, 4, 'elements');\n        }\n        autoElementsSet();\n\n        global.collapseInfo.pointsLoop = 0;\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n    }\n\n    let energyRefund = 0;\n    for (const s of stageIndex) {\n        if (s === 2) {\n            assignSubmergedLevels(true);\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n        }\n        energyRefund += energyStage[s];\n        energyStage[s] = 0;\n\n        const building = buildings[s];\n        building[0].current.setValue(playerStart.buildings[s][0].current);\n        building[0].total.setValue(playerStart.buildings[s][0].current);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) {\n                if (!player.inflation.vacuum) { continue; }\n                const energy = energyType[s][i] * building[i as 1].true;\n                energyStage[s] += energy;\n                energyRefund -= energy;\n                continue;\n            }\n\n            building[i as 1].true = 0;\n            building[i].current.setValue('0');\n            building[i].total.setValue('0');\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n\n            upgrades[i] = 0;\n            visualUpdateUpgrades(i, s, 'upgrades');\n        }\n        autoUpgradesSet(s);\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n\n            researches[i] = 0;\n            visualUpdateResearches(i, s, 'researches');\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n\n            researchesExtra[i] = 0;\n            visualUpdateResearches(i, s, 'researchesExtra');\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n        if (player.stage.active === 4) { setRemnants(); }\n    }\n\n    if (player.inflation.vacuum) {\n        let deficit = dischargeInfo.energyTrue - discharge.energy - energyRefund;\n        for (let s = 2; s <= 5; s++) {\n            if (stageIndex.includes(s)) { continue; }\n            const building = buildings[s];\n            for (let i = global.buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n                if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n                if (deficit > 0) {\n                    const max = Math.min(Math.ceil(deficit / energyType[s][i]), building[i as 1].true);\n                    if (max > 0) {\n                        building[i as 1].true -= max;\n                        deficit -= max * energyType[s][i];\n                        energyStage[s] -= max * energyType[s][i];\n                        if (s === 4) { global.collapseInfo.trueStars -= max; }\n                    }\n                }\n                building[i].current.setValue(building[i as 1].true);\n                building[i].total.setValue(building[i as 1].true);\n            }\n            if (s !== 5) { //Stage 5 need to use trueStars (not included because its a fake stat)\n                building[0].current.setValue(playerStart.buildings[s][0].current);\n                building[0].total.setValue(playerStart.buildings[s][0].current);\n            }\n            if (s === 2) {\n                assignSubmergedLevels();\n                assignPuddles();\n            }\n        }\n\n        discharge.energy += deficit;\n        dischargeInfo.energyTrue = discharge.energy;\n    } else if (type === 'discharge') { //stageIndex.includes(1)\n        discharge.energy = 0;\n        dischargeInfo.energyTrue = 0;\n    }\n    assignBuildingsProduction.multipliersAll();\n};\n\n/** Default value for update is 'normal', default value for full is true and should be set to false only if Stage is permanent */\nexport const resetStage = (stageIndex: number[], update = true as null | boolean, full = true) => {\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            global.dischargeInfo.energyStage[s] = 0;\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n\n        global.lastUpgrade[s][0] = null;\n        if (s === 1) {\n            if (player.strangeness[1][5] < 1) { player.ASR[1] = 0; }\n            player.discharge.current = 0;\n            player.discharge.energy = 0;\n            global.dischargeInfo.energyTrue = 0;\n        } else if (s === 2) {\n            if (player.strangeness[2][5] < 1) { player.ASR[2] = 0; }\n            player.vaporization.clouds.setValue('0');\n            assignSubmergedLevels(true);\n        } else if (s === 3) {\n            if (player.strangeness[3][5] < 1) { player.ASR[3] = 0; }\n            if (player.inflation.vacuum) {\n                player.accretion.rank = 1;\n            } else {\n                player.accretion.rank = 0;\n                buildings[0].current.setValue('5.9722e27');\n            }\n        } else if (s === 4) {\n            if (player.strangeness[4][5] < 1) { player.ASR[4] = 0; }\n            global.collapseInfo.pointsLoop = 0;\n            global.collapseInfo.trueStars = 0;\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = player.strangeness[4][8] >= 1 ? 1 : 0;\n            autoElementsSet();\n            for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n            global.lastElement = null;\n        } else if (s === 5) {\n            if (player.strangeness[5][5] < 1) { player.ASR[5] = 0; }\n            player.merge.reward = [0, 0, 0, 0];\n            player.merge.resets = 0;\n        }\n    }\n    if (full) {\n        const { strangeness, researchesAuto } = player;\n        player.time.stage = 0;\n        player.stage.time = 0;\n        player.stage.peak = 0;\n        global.debug.timeLimit = false;\n        researchesAuto[0] = strangeness[3][6];\n        researchesAuto[1] = strangeness[4][6];\n        if (player.inflation.vacuum) {\n            researchesAuto[2] = strangeness[1][4] < 1 ? 0 : strangeness[3][4] < 1 ? 1 : strangeness[2][4] < 1 ? 2 : strangeness[4][4] < 1 ? 3 : 4;\n            for (let i = 0; i < playerStart.researchesAuto.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n        } else {\n            researchesAuto[2] = strangeness[Math.min(player.stage.current, 4)][4] >= 1 ? 1 : 0;\n            visualUpdateResearches(2, 0, 'researchesAuto');\n        }\n    }\n\n    for (const s of stageIndex) { //Less errors if do it separatly\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    assignBuildingsProduction.multipliersAll();\n    if (update !== null) {\n        switchTab(checkTab(global.tab) ? global.tab : 'stage');\n        stageUpdate(update, true);\n        if (!update) {\n            const active = player.stage.active;\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            if (active === 4) { setRemnants(); }\n        }\n    }\n};\n\nexport const resetVacuum = () => {\n    const activeMilestone = global.milestonesInfoS6.active;\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < playerStart.buildings[s].length; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n            player.milestones[s] = cloneArray(playerStart.milestones[s]);\n            for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n            player.ASR[s] = 0;\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto = cloneArray(playerStart.researchesAuto);\n    player.stage.current = 1;\n    player.stage.resets = 0;\n    player.stage.peak = 0;\n    player.stage.time = 0;\n    player.time.stage = 0;\n    global.debug.timeLimit = false;\n\n    //Stage 1\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n\n    //Stage 2\n    player.vaporization.clouds.setValue('0');\n    player.vaporization.cloudsMax.setValue('0');\n    assignSubmergedLevels(true);\n\n    //Stage 3\n    if (player.inflation.vacuum) {\n        player.accretion.rank = 1;\n    } else {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current.setValue('5.9722e27');\n    }\n\n    //Stage 4\n    global.collapseInfo.pointsLoop = 0;\n    global.collapseInfo.trueStars = 0;\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.elements = cloneArray(playerStart.elements);\n    global.lastElement = null;\n\n    //Stage 5 and Strangeness\n    player.merge.resets = 0;\n    player.merge.reward = [0, 0, 0, 0];\n    player.challenges.void = cloneArray(player.challenges.superVoid);\n    global.historyStorage.stage = [];\n    player.history.stage.best = [3.1556952e16, 0, 0, 0];\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    for (let i = 0; i < playerStart.strange.length; i++) {\n        player.time.export[i + 1] = 0;\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n\n    if (activeMilestone[0]) {\n        const start = player.buildings[6][1].true ** 2;\n        player.strange[0].current = start;\n        player.strange[0].total = start;\n        player.strangeness[1][8] = 2;\n    }\n    if (activeMilestone[1]) { player.strangeness[5][4] = 1; }\n    if (activeMilestone[2]) {\n        player.strangeness[3][6] = 3;\n        player.strangeness[4][6] = 2;\n        player.researchesAuto[0] = 3;\n        player.researchesAuto[1] = 2;\n    }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (activeMilestone[1]) {\n            player.ASR[s] = global.ASRInfo.max[s];\n            player.strangeness[s][5] = 1;\n        }\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignBuildingsProduction.multipliersAll();\n    assignStrangeInfo[1]();\n    assignStrangeInfo[0]();\n    assignMaxRank();\n    assignTrueEnergy();\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n\n    switchTab(checkTab(global.tab) ? global.tab : 'stage');\n    stageUpdate(true, true);\n};\n\nexport const cloneBeforeReset = (depth: 'stage' | 'vacuum') => {\n    const { clone } = player;\n    clone.depth = depth;\n\n    clone.buildings = [[]];\n    clone.upgrades = [[]];\n    clone.researches = [[]];\n    clone.researchesExtra = [[]];\n    clone.ASR = [0];\n    if (depth !== 'stage') {\n        clone.strangeness = [];\n        clone.milestones = [];\n    }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        clone.buildings[s] = [{\n            current: buildings[0].current.toString(),\n            total: buildings[0].total.toString(),\n            trueTotal: buildings[0].trueTotal.toString()\n        }];\n        if (s < 6) {\n            for (let i = 1; i < buildings.length; i++) {\n                clone.buildings[s][i] = {\n                    true: buildings[i as 1].true,\n                    current: buildings[i].current.toString(),\n                    total: buildings[i].total.toString(),\n                    trueTotal: buildings[i].trueTotal.toString()\n                };\n            }\n            clone.ASR[s] = player.ASR[s];\n            if (depth !== 'stage') {\n                clone.strangeness[s] = cloneArray(player.strangeness[s]);\n                clone.milestones[s] = cloneArray(player.milestones[s]);\n            }\n        }\n        clone.upgrades[s] = cloneArray(player.upgrades[s]);\n        clone.researches[s] = cloneArray(player.researches[s]);\n        clone.researchesExtra[s] = cloneArray(player.researchesExtra[s]);\n    }\n    clone.stage = {\n        current: player.stage.current,\n        time: player.stage.time,\n        peak: player.stage.peak\n    };\n    clone.time = {\n        stage: player.time.stage\n    };\n    clone.researchesAuto = cloneArray(player.researchesAuto);\n\n    clone.discharge = {\n        current: player.discharge.current,\n        energy: player.discharge.energy\n    };\n    clone.vaporization = {\n        clouds: player.vaporization.clouds.toString()\n    };\n    clone.accretion = {\n        rank: player.accretion.rank\n    };\n    clone.collapse = {\n        mass: player.collapse.mass,\n        stars: cloneArray(player.collapse.stars)\n    };\n    clone.elements = cloneArray(player.elements);\n    clone.merge = {\n        reward: cloneArray(player.merge.reward),\n        resets: player.merge.resets\n    };\n    if (depth !== 'stage') {\n        clone.strange = [];\n        clone.time.export = [player.time.export[0]];\n        for (let i = 0; i < player.strange.length; i++) {\n            clone.time.export[i + 1] = player.time.export[i + 1];\n            clone.strange[i] = {\n                current: player.strange[i].current,\n                total: player.strange[i].total\n            };\n        }\n        clone.history = {\n            stage: {\n                list: global.historyStorage.stage.slice(0, player.history.stage.input[0]),\n                best: cloneArray(player.history.stage.best)\n            }\n        };\n        clone.challenges = {\n            void: cloneArray(player.challenges.void)\n        };\n        clone.inflation = {\n            age: player.inflation.age\n        };\n        clone.stage.resets = player.stage.resets;\n        clone.time.universe = player.time.universe;\n        clone.discharge.energyMax = player.discharge.energyMax;\n        clone.vaporization.cloudsMax = player.vaporization.cloudsMax.toString();\n        clone.collapse.massMax = player.collapse.massMax;\n    }\n};\n\nexport const loadFromClone = () => {\n    const { clone } = player;\n    const depth = clone.depth;\n\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingsClone = clone.buildings[s];\n\n        buildings[0].current.setValue(buildingsClone[0].current);\n        buildings[0].total.setValue(buildingsClone[0].total);\n        buildings[0].trueTotal.setValue(buildingsClone[0].trueTotal);\n        if (s < 6) {\n            for (let i = 1; i < buildingsClone.length; i++) {\n                buildings[i as 1].true = buildingsClone[i].true;\n                buildings[i].current.setValue(buildingsClone[i].current);\n                buildings[i].total.setValue(buildingsClone[i].total);\n                buildings[i].trueTotal.setValue(buildingsClone[i].trueTotal);\n            }\n            player.ASR[s] = clone.ASR[s];\n            if (depth !== 'stage') {\n                player.strangeness[s] = clone.strangeness[s];\n                player.milestones[s] = clone.milestones[s];\n                for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n            }\n        }\n\n        player.upgrades[s] = clone.upgrades[s];\n        player.researches[s] = clone.researches[s];\n        player.researchesExtra[s] = clone.researchesExtra[s];\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto = clone.researchesAuto;\n    player.stage.current = clone.stage.current;\n    player.stage.time = clone.stage.time;\n    player.stage.peak = clone.stage.peak;\n    player.time.stage = clone.time.stage;\n    global.debug.timeLimit = false;\n\n    player.discharge.current = clone.discharge.current;\n    player.discharge.energy = clone.discharge.energy;\n    player.vaporization.clouds.setValue(clone.vaporization.clouds);\n    player.accretion.rank = clone.accretion.rank;\n    assignSubmergedLevels();\n    const trueStars = clone.buildings[4];\n    global.collapseInfo.trueStars = trueStars[1].true + trueStars[2].true + trueStars[3].true + trueStars[4].true + trueStars[5].true;\n    global.collapseInfo.pointsLoop = 0;\n    player.collapse.mass = clone.collapse.mass;\n    player.collapse.stars = clone.collapse.stars;\n    player.elements = clone.elements;\n    global.lastElement = null;\n    player.merge.reward = clone.merge.reward;\n    player.merge.resets = clone.merge.resets;\n\n    if (depth !== 'stage') {\n        for (let i = 0; i < clone.strange.length; i++) {\n            player.time.export[i + 1] = clone.time.export[i + 1];\n            player.strange[i].current = clone.strange[i].current;\n            player.strange[i].total = clone.strange[i].total;\n        }\n        player.stage.resets = clone.stage.resets;\n        player.time.universe = clone.time.universe;\n        player.time.export[0] += clone.time.export[0];\n        player.inflation.age = clone.inflation.age;\n        global.historyStorage.stage = clone.history.stage.list;\n        player.history.stage.best = clone.history.stage.best;\n        player.challenges.void = clone.challenges.void;\n        player.discharge.energyMax = clone.discharge.energyMax;\n        player.vaporization.cloudsMax.setValue(clone.vaporization.cloudsMax);\n        player.collapse.massMax = clone.collapse.massMax;\n        global.lastStrangeness = [null, 0];\n        global.lastMilestone = [null, 0];\n    }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (depth !== 'stage') {\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n    autoElementsSet();\n\n    assignBuildingsProduction.multipliersAll();\n    assignTrueEnergy();\n    if (depth !== 'stage') {\n        assignStrangeInfo[1]();\n        assignStrangeInfo[0]();\n        assignMaxRank();\n    }\n\n    switchTab(checkTab(global.tab) ? global.tab : 'stage');\n    stageUpdate(true, true);\n    player.clone = {};\n};\n", "import { getId, getQuery } from './Main';\nimport { global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { globalSave, playEvent, specialHTML } from './Special';\nimport { setActiveStage } from './Stage';\nimport { visualTrueStageUnlocks, visualUpdateInflation } from './Update';\n\nexport const prepareVacuum = (state: boolean) => { //Must not use direct player values\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n    const star3ExpId = getQuery('#star3Effect > span:last-of-type');\n    let buildingsActive, upgrades1Cost, researches1Cost, researches1Scaling, strangeness1Cost, strangeness1Scaling, strangeness2Cost, strangeness2Scaling, strangeness3Cost, strangeness3Scaling, strangeness4Cost, strangeness4Scaling, strangeness5Cost, strangeness5Scaling;\n\n    if (state) {\n        getId('mergeResetText').innerHTML = '<span class=\"darkvioletText\">Merge</span> does a <span class=\"grayText\">Galaxy</span> reset, while also converting self-made <span class=\"grayText\">Galaxies</span> into non self-made.';\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'];\n        buildingsInfo.hoverText[2][0] = 'Tritium';\n        buildingsInfo.hoverText[3][0] = 'Preons hardcap';\n        buildings[1][0].current.setValue('5.476e-3');\n        buildings[2][0].current.setValue('0');\n        buildings[3][0].current.setValue('9.76185667392e-36');\n        buildingsActive = [6, 7, 6, 6];\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift('Preon.png', 'Quarks.png');\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n            buildingsInfo.hoverText[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'improving';\n        buildingsInfo.type[3][0] = 'delaying';\n        star3ExpId.textContent = 'Boost to Solar mass gain and delay to Preons hardcap';\n\n        upgrades1Cost = [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000];\n        upgradesInfo[2].startCost[0] = 10;\n        upgradesInfo[5].startCost[3] = 1e160;\n        //upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 9;\n        //upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 5;\n        //upgradesInfo[5].maxActive = 4;\n\n        researches1Cost = [1600, 4800, 16000, 32000, 16000, 24000];\n        researches1Scaling = [400, 1200, 8000, 40000, 16000, 16000];\n        researchesInfo[2].scaling[2] = 1e2;\n        researchesInfo[2].scaling[3] = 1e3;\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 6;\n        //researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 5;\n        researchesExtraInfo[2].maxActive = 4;\n        researchesExtraInfo[3].maxActive = 5;\n        researchesExtraInfo[4].maxActive = 4;\n        //researchesExtraInfo[5].maxActive = 1;\n\n        global.elementsInfo.startCost[27] = 1e54;\n        global.elementsInfo.startCost[28] = 1e58;\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000, 32000, 56000];\n        global.ASRInfo.costRange[3][3] = 2.45576045e31;\n\n        strangeness1Cost = [1, 1, 1, 2, 12, 2, 24];\n        strangeness1Scaling = [2.46, 2, 6, 6, 400, 1, 1];\n        strangeness2Cost = [1, 1, 2, 2, 12, 4, 24];\n        strangeness2Scaling = [2.46, 2, 3, 3.4, 800, 1, 1];\n        strangeness3Cost = [1, 2, 2, 24, 12, 4, 4, 24];\n        strangeness3Scaling = [2, 3.4, 3, 1, 100, 1, 1.74, 1];\n        strangeness4Cost = [1, 2, 4, 2, 12, 6, 6, 24];\n        strangeness4Scaling = [2, 3.4, 3, 6, 1900, 1, 1.74, 1];\n        strangeness5Cost = [24, 36, 6, 24, 15600, 24, 240, 120];\n        strangeness5Scaling = [2, 2, 3.4, 1, 1, 1, 1, 1];\n        strangenessInfo[1].maxActive = 10;\n        strangenessInfo[2].maxActive = 10;\n        strangenessInfo[3].maxActive = 10;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 9;\n\n        const milestone1S1 = getQuery('#milestone1Stage1Div > img') as HTMLImageElement;\n        milestone1S1.src = milestone1S1.src.replace('Quarks.png', 'Preon.png');\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        getQuery('#milestone1Stage2Main > span').textContent = 'Distant Clouds';\n        milestone1S2.src = milestone1S2.src.replace('Drop.png', 'Clouds.png');\n        milestone1S2.alt = 'Distant Clouds';\n        const milestone2S2 = getQuery('#milestone2Stage2Div > img') as HTMLImageElement;\n        milestone2S2.src = milestone2S2.src.replace('Drop.png', 'Puddle.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Center of gravity';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Center of gravity';\n        const milestone1S4 = getQuery('#milestone1Stage4Div > img') as HTMLImageElement;\n        milestone1S4.src = milestone1S4.src.replace('Main_sequence%20mass.png', 'Black%20hole.png');\n        getQuery('#toggleAuto0Main label > span').textContent = 'Stage';\n        getQuery('#stageHistory > h3').textContent = 'Stage resets:';\n\n        getId('preonCap').style.display = '';\n        getId('molesProduction').style.display = '';\n        getId('massProduction').style.display = '';\n        getId('dustCap').style.display = '';\n        getId('mainCapS5').style.display = '';\n        getId('element0').style.display = '';\n        getId('strange1Effect1Allowed').style.display = '';\n        getId('strange7Stage1').style.display = '';\n        getId('strange7Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange8Stage4').style.display = '';\n        getId('strange3Stage5').style.display = '';\n        getId('strange4Stage5').style.display = '';\n        getId('stageAutoInterstellar').style.display = '';\n        getId('vaporizationLimit').style.display = '';\n        getId('collapseCapped').style.display = '';\n\n        getId('strange1Effect1Disabled').style.display = 'none';\n        getId('stageAutoElse').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'stage1borderImage cyanText', 'Quarks'];\n        buildingsInfo.hoverText[2][0] = 'Moles';\n        buildingsInfo.hoverText[3][0] = 'Mass';\n        buildings[1][0].current.setValue('3');\n        buildings[2][0].current.setValue('2.7753108348135e-3');\n        buildings[3][0].current.setValue('1e-19');\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n            buildingsInfo.hoverText[1].splice(0, 2);\n        }\n        buildingsActive = [4, 6, 5, 5];\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'producing';\n        buildingsInfo.type[3][0] = 'producing';\n        star3ExpId.textContent = 'Boost to Solar mass gain';\n\n        upgrades1Cost = [0, 0, 12, 36, 120, 240, 480, 1600, 3200, 20800];\n        upgradesInfo[2].startCost[0] = 1e4;\n        upgradesInfo[5].startCost[3] = 1e150;\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 4;\n\n        researches1Cost = [600, 2000, 4000, 4000, 6000, 6000];\n        researches1Scaling = [200, 400, 2000, 12000, 4000, 6000];\n        researchesInfo[2].scaling[2] = 1e3;\n        researchesInfo[2].scaling[3] = 1e2;\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 5;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 3;\n        researchesExtraInfo[5].maxActive = 1;\n\n        global.elementsInfo.startCost[27] = 1e52;\n        global.elementsInfo.startCost[28] = 1e54;\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000];\n        global.ASRInfo.costRange[3][3] = 2e30;\n\n        strangeness1Cost = [1, 1, 1, 2, 4, 2, 24];\n        strangeness1Scaling = [1, 0.75, 1.5, 3, 0, 0, 0];\n        strangeness2Cost = [1, 1, 2, 2, 4, 2, 24];\n        strangeness2Scaling = [0.5, 0.75, 2, 2, 0, 0, 0];\n        strangeness3Cost = [1, 1, 2, 6, 4, 2, 6, 24];\n        strangeness3Scaling = [0.75, 1.5, 2, 0, 0, 0, 3, 0];\n        strangeness4Cost = [1, 1, 3, 2, 4, 2, 4, 24];\n        strangeness4Scaling = [1, 2, 2.5, 2, 0, 0, 68, 0];\n        strangeness5Cost = [20, 24, 240, 24, 6000, 24, 20, 120];\n        strangeness5Scaling = [20, 24, 240, 0, 0, 0, 220, 0];\n        strangenessInfo[1].maxActive = 7;\n        strangenessInfo[2].maxActive = 7;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 8;\n        strangenessInfo[5].maxActive = 8;\n\n        const milestone1S1 = getQuery('#milestone1Stage1Div > img') as HTMLImageElement;\n        milestone1S1.src = milestone1S1.src.replace('Preon.png', 'Quarks.png');\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        getQuery('#milestone1Stage2Main > span').textContent = 'A Nebula of Drops';\n        milestone1S2.src = milestone1S2.src.replace('Clouds.png', 'Drop.png');\n        milestone1S2.alt = 'A Nebula of Drops';\n        const milestone2S2 = getQuery('#milestone2Stage2Div > img') as HTMLImageElement;\n        milestone2S2.src = milestone2S2.src.replace('Puddle.png', 'Drop.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Cluster of Mass';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Cluster of Mass';\n        const milestone1S4 = getQuery('#milestone1Stage4Div img') as HTMLImageElement;\n        milestone1S4.src = milestone1S4.src.replace('Black%20hole.png', 'Main_sequence%20mass.png');\n        getQuery('#toggleAuto0Main label > span').textContent = 'Interstellar Stage';\n        getQuery('#stageHistory > h3').textContent = 'Interstellar Stage resets:';\n\n        getId('strange8Stage5').style.display = '';\n        getId('milestonesProgressArea').style.display = '';\n        getId('stageAutoElse').style.display = '';\n        getId('rankStat0').style.display = '';\n\n        getId('preonCap').style.display = 'none';\n        getId('molesProduction').style.display = 'none';\n        getId('massProduction').style.display = 'none';\n        getId('dustCap').style.display = 'none';\n        getId('submersionBoost').style.display = 'none';\n        getId('mainCap').style.display = 'none';\n        getId('mainCapS5').style.display = 'none';\n        getId('mergeBoost').style.display = 'none';\n        getId('mergeEffects').style.display = 'none';\n        getId('mergeBoostTotal').style.display = 'none';\n        getId('researchAuto1').style.display = 'none';\n        getId('researchAuto2').style.display = 'none';\n        getId('vaporizationLimit').style.display = 'none';\n        getId('collapseCapped').style.display = 'none';\n        getId('element0').style.display = 'none';\n        for (let s = 1; s < strangenessInfo.length; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].startCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n        getId('energyGainStage1Build1Name').style.display = 'none';\n        getId('energyGainStage1Build2Name').style.display = 'none';\n        getId('energyGainStage1Build1').style.display = 'none';\n        getId('energyGainStage1Build2').style.display = 'none';\n        for (let s = 2; s <= 5; s++) {\n            getId(`energyGainStage${s}`).style.display = 'none';\n        }\n    }\n    const stateId = getId('vacuumState');\n    stateId.textContent = state ? 'True' : 'False';\n    const color = `var(--${state ? 'green' : 'red'}-text)`;\n    if (stateId.style.color !== color) { stateId.style.color = color; }\n\n    buildingsInfo.maxActive.splice(1, buildingsActive.length, ...buildingsActive);\n    upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n    researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n    researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n    strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n    strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n    strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n    strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n    strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n    strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n    strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n    strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n    strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n    strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n    if (globalSave.SRSettings[0]) { star3ExpId.textContent = ` (${star3ExpId.textContent})`; }\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total.setValue(newValue);\n        buildings[s][0].trueTotal.setValue(newValue);\n    }\n};\n\nexport const switchVacuum = () => {\n    if (player.inflation.vacuum) { return; }\n    let income = 0;\n    if (player.stage.true >= 7) {\n        income = 1;\n        player.cosmon.current += income;\n        player.cosmon.total += income;\n    } else {\n        player.stage.true = 6;\n        player.collapse.show = 0;\n        player.event = false;\n        playEvent(6);\n    }\n\n    const history = player.history.vacuum;\n    const storage = global.historyStorage.vacuum;\n    const realTime = player.time.universe;\n    storage.unshift([realTime, false, income]);\n    if (storage.length > 100) { storage.length = 100; }\n    if (income / realTime > history.best[2] / history.best[0]) {\n        history.best = [realTime, false, income];\n    }\n\n    if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n    player.inflation.vacuum = true;\n    player.inflation.resets++;\n    player.clone = {};\n    player.challenges.active = null;\n    prepareVacuum(true);\n    visualUpdateInflation();\n    visualTrueStageUnlocks();\n    resetVacuum();\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Overlimit from './Limit';\nimport { getId, simulateOffline } from './Main';\nimport { global, logAny, player, playerStart } from './Player';\nimport { cloneBeforeReset, loadFromClone, reset, resetStage, resetVacuum } from './Reset';\nimport { Confirm, Notify, globalSave, playEvent } from './Special';\nimport { format, numbersUpdate, setRemnants, stageUpdate, switchTab, visualTrueStageUnlocks, visualUpdate, visualUpdateInflation, visualUpdateResearches, visualUpdateUpgrades } from './Update';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/** Normal game tick */\nexport const timeUpdate = (timeWarp = 0, tick = globalSave.intervals.offline / 1000) => {\n    const { time, ASR } = player;\n    const { auto, buildings: autoBuy } = player.toggles;\n    const { maxActive } = global.buildingsInfo;\n    const { autoU, autoR, autoE } = global.automatization;\n    const activeAll = global.stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n\n    let passedSeconds: number;\n    if (timeWarp > 0) {\n        const extraTime = Math.min(tick, timeWarp);\n        passedSeconds = extraTime;\n        timeWarp -= extraTime;\n    } else {\n        const currentTime = Date.now();\n        passedSeconds = (currentTime - time.updated) / 1000;\n        time.updated = currentTime;\n        time.export[0] += passedSeconds;\n        global.lastSave += passedSeconds;\n        if (passedSeconds > tick) {\n            if (passedSeconds > tick * 600) { return void simulateOffline(passedSeconds); }\n            timeWarp = passedSeconds - tick;\n            passedSeconds = tick;\n        } else if (passedSeconds <= 0) {\n            time.offline += passedSeconds;\n            return;\n        }\n        time.online += passedSeconds;\n    }\n    const trueSeconds = passedSeconds;\n    time.stage += trueSeconds;\n    time.universe += trueSeconds;\n\n    assignGlobalSpeed();\n    passedSeconds *= global.inflationInfo.globalSpeed;\n\n    player.stage.time += passedSeconds;\n    player.inflation.age += passedSeconds;\n\n    if (player.toggles.normal[3]) { exitChallengeAuto(); }\n    if (vacuum || activeAll.includes(4)) { stageResetCheck(5, trueSeconds); }\n    assignBuildingsProduction.multipliersAll();\n    if (activeAll.includes(6)) {\n        gainBuildings(0, 6, passedSeconds); //Dark matter\n    }\n    if (activeAll.includes(5)) {\n        if (player.strangeness[5][3] >= 1 || global.milestonesInfoS6.active[2]) {\n            if (autoU[5].length !== 0) { autoUpgradesBuy(5); }\n            if (autoR[5].length !== 0) { autoResearchesBuy('researches', 5); }\n            if (autoE[5].length !== 0) { autoResearchesBuy('researchesExtra', 5); }\n        }\n        for (let i = maxActive[5] - 1; i >= 1; i--) {\n            if (autoBuy[5][i] && ASR[5] >= i) { buyBuilding(i, 5, 0, true); }\n        }\n        assignBuildingsProduction.multipliersStage5();\n        gainBuildings(0, 5, passedSeconds); //Brown dwarfs\n        const research = player.researches[5][0];\n        if (research >= 1) { gainBuildings(1, 5, passedSeconds); } //Main sequence\n        if (research >= 2) { gainBuildings(2, 5, passedSeconds); } //Red supergiants\n        if (research >= 3) { gainBuildings(3, 5, passedSeconds); } //Blue hypergiants\n        if (research >= 4 && (player.challenges.active !== 0 || player.inflation.tree[3] >= 1)) { gainBuildings(4, 5, passedSeconds); } //Quasi-stars\n    } else if (activeAll.includes(4)) { assignBuildingsProduction.multipliersStage5(); }\n    if (activeAll.includes(4)) {\n        if (global.automatization.elements.length !== 0) { autoElementsBuy(); }\n        if (autoU[4].length !== 0) { autoUpgradesBuy(4); }\n        if (autoR[4].length !== 0) { autoResearchesBuy('researches', 4); }\n        if (autoE[4].length !== 0) { autoResearchesBuy('researchesExtra', 4); }\n        assignBuildingsProduction.multipliersStage4();\n        for (let i = maxActive[4] - 1; i >= 1; i--) {\n            if (autoBuy[4][i] && ASR[4] >= i) { buyBuilding(i, 4, 0, true); }\n            gainBuildings(i - 1, 4, passedSeconds); //Elements\n        }\n        awardMilestone(0, 5);\n        awardMilestone(0, 4);\n        collapseResetCheck(true);\n        awardMilestone(1, 4);\n    }\n    if (activeAll.includes(3)) {\n        if (!vacuum && auto[0]) { stageResetCheck(3, 0); }\n        if (auto[3]) { rankResetCheck(true); }\n        if (autoU[3].length !== 0) { autoUpgradesBuy(3); }\n        if (autoR[3].length !== 0) { autoResearchesBuy('researches', 3); }\n        if (autoE[3].length !== 0) { autoResearchesBuy('researchesExtra', 3); }\n        assignBuildingsProduction.multipliersStage3(); //Auto updates\n        if (vacuum) {\n            assignSharedHardcapDelays();\n            assignDustHardcap();\n            global.accretionInfo.disableAuto = player.strangeness[1][8] >= 2 && assignBuildingsProduction.S3Build1(true).moreOrEqual(global.inflationInfo.dustCap);\n            if (global.accretionInfo.disableAuto) { assignSolarMassHardcap(); }\n        }\n        for (let i = 1; i < maxActive[3]; i++) {\n            if (autoBuy[3][i] && ASR[3] >= i) { buyBuilding(i, 3, 0, true); }\n        }\n        gainBuildings(2, 3, passedSeconds); //Planetesimals\n        gainBuildings(1, 3, passedSeconds); //Cosmic dust\n        if (!vacuum) { gainBuildings(0, 3, passedSeconds); } //Mass\n    } else if (vacuum) { assignSharedHardcapDelays(); }\n    if (activeAll.includes(2)) {\n        if (!vacuum && auto[0]) { stageResetCheck(2, 0); }\n        vaporizationResetCheck(trueSeconds);\n        if (autoU[2].length !== 0) { autoUpgradesBuy(2); }\n        if (autoR[2].length !== 0) { autoResearchesBuy('researches', 2); }\n        if (autoE[2].length !== 0) { autoResearchesBuy('researchesExtra', 2); }\n        for (let i = maxActive[2] - 1; i >= 1; i--) {\n            if (autoBuy[2][i] && ASR[2] >= i) { buyBuilding(i, 2, 0, true); }\n        }\n        gainBuildings(1, 2, passedSeconds); //Drops\n        if (!vacuum) { gainBuildings(0, 2, passedSeconds); } //Moles\n        awardMilestone(1, 2);\n        awardMilestone(0, 2);\n    }\n    if (activeAll.includes(1)) {\n        if (!vacuum && auto[0]) { stageResetCheck(1, 0); }\n        if (autoU[1].length !== 0) { autoUpgradesBuy(1); }\n        if (autoR[1].length !== 0) { autoResearchesBuy('researches', 1); }\n        if (autoE[1].length !== 0) { autoResearchesBuy('researchesExtra', 1); }\n        assignBuildingsProduction.multipliersStage1();\n        if (player.upgrades[1][8] === 1) { gainBuildings(5, 1, passedSeconds); } //Molecules\n        for (let i = maxActive[1] - 1; i >= 1; i--) {\n            if (autoBuy[1][i] && ASR[1] >= i) { buyBuilding(i, 1, 0, true); }\n            gainBuildings(i - 1, 1, passedSeconds); //Rest of Microworld\n        }\n        awardMilestone(1, 1);\n        awardMilestone(0, 1);\n        dischargeResetCheck(true);\n    }\n\n    if (timeWarp > 0) { timeUpdate(timeWarp, tick); }\n};\n\nexport const assignBuildingsProduction = {\n    /** Everything that can affect all Stages */\n    multipliersAll: () => {\n        global.dischargeInfo.total = calculateEffects.effectiveGoals();\n        global.dischargeInfo.base = calculateEffects.goalsBase();\n        global.vaporizationInfo.tension = player.upgrades[2][3] === 1 ? new Overlimit(player.buildings[2][0].current).max('1').power(calculateEffects.S2Upgrade3()).toNumber() : 1;\n        global.vaporizationInfo.stress = player.upgrades[2][4] === 1 ? new Overlimit(player.buildings[2][1].current).max('1').power(calculateEffects.S2Upgrade4()).toNumber() : 1;\n        global.accretionInfo.effective = calculateEffects.effectiveRank();\n    },\n    /** Everything that affects only Microworld Structures */\n    multipliersStage1: () => {\n        global.dischargeInfo.selfBoost = calculateEffects.S1Upgrade7();\n        let multiplier = (player.inflation.vacuum ? 2 : 1.8) ** player.strangeness[1][0];\n        if (player.upgrades[1][5] === 1) { multiplier *= global.dischargeInfo.base ** global.dischargeInfo.total; }\n        if (player.strangeness[1][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[1]; }\n        if ((player.inflation.tree[4] >= 1 || player.challenges.active === 0) && player.inflation.vacuum) { multiplier *= global.milestonesInfo[1].reward[0]; }\n        if (player.challenges.active === 0) { multiplier /= 4; }\n        global.dischargeInfo.miltiplier = multiplier;\n    },\n    /** Preons, true vacuum only */\n    S1Build1: (noHardcap = false): Overlimit => {\n        const production = global.buildingsInfo.producing[1][1];\n        const structure = player.buildings[1][1];\n\n        const multiplierList = [];\n        const preonsExcess = new Overlimit(structure.current).minus(structure.true);\n        if (preonsExcess.moreThan('1')) {\n            multiplierList.push(preonsExcess.power(0.11).plus(structure.true));\n        } else { multiplierList.push(structure.current); }\n        if (player.upgrades[1][7] === 1) {\n            if (structure.true < 1001) {\n                const selfPreons = calculateEffects.S1Upgrade7(true); //Formula is '(selfPreons * step ** ((true - 1) / 2)) ** true'; Step is '(selfBoost / selfPreons) ** (1 / 500)'\n                multiplierList.push(((global.dischargeInfo.selfBoost / selfPreons) ** ((structure.true - 1) / 1000) * selfPreons) ** structure.true);\n            } else { multiplierList.push(global.dischargeInfo.selfBoost ** 1001); }\n        }\n        const laterPreons = calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3();\n        production.setValue(6e-4 * global.dischargeInfo.miltiplier * laterPreons).multiply(...multiplierList);\n        if (!noHardcap) {\n            assignPreonsHardcap(laterPreons);\n            if (production.moreThan(global.inflationInfo.preonCap)) { production.setValue(global.inflationInfo.preonCap); }\n        }\n        return production;\n    },\n    /** Quarks, true vacuum only */\n    S1Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[1][2].current];\n        if (player.upgrades[1][7] === 1) { multiplierList.push(new Overlimit(global.dischargeInfo.selfBoost).power(player.buildings[1][2].true)); }\n        return global.buildingsInfo.producing[1][2].setValue(0.4 * global.dischargeInfo.miltiplier).multiply(...multiplierList);\n    },\n    /** Particles */\n    S1Build3: (): Overlimit => {\n        const index = player.inflation.vacuum ? 3 : 1;\n\n        const multiplierList = [player.buildings[1][index].current];\n        let multiplier = (player.inflation.vacuum ? 0.2 : 1.6) * global.dischargeInfo.miltiplier;\n        if (player.upgrades[1][0] === 1) { multiplier *= 8; }\n        if (player.upgrades[1][7] === 1) { multiplierList.push(new Overlimit(global.dischargeInfo.selfBoost).power(player.buildings[1][index].true)); }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Atoms */\n    S1Build4: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const index = vacuum ? 4 : 2;\n\n        const multiplierList = [player.buildings[1][index].current];\n        let multiplier = (vacuum ? 0.8 : 0.4) * global.dischargeInfo.miltiplier;\n        if (player.upgrades[1][3] === 1) { multiplier *= vacuum ? 6 : 4; }\n        if (player.upgrades[1][7] === 1) { multiplierList.push(new Overlimit(global.dischargeInfo.selfBoost).power(player.buildings[1][index].true)); }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Molecules */\n    S1Build5: (): Overlimit => {\n        const b5 = player.inflation.vacuum ? 5 : 3;\n\n        const multiplierList = [player.buildings[1][b5].current];\n        let multiplier = 0.2 * global.dischargeInfo.miltiplier;\n        if (player.upgrades[1][4] === 1) { multiplier *= 4; }\n        if (player.upgrades[1][7] === 1) { multiplierList.push(new Overlimit(global.dischargeInfo.selfBoost).power(player.buildings[1][b5].true)); }\n        return global.buildingsInfo.producing[1][b5].setValue(multiplier).multiply(...multiplierList);\n    },\n    S1Build6: (): Overlimit => {\n        let multiplier = (calculateEffects.S1Research2() ** player.researches[1][2]) * (calculateEffects.S1Research5() ** player.researches[1][5]);\n        if (player.upgrades[1][9] === 1) { multiplier *= calculateEffects.effectiveEnergy() ** 0.5; }\n        global.dischargeInfo.tritium.setValue(assignBuildingsProduction.S1Build5()).plus('1').log(calculateEffects.S1Extra1()).multiply(multiplier);\n        if (player.inflation.vacuum) { global.dischargeInfo.tritium.multiply(assignBuildingsProduction.S2Build1()); }\n        return global.dischargeInfo.tritium;\n    },\n    /** Drops */\n    S2Build1: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const structure = player.buildings[2][1];\n\n        const multiplierList = [structure.current];\n        if (player.challenges.active === 0) {\n            multiplierList[0] = new Overlimit(structure.current).min(1);\n        } else if (vacuum) {\n            const excess = new Overlimit(structure.current).minus(structure.true);\n            if (excess.moreThan('1')) { multiplierList[0] = excess.power(0.2).plus(structure.true); }\n        }\n        if (player.upgrades[2][0] === 1) { multiplierList.push(new Overlimit(vacuum ? '1.02' : '1.04').power(structure.true)); }\n        global.buildingsInfo.producing[2][1].setValue((vacuum ? 2 : 8e-4) * (3 ** global.vaporizationInfo.trueResearch0) * (2 ** player.strangeness[2][0])).multiply(...multiplierList);\n        if (vacuum) { return global.buildingsInfo.producing[2][1].max('1'); }\n        return global.buildingsInfo.producing[2][1];\n    },\n    /** Puddles */\n    S2Build2: (): Overlimit => {\n        const productions = global.buildingsInfo.producing[2];\n        const structures = player.buildings[2];\n        const info = global.vaporizationInfo;\n        const rain = calculateEffects.S2Extra1(info.trueResearchRain);\n        const flow = 1.24 ** player.strangeness[2][7];\n\n        if (structures[6].true >= 1) {\n            productions[6].setValue(player.upgrades[2][8] === 1 ? '1.1' : '1.08').power(structures[6].true).multiply(flow);\n        } else { productions[6].setValue('1'); }\n\n        productions[5].setValue(2 * calculateEffects.S2Extra2(rain) * flow).multiply(structures[5].current, productions[6]).max('1');\n\n        productions[4].setValue(2 * flow).multiply(structures[4].current, productions[5]).max('1');\n\n        productions[3].setValue(2 * flow).multiply(structures[3].current, productions[4]).max('1');\n\n        if (structures[2].current.lessThan('1')) { return productions[2].setValue(calculateEffects.S2Extra1(player.researchesExtra[2][1]) - 1); }\n        const multiplierList = [structures[2].current, productions[3], calculateEffects.clouds()];\n        let multiplier = (player.challenges.active === 0 ? 6e-4 : 4.8) * (2 ** info.trueResearch1) * info.tension * info.stress * rain * ((player.inflation.vacuum ? 1.8 : 1.6) ** player.strangeness[2][1]);\n        if (player.upgrades[2][1] === 1) { multiplierList.push(calculateEffects.S2Upgrade1()); }\n        if (player.inflation.vacuum) {\n            multiplier *= calculateEffects.S3Extra4();\n            if (player.elements[1] >= 1) { multiplier *= 2; }\n            if (player.inflation.tree[4] >= 1 || player.challenges.active === 0) { multiplier *= global.milestonesInfo[2].reward[1]; }\n        }\n        if (player.strangeness[2][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[2]; }\n        return productions[2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Everything that affects only Accretion Structures */\n    multipliersStage3: () => {\n        const productions = global.buildingsInfo.producing[3];\n\n        global.accretionInfo.multiplier = (player.inflation.vacuum ? 1.48 : 1.6) ** player.strangeness[3][1];\n        productions[5].setValue('1.1').power(player.buildings[3][5].true);\n\n        productions[4].setValue(player.upgrades[3][12] === 1 ? '1.14' : '1.1').power(player.buildings[3][4].true).multiply(productions[5]);\n        global.accretionInfo.satellites.setValue(productions[4]).power(player.inflation.vacuum ? 0.1 : 0.2);\n    },\n    /** Cosmic dust and related softcap */\n    S3Build1: (noHardcap = false): Overlimit => {\n        const production = global.buildingsInfo.producing[3][1];\n        const info = global.accretionInfo;\n        const researchesS3 = player.researches[3];\n        const upgradesS3 = player.upgrades[3];\n        const vacuum = player.inflation.vacuum;\n\n        const multiplierList = [player.buildings[3][1].current];\n        let multiplier = (vacuum ? 2 : 8e-20) * (3 ** researchesS3[0]) * (2 ** researchesS3[3]) * (3 ** researchesS3[5]) * (1.11 ** player.researchesExtra[3][0]) * (calculateEffects.S3Extra1() ** global.accretionInfo.effective) * (1.8 ** player.strangeness[3][0]);\n        if (vacuum) {\n            multiplier *= calculateEffects.submersion();\n            if (player.elements[4] >= 1) { multiplier *= 1.4; }\n            if (player.elements[14] >= 1) { multiplier *= 1.4; }\n            if (player.inflation.tree[4] >= 1 || player.challenges.active === 0) { multiplier *= global.milestonesInfo[3].reward[0]; }\n        }\n        if (upgradesS3[0] === 1) { multiplierList.push(new Overlimit(calculateEffects.S3Upgrade0()).power(player.buildings[3][1].true)); }\n        if (upgradesS3[1] === 1) { multiplier *= calculateEffects.S3Upgrade1(); }\n        if (upgradesS3[2] === 1) { multiplier *= 2; }\n        if (upgradesS3[5] === 1) { multiplier *= 3; }\n        if (upgradesS3[6] === 1) { multiplier *= 2 * 1.5 ** researchesS3[7]; }\n        if (upgradesS3[9] === 1) { multiplier *= 2; }\n        if (upgradesS3[10] === 1) { multiplier *= 8 * 2 ** researchesS3[8]; }\n        if (player.strangeness[3][3] >= 1) { multiplierList.push(info.satellites); }\n        production.setValue(multiplier).multiply(...multiplierList);\n        if (player.challenges.active === 0) {\n            info.dustSoft = player.accretion.rank >= 5 ? 0.8 : 0.9;\n        } else if (player.accretion.rank >= 5) {\n            info.dustSoft = vacuum || production.moreThan('1') ? 0.9 : 1.1;\n        } else { info.dustSoft = 1; }\n        production.power(info.dustSoft);\n        if (vacuum && !noHardcap) {\n            //assignDustHardcap();\n            if (production.moreThan(global.inflationInfo.dustCap)) {\n                production.setValue(global.inflationInfo.dustCap);\n            } else { production.max('1'); }\n        }\n        return production;\n    },\n    /** Planetesimals */\n    S3Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[3][2].current];\n        let multiplier = (3 ** player.researches[3][2]) * global.accretionInfo.multiplier;\n        if (player.upgrades[3][3] === 1) { multiplierList.push(new Overlimit(calculateEffects.S3Upgrade3()).power(player.buildings[3][2].true)); }\n        if (player.upgrades[3][4] === 1) { multiplier *= 3; }\n        if (player.researches[3][6] >= 1) { multiplier *= calculateEffects.S3Research6(); }\n        if (player.strangeness[3][3] >= 1) { multiplierList.push(global.accretionInfo.satellites); }\n        return global.buildingsInfo.producing[3][2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Protoplanets */\n    S3Build3: (): Overlimit => {\n        const multiplierList = [player.buildings[3][3].current, global.buildingsInfo.producing[3][4]];\n        let multiplier = 0.4 * global.accretionInfo.multiplier;\n        if (player.researchesExtra[3][2] >= 1) { multiplier *= 2; }\n        if (player.upgrades[3][7] === 1) { multiplierList.push(new Overlimit('1.02').power(player.buildings[3][3].true)); }\n        return global.buildingsInfo.producing[3][3].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Everything that affects only Interstellar Structures */\n    multipliersStage4: () => {\n        const info = global.collapseInfo;\n        info.massEffect = calculateEffects.mass();\n        info.neutronEffect = calculateEffects.star[1]();\n\n        let multiplier = calculateEffects.S4Research0(calculateEffects.S4Research0_base()) * info.massEffect * info.neutronEffect * calculateEffects.S4Research4() * (1.6 ** player.strangeness[4][0]);\n        if (player.elements[4] >= 1) { multiplier *= 1.4; }\n        if (player.elements[14] >= 1) { multiplier *= 1.4; }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[2][3] >= 1) { multiplier *= global.vaporizationInfo.tension; }\n            if (player.researchesExtra[2][3] >= 3) {\n                multiplier *= global.vaporizationInfo.stress;\n            } else if (player.researchesExtra[2][3] === 2) { multiplier *= global.vaporizationInfo.stress ** 0.5; }\n            if (player.inflation.tree[4] >= 1 || player.challenges.active === 0) { multiplier *= global.milestonesInfo[4].reward[0]; }\n        }\n        if (player.strangeness[4][7] >= 1) { multiplier *= global.strangeInfo.stageBoost[4]; }\n        if (player.challenges.active === 0) { multiplier /= 8000; }\n        global.collapseInfo.multiplier = multiplier;\n\n        let clustersNumber = 2 * (2 ** player.researches[5][1]);\n        if (player.upgrades[5][1] === 1) { clustersNumber *= calculateEffects.S5Upgrade1(); }\n        global.buildingsInfo.producing[5][2].setValue(clustersNumber).multiply(player.buildings[5][2].current, global.mergeInfo.multiplier).max(2 ** player.researches[5][1]);\n    },\n    /** This one can change because of Stars, doesn't assigns anything */\n    multipliersStage4Extra: (): Overlimit => {\n        const multiplier = new Overlimit(calculateEffects.S4Research1()).power(global.collapseInfo.trueStars);\n        if (player.elements[24] >= 1) { multiplier.multiply(new Overlimit(player.buildings[4][0].current).max('1').power(calculateEffects.element24())); }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[1][4] >= 1) { multiplier.multiply(calculateEffects.S1Extra4() ** global.dischargeInfo.total); }\n        }\n        return multiplier;\n    },\n    /** Brown dwarfs */\n    S4Build1: (): Overlimit => {\n        const multiplierList = [player.buildings[4][1].current, assignBuildingsProduction.multipliersStage4Extra()];\n        let multiplier = 40 * global.collapseInfo.multiplier;\n        if (player.elements[1] >= 1) { multiplier *= 2; }\n        if (player.elements[19] >= 1 && global.collapseInfo.massEffect > 1) { multiplier *= global.collapseInfo.massEffect; }\n        const level = player.inflation.vacuum ? 4 : 3;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][1].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Main sequence */\n    S4Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[4][2].current, assignBuildingsProduction.multipliersStage4Extra()];\n        let multiplier = 1200 * global.collapseInfo.multiplier * calculateEffects.star[0]() * (2 ** player.researches[4][3]);\n        const level = player.inflation.vacuum ? 3 : 2;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Red supergiants */\n    S4Build3: (): Overlimit => {\n        const multiplierList = [player.buildings[4][3].current, assignBuildingsProduction.multipliersStage4Extra()];\n        let multiplier = 6e7 * global.collapseInfo.multiplier;\n        const level = player.inflation.vacuum ? 2 : 1;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][3].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Blue hypergiants */\n    S4Build4: (): Overlimit => {\n        const multiplierList = [player.buildings[4][4].current, assignBuildingsProduction.multipliersStage4Extra()];\n        let multiplier = 6e9 * global.collapseInfo.multiplier;\n        const level = player.inflation.vacuum ? 1 : 0;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][4].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Quasi-stars */\n    S4Build5: (): Overlimit => {\n        if (player.challenges.active === 0) { return global.buildingsInfo.producing[4][5].setValue('0'); }\n        return global.buildingsInfo.producing[4][5].setValue(2e11 * global.collapseInfo.multiplier).multiply(player.buildings[4][5].current, assignBuildingsProduction.multipliersStage4Extra(), global.buildingsInfo.producing[5][2]);\n    },\n    /** Everything that affects only Intergalactic Structures */\n    multipliersStage5: () => {\n        const vacuum = player.inflation.vacuum;\n        const milestones = vacuum && (player.inflation.tree[4] >= 1 || player.challenges.active === 0);\n        const galaxies = player.buildings[5][3];\n        const production = global.buildingsInfo.producing[5][3];\n\n        let base = (vacuum ? 2 : 6) + calculateEffects.S5Upgrade2();\n        if (milestones) { base += global.milestonesInfo[5].reward[1]; }\n        production.setValue(base).power(galaxies.true);\n        const current = galaxies.current.toNumber();\n        if (current > 0) { production.multiply(((current + 1) / (galaxies.true + 1)) * calculateEffects.reward[0]()); }\n        global.mergeInfo.galaxyBase = base;\n\n        let multiplier = (vacuum ? 1.4 : 1.6) ** player.strangeness[5][0];\n        if (milestones) { multiplier *= global.milestonesInfo[5].reward[0]; }\n        global.mergeInfo.multiplier.setValue(multiplier).multiply(production);\n    },\n    /** Nebulas */\n    S5Build1: (): Overlimit => {\n        let multiplier = 6 * (2 ** player.researches[5][0]);\n        if (player.upgrades[5][0] === 1) { multiplier *= calculateEffects.S5Upgrade0(); }\n        return global.buildingsInfo.producing[5][1].setValue(multiplier).multiply(player.buildings[5][1].current, global.mergeInfo.multiplier);\n    },\n    /** Universes */\n    S6Build1: (): Overlimit => global.buildingsInfo.producing[6][1].setValue(player.buildings[6][1].current).power(player.buildings[6][1].true / 4 + 1)\n};\n\nconst assignSharedHardcapDelays = () => {\n    global.inflationInfo.accretion = calculateMassGain();\n    let effect = calculateEffects.star[2]();\n    if (player.elements[10] >= 1) { effect *= 2; }\n    if (player.researchesExtra[4][1] >= 1) { effect *= calculateEffects.S4Extra1(); }\n    global.inflationInfo.microworld = effect;\n};\nconst assignPreonsHardcap = (laterPreons: number) => {\n    global.inflationInfo.preonCap.setValue(1e14 * laterPreons * global.inflationInfo.microworld).multiply(assignBuildingsProduction.S3Build1());\n};\nconst assignDustHardcap = () => {\n    global.inflationInfo.dustCap.setValue((player.accretion.rank >= 5 ? 1e48 : 8e46) * global.inflationInfo.accretion * (1.4 ** player.strangeness[3][8]));\n};\nconst assignSolarMassHardcap = () => {\n    const info = global.inflationInfo;\n    info.massCap = 0.01235 * info.accretion * info.microworld;\n    if (player.strangeness[5][7] >= 1) { info.massCap *= global.strangeInfo.stageBoost[5]; }\n};\nexport const assignSubmergedLevels = (reset = false) => {\n    const info = global.vaporizationInfo;\n    if (reset) {\n        info.trueResearchRain = 0;\n        info.trueResearch1 = 0;\n        info.trueResearch0 = 0;\n        return;\n    }\n    const totalDrops = player.buildings[2][1].total.toNumber();\n    if (info.trueResearchRain !== player.researchesExtra[2][1]) { info.trueResearchRain = player.researchesExtra[2][2] >= 1 ? player.researchesExtra[2][1] : Math.min(player.researchesExtra[2][1], logAny(totalDrops * 999 / 1e12 + 1, 1e3)); }\n    if (info.trueResearch1 !== player.researches[2][1]) { info.trueResearch1 = Math.min(player.researches[2][1], logAny(totalDrops / 100 + 1, 5)); }\n    if (info.trueResearch0 !== player.researches[2][0]) { info.trueResearch0 = Math.min(player.researches[2][0], Math.max(logAny(totalDrops / 10, 1.366) + 1, logAny(totalDrops * 0.366 / 10 + 1, 1.366))); }\n};\n\nexport const calculateEffects = {\n    effectiveEnergy: (): number => {\n        let energy = player.discharge.energy;\n        if (player.inflation.vacuum && (player.inflation.tree[4] >= 1 || player.challenges.active === 0)) { energy *= global.milestonesInfo[1].reward[1]; }\n        return Math.max(energy, 1);\n    },\n    effectiveGoals: (): number => player.discharge.current + (player.strangeness[1][3] / 2),\n    /** Research is player.researches[1][4] */\n    goalsBase: (research = player.researches[1][4]): number => {\n        let base = (4 + research) / 2;\n        if (player.challenges.active === 0) { base **= 0.5; }\n        return base;\n    },\n    /** Result need to be divided by 10 */\n    S1Upgrade6: (): number => 10 + 3 * player.researches[1][0],\n    /** Preons default value is false */\n    S1Upgrade7: (preons = false): number => {\n        let base = 2 + player.researches[1][1];\n        if (preons) { base *= 1.6; }\n        return (base + 100) / 100;\n    },\n    S1Research2: (level = player.strangeness[1][1]): number => 20 + (level * (player.inflation.vacuum ? 1.5 : 1)),\n    S1Research5: (): number => {\n        const discharges = global.dischargeInfo.total;\n        if (!player.inflation.vacuum) { return discharges > 5 ? discharges + 15 : discharges * 4; }\n        return discharges > 7 ? discharges + 14 : discharges * 3;\n    },\n    S1Extra1: (level = player.researchesExtra[1][1]): number => level >= 4 ? 1.1 : level >= 3 ? 1.2 : (20 - 3 * level) / 10,\n    S1Extra3: (level = player.researchesExtra[1][3]): number => level / 20,\n    S1Extra4: (): number => (global.dischargeInfo.base + calculateEffects.effectiveEnergy() ** 0.1) / 100 + 1,\n    /* Submerged Stage */\n    clouds: (post = false): Overlimit => {\n        const effect = new Overlimit(player.vaporization.clouds).plus('1');\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n\n        if (effect.moreThan('1e4')) { effect.minus('1e4').power(0.7).plus('1e4'); }\n        return effect;\n    },\n    S2Upgrade1: (): Overlimit => {\n        const puddles = player.buildings[2][2];\n        const maxTrue = Math.min(puddles.true, 200);\n        return new Overlimit('1.02').power((puddles.current.toNumber() - maxTrue) ** 0.7 + maxTrue);\n    },\n    S2Upgrade2: (): number => {\n        let effect = 1e10 / (player.inflation.vacuum ? 2.5 : 2) ** player.strangeness[2][3];\n        if (player.inflation.vacuum && (player.inflation.tree[4] >= 1 || player.challenges.active === 0)) { effect *= global.milestonesInfo[2].reward[0]; }\n        return effect;\n    },\n    /** Research is player.researches[2][2] */\n    S2Upgrade3: (research = player.researches[2][2]): number => (1 + research / 2) / 100,\n    /** Research is player.researches[2][3] */\n    S2Upgrade4: (research = player.researches[2][3]): number => (1 + research / 2) / 100,\n    S2Upgrade5: (): number => 1 + player.researches[2][4],\n    S2Upgrade6: (): number => 1 + player.researches[2][5],\n    /** Level is global.vaporizationInfo.trueResearchRain if used for production and player.researchesExtra[2][1] if for automatization */\n    S2Extra1: (level: number, post = false): number => { //+^0.05 per level; Drops up to +^(0.05 / 3) after softcap\n        if (level <= 0) { return 1; }\n        const effect = new Overlimit(player.vaporization.clouds);\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n        return Math.max(new Overlimit(effect).power(level / 60).multiply(effect.min('1e6').power(level / 30)).toNumber(), 1);\n    },\n    /** Rain is calculateEffects.S2Extra1() */\n    S2Extra2: (rain: number, level = player.researchesExtra[2][2]): number => level >= 1 ? (rain - 1) / 32 + 1 : 1,\n    submersion: (): number => {\n        const drops = new Overlimit(player.buildings[2][1].current).plus('1');\n        return new Overlimit(drops).power(0.6).divide(drops.min('1e10').power(0.4)).plus('1').log(2).toNumber(); //^0.2 before softcap, ^0.6 after\n    },\n    /* Accretion Stage */\n    effectiveRank: (): number => {\n        let rank = player.accretion.rank;\n        if (player.inflation.vacuum && (player.inflation.tree[4] >= 1 || player.challenges.active === 0)) { rank += global.milestonesInfo[3].reward[1]; }\n        return rank;\n    },\n    S3Upgrade0: (): number => (101 + player.researches[3][1]) / 100,\n    /** Research is player.researchesExtra[3][3] */\n    S3Upgrade1: (research = player.researchesExtra[3][3]): number => {\n        const power = (11 + research) / 100; //2 times stronger for self-made dust\n        return Math.max(new Overlimit(player.buildings[3][1].current).power(power).multiply((player.buildings[3][1].true + 1) ** power).toNumber(), 1);\n    },\n    S3Upgrade3: (): number => (204 + player.researches[3][4]) / 200, //1.02 + 0.005\n    S3Research6: (level = player.researches[3][6]): number => { //+^0.025 per level; Drops up to +^(0.025 / 3) after softcap\n        const mass = new Overlimit(player.buildings[3][0].current).max('1');\n        return new Overlimit(mass).power(level / 120).multiply(mass.min('1e21').power(level / 60)).toNumber();\n    },\n    S3Extra1: (level = player.researchesExtra[3][1]): number => (100 + 11 * level) / 100,\n    S3Extra4: (level = player.researchesExtra[3][4]): number => level > 0 ? 8 ** ((global.accretionInfo.effective + level) / 8) : 1,\n    /* Interstellar Stage */\n    mass: (post = false): number => {\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        if (effect > 1) {\n            if (player.elements[21] >= 1) { effect **= 1.1; }\n            if (player.challenges.active === 0) { effect **= 0.2; }\n        }\n        return effect;\n    },\n    star: [\n        (post = false): number => {\n            let effect = player.collapse.stars[0] + 1;\n            if (post) {\n                effect += global.collapseInfo.starCheck[0];\n            }\n            if (player.elements[27] >= 1) { effect += player.buildings[4][3].true; }\n\n            if (player.elements[6] >= 1) { effect **= calculateEffects.element6(); }\n            return effect;\n        },\n        (post = false): number => {\n            let stars = player.collapse.stars[1] * (1 + player.strangeness[4][8]);\n            if (post) {\n                stars += global.collapseInfo.starCheck[1] * (1 + player.strangeness[4][8]);\n                if (player.elements[22] >= 1) { stars += global.collapseInfo.starCheck[0]; }\n            }\n            if (player.elements[22] >= 1) { stars += player.collapse.stars[0]; }\n\n            let effect = (stars + 1) ** (0.5 + player.strangeness[4][8] / 8);\n            if (player.elements[12] >= 1) { effect *= logAny(stars + 4, 4); }\n            return effect;\n        },\n        (post = false): number => {\n            let blackHoles = player.collapse.stars[2];\n            if (post) {\n                blackHoles += global.collapseInfo.starCheck[2];\n            }\n\n            const base = player.elements[18] >= 1 ? 3 : 2;\n            let effect = (blackHoles + 1) / logAny(blackHoles + base, base);\n            if (blackHoles > 0 && player.inflation.vacuum && (player.inflation.tree[4] >= 1 || player.challenges.active === 0)) { effect *= global.milestonesInfo[4].reward[1]; }\n            return effect;\n        }\n    ],\n    /** Disc is player.researches[4][2] */\n    S4Research0_base: (disc = player.researches[4][2]): number => (14 + disc) / 10,\n    /** Base is calculateEffects.S4Research0_base() */\n    S4Research0: (base: number): number => {\n        let levels = player.researches[4][0];\n        if (player.elements[19] >= 1) { levels++; }\n        return base ** levels;\n    },\n    /** Transfer is player.researchesExtra[4][1] */\n    S4Research1: (level = player.researches[4][1], transfer = player.researchesExtra[4][1]): number => {\n        let effective = level > 0 ? 1 + Math.min(level, 4) : 0;\n        if (level > 4) { effective += 0.5; }\n        if (level > 5) { effective += Math.min(level - 5, 2) / 4; }\n        if (level > 7) { effective += (level - 7) / 8; }\n        return 1 + (transfer >= 1 ? 0.006 : 0.005) * effective;\n    },\n    S4Research4: (post = false, level = player.researches[4][4]): number => {\n        if (level < 1) { return 1; }\n\n        let blackHoles = player.collapse.stars[2];\n        let mass = player.collapse.mass;\n        if (post) {\n            blackHoles += global.collapseInfo.starCheck[2];\n            if (global.collapseInfo.newMass > mass) { mass = global.collapseInfo.newMass; }\n        }\n\n        const base = level >= 2 ? 2 : 3;\n        let effect = logAny(blackHoles + base, base);\n        if (player.elements[23] >= 1 && mass > 1) { effect *= mass ** 0.1; }\n        return effect;\n    },\n    S4Extra1: (): number => (10 + player.researches[4][1]) / 10,\n    /* Intergalactic Stage */\n    reward: [\n        (post = false): number => {\n            let effect = player.merge.reward[0] + 1;\n            if (post) { effect += global.mergeInfo.checkReward[0]; }\n            return effect;\n        },\n        (): number => 1\n    ],\n    S5Upgrade0: (): number => 3 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade1: (): number => 2 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade2: (post = false, level = player.upgrades[5][2]): number => {\n        if (level < 1) { return 0; }\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        effect = Math.log10(Math.max(effect / 1e5, 1)) / 4 + 0.25;\n        if (!player.inflation.vacuum) { effect *= 2; }\n        return Math.min(effect, 1);\n    },\n    /* Rest */\n    element6: (): number => player.researchesExtra[4][2] >= 1 ? 2 : 1.5,\n    element24: (): number => player.elements[27] >= 1 ? 0.02 : 0.01,\n    element26: (): number => {\n        if (player.stage.true < 6 && player.strange[0].total < 1) { return 0; }\n        let effect = new Overlimit(player.buildings[4][0].trueTotal).log(10).toNumber() - 48;\n        if (player.elements[29] >= 1) { effect = (199 + effect) * effect / 200; }\n        return Math.max(effect, 0);\n    },\n    S2Strange9: (): number => new Overlimit(player.vaporization.clouds).plus('1').log(10).toNumber() / 80 + 1,\n    inflation0: (): number => Math.max(2 ** (1 - player.time.stage / 1800), 1),\n    inflation1: (level = player.inflation.tree[1]): number => new Overlimit(player.buildings[6][0].current).plus('1').power(level / 32).toNumber(),\n    /** Default value for type is 0 or Quarks; Use 1 for Strangelets */\n    strangeGain: (interstellar: boolean, type = 0 as 0 | 1): number => {\n        let base = type === 1 ? 0 : player.inflation.vacuum ?\n            (player.strangeness[5][3] >= 1 ? 5 : 4) :\n            (player.milestones[1][0] >= 6 ? 2 : 1);\n        if (interstellar) {\n            base = (base + calculateEffects.element26()) * (player.buildings[5][3].current.toNumber() + 1);\n            if (player.inflation.vacuum && player.strangeness[2][9] >= 1) { base *= calculateEffects.S2Strange9(); }\n        } else if (type === 1) { return 0; }\n        if (type === 0) {\n            base *= (1.4 ** player.strangeness[5][2]) * (1.4 ** player.inflation.tree[2]);\n        }\n        return base * global.strangeInfo.strangeletsInfo[1];\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex: number, howMany = player.toggles.shop.input, auto = false) => {\n    if (!checkBuilding(index, stageIndex) || (!auto && global.paused)) { return; }\n    const building = player.buildings[stageIndex][index as 1];\n\n    let currency; //Readonly\n    let free = false;\n    let multi = true;\n    let special = '' as '' | 'Mass' | 'Galaxy' | 'Universe';\n    if (stageIndex === 1) {\n        currency = player.buildings[1][index - 1].current;\n        if (index === 1 && player.inflation.vacuum) {\n            free = player.strangeness[1][8] >= 1 && (player.researchesExtra[1][2] >= 1 ||\n                (player.challenges.superVoid[1] >= 2 && (player.inflation.tree[3] >= 1 || player.challenges.active === 0)));\n        }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][index === 1 ? 0 : 1].current;\n    } else if (stageIndex === 3) {\n        if (player.inflation.vacuum) { special = 'Mass'; }\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = player.merge.reward[0];\n        special = 'Universe';\n        multi = false;\n    } else {\n        if (stageIndex === 5 && index === 3) {\n            special = 'Galaxy';\n            currency = player.collapse.mass;\n            multi = false;\n        } else { currency = player.buildings[4][0].current; }\n    }\n\n    const budget = new Overlimit(currency);\n    if (auto && building.true >= 1 && !free && multi) {\n        if (special === 'Mass' && global.accretionInfo.disableAuto) {\n            if (player.accretion.rank >= 6) {\n                budget.minus(global.inflationInfo.massCap * 1.98847e33);\n            } else if (player.strangeness[3][4] < 2 && player.challenges.superVoid[1] >= 2 && (player.inflation.tree[3] >= 1 || player.challenges.active === 0)) {\n                budget.minus(global.accretionInfo.rankCost[player.accretion.rank]);\n            } else {\n                budget.divide(player.toggles.shop.wait[stageIndex]);\n            }\n        } else {\n            budget.divide(player.stage.true >= 3 ? player.toggles.shop.wait[stageIndex] : '2');\n        }\n    }\n\n    const total = calculateBuildingsCost(index, stageIndex);\n    if (total.moreThan(budget)) { return; }\n\n    let afford = 1;\n    if (howMany !== 1 && multi) {\n        const scaling = global.buildingsInfo.increase[stageIndex][index]; //Must be >1\n        if (free) {\n            afford = Math.floor(budget.divide(total).log(scaling).toNumber()) + 1;\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n        } else {\n            afford = Math.floor(budget.multiply(scaling - 1).divide(total).plus('1').log(scaling).toNumber());\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n            if (afford > 1) { total.multiply(new Overlimit(scaling).power(afford).minus('1').divide(scaling - 1)); }\n        }\n    }\n\n    building.true += afford;\n    building.current.plus(afford);\n    building.total.plus(afford);\n    building.trueTotal.plus(afford);\n\n    if (typeof currency === 'object') {\n        if (!free) {\n            currency.minus(total);\n            if (special === 'Mass') {\n                player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33');\n            } else if (player.inflation.vacuum && index === 1) {\n                if (stageIndex === 1) {\n                    player.buildings[3][0].current.setValue(currency).multiply('1.78266192e-33');\n                } else if (stageIndex === 2) {\n                    player.buildings[1][5].current.setValue(currency).multiply('6.02214076e23');\n                }\n            }\n        }\n\n        if (player.inflation.vacuum || stageIndex === 1) { addEnergy(afford, index, stageIndex); }\n        if (stageIndex === 1) { //True vacuum only\n            if (index === 5 && player.upgrades[1][8] === 0) { player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23'); }\n        } else if (stageIndex === 2) {\n            if (index === 1) {\n                if (player.buildings[2][2].current.lessThan('1')) { assignSubmergedLevels(); }\n            } else { assignPuddles(); }\n        } else if (stageIndex === 3) {\n            if (index >= 4) {\n                assignBuildingsProduction.multipliersStage3();\n                awardMilestone(1, 3);\n            }\n        } else if (stageIndex === 4) {\n            global.collapseInfo.trueStars += afford;\n        }\n\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Made ${format(afford)} '${global.buildingsInfo.name[stageIndex][index]}'`; }\n        }\n    } else if (special === 'Galaxy') {\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n        calculateMaxLevel(2, 4, 'researches');\n        awardVoidReward(5);\n        awardMilestone(1, 5);\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Galaxy reset to gain ${format(afford)} new 'Galaxies'`; }\n        }\n    } else if (special === 'Universe') {\n        if (player.stage.true < 7) { player.stage.true = 7; }\n        if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n        const realTime = player.time.universe;\n        const income = building.true;\n        player.cosmon.current += income;\n        player.cosmon.total += income;\n        player.inflation.vacuum = false;\n        player.inflation.age = 0;\n        player.time.universe = 0;\n        player.inflation.resets++;\n        const info = global.milestonesInfoS6;\n        const start = info.active.indexOf(false);\n        if (start >= 0) {\n            for (let i = start; i < info.requirement.length; i++) {\n                info.active[i] = building.current.moreOrEqual(info.requirement[i]);\n            }\n        }\n        player.clone = {};\n        player.challenges.active = null;\n        prepareVacuum(false);\n        visualUpdateInflation();\n        visualTrueStageUnlocks();\n        resetVacuum();\n\n        const history = player.history.vacuum;\n        const storage = global.historyStorage.vacuum;\n        storage.unshift([realTime, true, income]);\n        if (storage.length > 100) { storage.length = 100; }\n        if (income / realTime > history.best[2] / history.best[0]) {\n            history.best = [realTime, true, income];\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Universe reset to gain ${format(afford)} new 'Universes'`; }\n    }\n};\n\n/** Increase is how many new Structures have been gained */\nexport const addEnergy = (increase: number, index: number, stage: number) => {\n    const { discharge } = player;\n    const { dischargeInfo } = global;\n\n    const add = dischargeInfo.energyType[stage][index] * increase;\n    dischargeInfo.energyStage[stage] += add;\n    dischargeInfo.energyTrue += add;\n    discharge.energy += add;\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): Overlimit => {\n    const scaling = global.buildingsInfo.increase[stageIndex];\n    let firstCost = global.buildingsInfo.startCost[stageIndex][index];\n    if (stageIndex === 1) {\n        let increase = 140;\n        if (player.upgrades[1][6] === 1) { increase -= calculateEffects.S1Upgrade6(); }\n        scaling[index] = increase / 100;\n\n        if (index === 1) {\n            if (!player.inflation.vacuum && player.upgrades[1][2] === 1) { firstCost /= 8; }\n        } else if (index === 3) {\n            if (player.upgrades[1][1] === 1) { firstCost /= 16; }\n        } else if (index === 4) {\n            if (player.upgrades[1][2] === 1) { firstCost /= 8; }\n            if (player.researchesExtra[1][0] >= 1) { firstCost /= 16; }\n        }\n    } else if (stageIndex === 3) {\n        if (player.strangeness[3][7] >= 1) { firstCost /= global.strangeInfo.stageBoost[3]; }\n        if (index === 4) {\n            scaling[4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        let increase = 125 + 15 * index;\n        if (player.elements[2] >= 1) { increase -= 10; }\n        if (player.elements[8] >= 1) { increase -= 5; }\n        scaling[index] = increase / 100;\n\n        firstCost /= 2 ** player.strangeness[4][1];\n        if (player.researchesExtra[4][3] >= 1) { firstCost /= global.collapseInfo.neutronEffect; }\n        if (player.elements[13] >= 1) { firstCost /= 100; }\n    } else if (stageIndex === 5) {\n        if (index === 3) { scaling[3] = player.elements[31] >= 1 ? 1.1 : 1.11; }\n    }\n\n    return new Overlimit(scaling[index]).power(player.buildings[stageIndex][index as 1].true).multiply(firstCost);\n};\n\nexport const assignPuddles = () => {\n    const buildings = player.buildings[2];\n    const upgrades = player.upgrades[2];\n\n    let water5 = buildings[5].true;\n    let water4 = buildings[4].true;\n    let water3 = buildings[3].true;\n    let water2 = buildings[2].true;\n    if (upgrades[8] === 1) { water5 += buildings[6].true; }\n    if (upgrades[7] === 1) { water4 += water5; }\n    if (upgrades[6] === 1) { water3 += water4 * calculateEffects.S2Upgrade6(); }\n    if (upgrades[5] === 1) { water2 += water3 * calculateEffects.S2Upgrade5(); }\n    buildings[5].current.setValue(water5);\n    buildings[4].current.setValue(water4);\n    buildings[3].current.setValue(water3);\n    buildings[2].current.setValue(water2);\n};\n\nconst gainBuildings = (get: number, stageIndex: number, time: number) => {\n    let stageGet = stageIndex;\n    const add = new Overlimit(time);\n    if (stageIndex === 1) {\n        if (!player.inflation.vacuum && get < 5) { get += 2; }\n        add.multiply(assignBuildingsProduction[`S1Build${get + 1}` as 'S1Build1']());\n        if (!player.inflation.vacuum) { get -= 2; }\n    } else if (stageIndex === 5) {\n        add.multiply(assignBuildingsProduction.S5Build1()).divide(4 ** get);\n        stageGet = 4;\n        get++;\n    } else {\n        add.multiply(assignBuildingsProduction[`S${stageIndex}Build${get + 1}` as 'S2Build1']());\n        if (stageIndex === 4) { get = 0; }\n    }\n    if (add.lessOrEqual('0')) { return; }\n    if (!add.isFinite()) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error while gaining ${add} '${global.buildingsInfo.name[stageGet][get]}'`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n\n    const building = player.buildings[stageGet][get];\n    building.current.plus(add);\n    building.total.plus(add);\n    building.trueTotal.plus(add);\n\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current.setValue(building.current).multiply('1.78266192e-33');\n                player.buildings[3][0].total.setValue(building.total).multiply('1.78266192e-33');\n                awardMilestone(0, 3);\n            } else if (get === 5) {\n                player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23');\n            }\n        }\n    } else if (stageIndex === 2) {\n        if (get === 1) {\n            assignSubmergedLevels();\n        }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //False vacuum only\n            if (player.accretion.rank < 5 && building.current.moreThan('1e30')) { building.current.setValue('1e30'); }\n            awardMilestone(0, 3);\n        }\n    }\n};\n\nexport const assignStrangeInfo = [\n    () => { //[0] Quarks\n        const vacuum = player.inflation.vacuum;\n        const stageBoost = global.strangeInfo.stageBoost;\n        const strangeQuarks = player.strange[0].current + 1;\n\n        stageBoost[1] = strangeQuarks ** (vacuum ? 0.26 : 0.22);\n        stageBoost[2] = strangeQuarks ** (vacuum ? 0.22 : 0.18);\n        stageBoost[3] = strangeQuarks ** (vacuum ? 0.68 : 0.76);\n        stageBoost[4] = strangeQuarks ** (player.elements[26] >= 1 ? 0.32 : 0.16);\n        stageBoost[5] = strangeQuarks ** 0.06;\n    }, () => { //[1] Strangelets\n        const information = global.strangeInfo.strangeletsInfo;\n        const strangelets = player.strange[1].current;\n\n        information[0] = (Math.log2(strangelets + 2) - 1) / 100;\n        information[1] = strangelets ** 0.4 / 80 + 1;\n    }\n];\n\nconst gainStrange = (time: number) => {\n    const strange = player.strange[0];\n    const add = global.strangeInfo.strangeletsInfo[0] * (global.strangeInfo.quarksGain / player.time.stage) * time;\n    if (add <= 0) { return; }\n    if (!isFinite(add)) {\n        if (global.debug.errorGain) {\n            global.debug.errorGain = false;\n            Notify(`Error while gaining ${add} '${global.strangeInfo.name[0]}'`);\n            setTimeout(() => { global.debug.errorGain = true; }, 6e4);\n        }\n        return;\n    }\n    strange.current += add;\n    strange.total += add;\n    assignStrangeInfo[0]();\n};\n\nconst assignGlobalSpeed = () => {\n    let speed = calculateEffects.inflation1();\n    if (player.inflation.tree[0] >= 1) { speed *= 2; }\n    if (player.inflation.vacuum && player.challenges.active === null && player.inflation.tree[0] >= 2) {\n        speed *= calculateEffects.inflation0();\n    }\n    global.inflationInfo.globalSpeed = speed;\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.paused)) { return false; } //Auto should had already checked\n\n    let free = false;\n    let currency: Overlimit; //Readonly\n    if (stageIndex === 1) {\n        currency = new Overlimit(player.discharge.energy);\n        if (player.inflation.vacuum) { free = player.accretion.rank >= 6 && player.strangeness[1][9] >= 1; }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][1].current;\n    } else if (stageIndex === 3) {\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = player.buildings[6][0].current;\n    } else {\n        currency = player.buildings[4][0].current;\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        const cost = pointer.startCost[upgrade];\n        if (currency.lessThan(cost)) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (stageIndex === 2) {\n            if (upgrade === 3 || upgrade === 4) {\n                assignBuildingsProduction.multipliersAll();\n            } else if (upgrade >= 5 /*&& upgrade < 9*/) { assignPuddles(); }\n        } else if (stageIndex === 4 && upgrade === 1 && global.tab === 'upgrade') { switchTab('upgrade'); }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex];\n\n        if (level[upgrade] >= pointer.max[upgrade]) { return false; }\n        let cost = pointer.cost[upgrade];\n        if (currency.lessThan(cost)) { return false; }\n\n        let newLevels = 1;\n        if ((auto || (player.toggles.max[0] && player.stage.true >= 4)) && pointer.max[upgrade] > 1) {\n            const scaling = pointer.scaling[upgrade]; //Must be >1 (>0 for Stage 1)\n            if (stageIndex === 1) {\n                if (free) {\n                    newLevels = Math.min(Math.floor((currency.toNumber() - cost) / scaling + 1), pointer.max[upgrade] - level[upgrade]);\n                } else {\n                    const simplify = cost - scaling / 2;\n                    newLevels = Math.min(Math.floor(((simplify ** 2 + 2 * scaling * currency.toNumber()) ** 0.5 - simplify) / scaling), pointer.max[upgrade] - level[upgrade]);\n                    if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                }\n            } else {\n                newLevels = Math.min(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), pointer.max[upgrade] - level[upgrade]);\n                if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost).toNumber(); }\n            }\n        }\n\n        level[upgrade] += newLevels;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researches') {\n            if (stageIndex === 1) {\n                if (upgrade === 4) {\n                    global.dischargeInfo.base = calculateEffects.goalsBase();\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 0 || upgrade === 1) {\n                    assignSubmergedLevels();\n                } else if (upgrade === 2 || upgrade === 3) {\n                    assignBuildingsProduction.multipliersAll();\n                } else if (upgrade >= 4 /*&& upgrade < 6*/) {\n                    assignPuddles();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(0, 4, 'researches', true);\n                }\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1) {\n                if (upgrade === 2) {\n                    let update = false;\n                    if (player.stage.current < 4) {\n                        player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3;\n                        if (player.toggles.normal[0] && player.stage.active < 4) {\n                            setActiveStage(player.stage.current);\n                            update = true;\n                        }\n                    }\n                    stageUpdate(update, true);\n                    awardVoidReward(1);\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 1) {\n                    assignSubmergedLevels();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(1, 4, 'researches', true);\n                    if (player.stage.active === 4) { setRemnants(); }\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${pointer.name[upgrade]}' ${type === 'researches' ? 'Stage' : ['', 'Energy', 'Cloud', 'Rank', 'Collapse', 'Galaxy'][player.stage.active]} Research`; }\n    } else if (type === 'researchesAuto' || type === 'ASR') {\n        if (type === 'ASR') { upgrade = stageIndex; }\n        const pointer = global[`${type}Info`];\n        const level = player[type];\n\n        let effective = level[upgrade];\n        if (effective >= pointer.max[upgrade]) { return false; }\n        if (type === 'researchesAuto' && upgrade === 1 && player.strangeness[4][6] >= 1) { effective = Math.max(effective - 1, 0); }\n        const cost = pointer.costRange[upgrade][effective];\n        if (currency.lessThan(cost)) { return false; }\n\n        level[upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 2) {\n                if (player.inflation.vacuum) {\n                    level[upgrade] = Math.max(level[upgrade] <= 1 && player.strangeness[3][4] < 1 ? 1 : level[upgrade] <= 2 && player.strangeness[2][4] < 1 ? 2 : level[upgrade] <= 3 && player.strangeness[4][4] < 1 ? 3 : 4, level[upgrade]);\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${type === 'ASR' ? pointer.name : pointer.name[upgrade]}' automatization Research`; }\n    } else if (type === 'elements') {\n        let level = player.elements[upgrade];\n        if (level >= 1) { return false; }\n\n        if (level === 0) {\n            const cost = global.elementsInfo.startCost[upgrade];\n            if (currency.lessThan(cost)) { return false; }\n            /*if (!free) {*/ currency.minus(cost); //}\n        } else if (!auto) { return false; }\n        level = player.researchesAuto[1] >= 1 || level === 0.5 ? 1 : 0.5;\n        player.elements[upgrade] = level;\n\n        /* Special cases */\n        if (player.collapse.show < upgrade) { player.collapse.show = upgrade; }\n        if (level === 1) {\n            if (upgrade === 7 || upgrade === 16 || upgrade === 20 || upgrade === 25 || upgrade === 28) {\n                calculateMaxLevel(1, 4, 'researches', true);\n            } else if (upgrade === 9 || upgrade === 17) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            } else if (upgrade === 11) {\n                calculateMaxLevel(2, 4, 'researches', true);\n            } else if (upgrade === 26) {\n                player.stage.current = 5;\n                if (player.stage.true < 5) {\n                    player.stage.true = 5;\n                    player.event = false;\n                    visualTrueStageUnlocks();\n                }\n                if (player.toggles.normal[0] && player.stage.active === 4 && (!player.inflation.vacuum || player.strangeness[5][3] >= 1)) {\n                    setActiveStage(5);\n                    stageUpdate(true, true);\n                } else { stageUpdate(false, true); }\n                assignStrangeInfo[0]();\n                awardVoidReward(5);\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New Element '${global.elementsInfo.name[upgrade]}' ${player.elements[upgrade] >= 1 ? 'obtained' : 'awaiting activation'}`; }\n    }\n\n    if (!free) {\n        if (stageIndex === 1) {\n            player.discharge.energy = Math.round(currency.toNumber());\n        } else if (stageIndex === 2) {\n            const drops = player.buildings[2][1];\n            const old = drops.true;\n            if (currency.lessThan(old) && player.buildings[2][2].current.lessThan('1')) {\n                drops.true = Math.floor(currency.toNumber());\n                if (player.inflation.vacuum) {\n                    addEnergy(drops.true - old, 1, 2);\n                } else if (currency.lessOrEqual('0')) {\n                    player.buildings[2][0].current.max('2.7753108348135e-3');\n                }\n            }\n        } else if (stageIndex === 3) {\n            if (player.inflation.vacuum) { player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33'); }\n        }\n    }\n\n    if (type === 'upgrades' || type === 'elements') {\n        visualUpdateUpgrades(upgrade, stageIndex, type);\n    } else {\n        if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(upgrade, stageIndex, type); }\n        visualUpdateResearches(upgrade, stageIndex, type);\n    }\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const buyStrangeness = (upgrade: number, stageIndex: number, type: 'strangeness' | 'inflation', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.paused)) { return false; }\n\n    if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (player.strange[0].current < pointer.cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        player.strange[0].current -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 4) {\n                if (player.researchesAuto[2] < 1 && (player.inflation.vacuum || player.stage.current === 1)) {\n                    player.researchesAuto[2] = player.inflation.vacuum ? (player.strangeness[3][4] < 1 ? 1 : player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : 4) : 1;\n                    visualUpdateResearches(2, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 5) {\n                player.ASR[1] = global.ASRInfo.max[1];\n                visualUpdateResearches(0, 1, 'ASR');\n            } else if (upgrade === 7) {\n                assignTrueEnergy();\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                calculateMaxLevel(4, 2, 'researches', true);\n                calculateMaxLevel(5, 2, 'researches', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum ? player.researchesAuto[2] === 2 : (player.researchesAuto[2] < 1 && player.stage.current === 2)) {\n                    player.researchesAuto[2] = player.inflation.vacuum ? (player.strangeness[4][4] < 1 ? 3 : 4) : 1;\n                    visualUpdateResearches(2, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 5) {\n                player.ASR[2] = global.ASRInfo.max[2];\n                visualUpdateResearches(0, 2, 'ASR');\n            } else if (upgrade === 8) {\n                calculateMaxLevel(2, 2, 'researches', true);\n                calculateMaxLevel(3, 2, 'researches', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum ? player.researchesAuto[2] === 1 : (player.researchesAuto[2] < 1 && player.stage.current === 3)) {\n                    player.researchesAuto[2] = player.inflation.vacuum ? (player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : 4) : 1;\n                    visualUpdateResearches(2, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 5) {\n                player.ASR[3] = global.ASRInfo.max[3];\n                visualUpdateResearches(0, 3, 'ASR');\n            } else if (upgrade === 6) {\n                if (player.researchesAuto[0] < player.strangeness[3][6]) {\n                    player.researchesAuto[0] = player.strangeness[3][6];\n                    visualUpdateResearches(0, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 9) {\n                global.debug.rankUpdated = null;\n                assignMaxRank();\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum ? player.researchesAuto[2] === 3 : (player.researchesAuto[2] < 1 && player.stage.current >= 4)) {\n                    player.researchesAuto[2] = player.inflation.vacuum ? 4 : 1;\n                    visualUpdateResearches(2, 0, 'researchesAuto');\n                }\n            } else if (upgrade === 5) {\n                player.ASR[4] = global.ASRInfo.max[4];\n                visualUpdateResearches(0, 4, 'ASR');\n            } else if (upgrade === 6) {\n                if (player.researchesAuto[1] < player.strangeness[4][6]) {\n                    player.researchesAuto[1] = player.strangeness[4][6];\n                    visualUpdateResearches(1, 0, 'researchesAuto');\n                }\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 8) {\n                if (player.elements[0] < 1) {\n                    player.elements[0] = 1;\n                    visualUpdateUpgrades(0, 4, 'elements');\n                }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 3) {\n                if (player.inflation.vacuum) { stageUpdate(false, true); }\n            } else if (upgrade === 4) {\n                if (player.strangeness[5][5] >= 1) {\n                    player.ASR[5] = global.ASRInfo.max[5];\n                    visualUpdateResearches(0, 5, 'ASR');\n                }\n            } else if (upgrade === 5) {\n                player.ASR[5] = player.strangeness[5][4] >= 1 ? global.ASRInfo.max[5] : 2;\n                visualUpdateResearches(0, 5, 'ASR');\n            }\n        }\n        assignStrangeInfo[0]();\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.strangeness[stageIndex][upgrade])} for '${pointer.name[upgrade]}' Strangeness from ${global.stageInfo.word[stageIndex]} section`; }\n    } else if (type === 'inflation') {\n        const pointer = global.inflationTreeInfo;\n\n        if (player.inflation.tree[upgrade] >= pointer.max[upgrade]) { return false; }\n        if (player.cosmon.current < pointer.cost[upgrade]) { return false; }\n\n        player.inflation.tree[upgrade]++;\n        player.cosmon.current -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (upgrade === 0) {\n            assignChallengeInformation();\n            for (let s = 1; s < 6; s++) {\n                for (let i = 0; i < playerStart.milestones[s].length; i++) {\n                    assignMilestoneInformation(i, s);\n                }\n            }\n        }\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Strength of Inflation Research '${pointer.name[upgrade]}' increased ${player.inflation.tree[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.inflation.tree[upgrade])}`; }\n    }\n\n    calculateResearchCost(upgrade, stageIndex, type);\n    if (type === 'inflation') {\n        visualUpdateInflation(upgrade);\n    } else {\n        visualUpdateResearches(upgrade, stageIndex, type);\n    }\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const inflationRefund = async() => {\n    const { tree } = player.inflation;\n    const cosmon = player.cosmon;\n    const challenge = player.challenges.active;\n    if ((cosmon.current === cosmon.total && tree[0] < 1) || !await Confirm(`This will cause Stage reset to refund spended Cosmon${challenge !== null ? ' and restart current Challenge' : ''}, continue?`)) { return; }\n\n    if (challenge !== null) {\n        player.challenges.active = null;\n        challengeReset(null, challenge);\n    }\n    stageFullReset();\n    if (challenge !== null) {\n        player.challenges.active = challenge;\n        challengeReset(challenge, null);\n    }\n\n    cosmon.current = cosmon.total;\n    for (let i = 0; i < playerStart.inflation.tree.length; i++) {\n        tree[i] = 0;\n        calculateResearchCost(i, 0, 'inflation');\n    }\n    visualUpdateInflation();\n\n    /* Special cases */\n    assignChallengeInformation();\n    for (let s = 1; s < 6; s++) { //Due to index 0\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Cosmon has been refunded'; }\n};\n\n//Currently can't allow price to be more than 2**1024. Because missing sorting function for numbers that big\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'strangeness' | 'inflation') => {\n    if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        pointer.cost[research] = stageIndex === 1 ?\n            pointer.startCost[research] + pointer.scaling[research] * player[type][stageIndex][research] :\n            pointer.startCost[research] * pointer.scaling[research] ** player[type][stageIndex][research];\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        pointer.cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((pointer.startCost[research] * pointer.scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    } else if (type === 'inflation') {\n        const pointer = global.inflationTreeInfo;\n\n        pointer.cost[research] = Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.inflation.tree[research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness', addAuto = false) => {\n    let max = null;\n    if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 2) {\n                max = 4;\n                if (player.strangeness[2][8] >= 1) { max += 3; }\n            } else if (research === 3) {\n                max = 4;\n                if (player.strangeness[2][8] >= 2) { max++; }\n            } else if (research === 4) {\n                max = 2;\n                if (player.strangeness[2][2] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.strangeness[2][2] >= 2) { max++; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 3 + (3 * player.researches[4][2]) + (3 * player.researches[4][3]);\n                if (player.elements[9] >= 1) { max += 12; }\n                if (player.elements[17] >= 1) { max += 24; }\n            } else if (research === 1) {\n                max = 2 + player.researchesExtra[4][2] + player.researchesExtra[4][3];\n                if (player.elements[7] >= 1) { max += 2; }\n                if (player.elements[16] >= 1) { max++; }\n                if (player.elements[20] >= 1) { max++; }\n                if (player.elements[25] >= 1) { max++; }\n                if (player.elements[28] >= 1) { max++; }\n            } else if (research === 2) {\n                max = 1;\n                if (player.elements[11] >= 1) { max++; }\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0) {\n                max = player.inflation.vacuum ? 4 : 3;\n            } else if (research === 1) {\n                max = player.inflation.vacuum ? 4 : 3;\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                max = Math.floor(14 + (2 * calculateEffects.effectiveRank()));\n                if (player.strangeness[3][2] >= 1) { max += 6; }\n            } else if (research === 1) {\n                max = 6;\n                if (player.strangeness[3][2] >= 2) { max += 2; }\n            } else if (research === 4) {\n                max = player.accretion.rank - 2;\n            }\n        }\n    } else if (type === 'researchesAuto') {\n        if (research === 2) {\n            max = player.inflation.vacuum ? 4 : 1;\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            max = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            max = player.inflation.vacuum ? 6 : 5;\n        } else if (stageIndex === 3) {\n            max = player.inflation.vacuum ? 5 : 4;\n        } else if (stageIndex === 4) {\n            max = player.inflation.vacuum ? 5 : 4;\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 0) {\n                max = 6;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 2) {\n            if (research === 1) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 6) {\n                max = player.inflation.vacuum || global.milestonesInfoS6.active[2] || player.milestones[4][0] >= 8 ? 2 : 1;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 2) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 6) {\n                max = !player.inflation.vacuum && player.milestones[5][0] >= 8 ? 2 : 1;\n            }\n        }\n    }\n    if (max !== null) {\n        if (max < 0) { max = 0; }\n        if (type === 'researchesAuto' || type === 'ASR') {\n            global[`${type}Info`].max[type === 'ASR' ? stageIndex : research] = max;\n        } else {\n            global[`${type}Info`][stageIndex].max[research] = max;\n        }\n    }\n\n    if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(research, stageIndex, type); }\n    visualUpdateResearches(research, stageIndex, type);\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesAddOne(type, [stageIndex, research]); }\n};\n\nexport const autoUpgradesSet = (which: number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const array = [];\n    const level = player.upgrades[which];\n    const pointer = global.upgradesInfo[which];\n    for (let i = 0; i < pointer.maxActive; i++) {\n        if (level[i] < 1) { array.push(i); }\n    }\n    global.automatization.autoU[which] = array.sort((a, b) => pointer.startCost[a] - pointer.startCost[b]);\n};\n\nconst autoUpgradesBuy = (stageIndex: number) => {\n    if (!player.toggles.auto[5] || player.researchesAuto[0] < 1) { return; }\n    const auto = global.automatization.autoU[stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: number) => {\n    if (!player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n    const array = [];\n    const level = player[type][which];\n    const pointer = global[`${type}Info`][which];\n    for (let i = 0; i < pointer.maxActive; i++) {\n        if (level[i] < pointer.max[i]) { array.push(i); }\n    }\n    global.automatization[type === 'researches' ? 'autoR' : 'autoE'][which] = array.sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n};\n/** Add only 1 Research for [stage, research] if it isn't already present */\nconst autoResearchesAddOne = (type: 'researches' | 'researchesExtra', which: number[]) => {\n    if (!player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n    const [s, a] = which;\n    const pointer = global[`${type}Info`][s];\n    if (player[type][s][a] >= pointer.max[a]) { return; }\n\n    let newIndex;\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][s];\n    for (let i = 0; i < auto.length; i++) {\n        if (auto[i] === a) { return; }\n        if (newIndex === undefined && pointer.cost[a] < pointer.cost[auto[i]]) {\n            newIndex = i;\n        }\n    }\n    if (newIndex !== undefined) {\n        auto.splice(newIndex, 0, a);\n    } else { auto.push(a); }\n};\n\nconst autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    if (type === 'researches') {\n        if (!player.toggles.auto[6] || player.researchesAuto[0] < 2) { return; }\n    } else /*if (type === 'researchesExtra')*/ {\n        if (!player.toggles.auto[7] || player.researchesAuto[0] < 3) { return; }\n    }\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    const pointer = global[`${type}Info`][stageIndex];\n\n    let sort = false;\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else if (!bought) {\n            if (pointer.cost[auto[i]] > pointer.cost[auto[i + 1]]) {\n                sort = true;\n                continue;\n            }\n            break;\n        }\n    }\n    if (sort) { auto.sort((a, b) => pointer.cost[a] - pointer.cost[b]); }\n};\n\nexport const autoElementsSet = () => {\n    if (!player.toggles.auto[8]) { return; }\n\n    const array = [];\n    const elements = player.elements;\n    for (let i = 1; i < (player.inflation.vacuum ? playerStart.elements.length : 29); i++) {\n        if (elements[i] < 1) { array.push(i); }\n    }\n    global.automatization.elements = array;\n};\n\nconst autoElementsBuy = () => {\n    if (!player.toggles.auto[8] || player.researchesAuto[1] < 2) { return; }\n    const auto = global.automatization.elements;\n    const elements = player.elements;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] > 0) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'buildings' | 'normal' | 'hover' | 'max' | 'auto', change = false) => {\n    const toggles = type === 'buildings' ? player.toggles.buildings[player.stage.active] : player.toggles[type];\n\n    if (change) {\n        if (global.paused) { return; }\n        if (type === 'buildings') {\n            const maxLength = playerStart.buildings[player.stage.active].length;\n            if (number === 0) {\n                toggles[0] = !toggles[0];\n                for (let i = 1; i < maxLength; i++) {\n                    toggles[i] = toggles[0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                if (number >= maxLength) { return; }\n\n                let anyOn = false;\n                toggles[number] = !toggles[number];\n                for (let i = 1; i <= player.ASR[player.stage.active]; i++) {\n                    if (toggles[i]) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                if (toggles[0] !== anyOn) {\n                    toggles[0] = anyOn;\n                    toggleSwap(0, 'buildings');\n                }\n            }\n        } else { toggles[number] = !toggles[number]; }\n    }\n\n    let extraText;\n    let toggleHTML;\n    if (type === 'buildings') {\n        toggleHTML = getId(`toggleBuilding${number}`);\n        extraText = number === 0 ? 'All ' : 'Auto ';\n    } else if (type === 'hover') {\n        toggleHTML = getId(`toggleHover${number}`);\n        extraText = 'Hover to create ';\n    } else if (type === 'max') {\n        toggleHTML = getId(`toggleMax${number}`);\n        extraText = 'Max create ';\n    } else if (type === 'auto') {\n        toggleHTML = getId(`toggleAuto${number}`);\n        extraText = 'Auto ';\n    } else {\n        toggleHTML = getId(`toggleNormal${number}`);\n        extraText = '';\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = `${extraText}OFF`;\n    } else {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = `${extraText}ON`;\n    }\n};\n\nexport const toggleConfirm = (number: number, change = false) => {\n    const toggles = player.toggles.confirm;\n    if (change) { toggles[number] = toggles[number] === 'Safe' ? 'None' : 'Safe'; }\n\n    const toggleHTML = getId(`toggleConfirm${number}`);\n    toggleHTML.textContent = toggles[number];\n    if (toggles[number] === 'Safe') {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n    }\n};\n\nconst assignQuarksGain = () => {\n    global.strangeInfo.quarksGain = calculateEffects.strangeGain(true);\n};\n\nexport const stageResetCheck = (stageIndex: number, quarks = null as number | null): boolean => {\n    const allowedChallenge = player.challenges.active === null || global.challengesInfo.reset[player.challenges.active] !== 'stage';\n    if (stageIndex === 5) {\n        assignQuarksGain(); //Also visually updates numbers\n        if (quarks !== null) {\n            if (player.elements[26] < 0.5) { return false; }\n\n            const { stage } = player;\n            const peakCheck = global.strangeInfo.quarksGain / player.time.stage;\n            if (stage.peak < peakCheck) { stage.peak = peakCheck; }\n\n            if (player.elements[26] < 1) { return false; }\n            if (player.strange[1].current > 0) { gainStrange(quarks); }\n\n            if (!player.toggles.auto[0] || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2) || !allowedChallenge ||\n                (stage.input[0] <= 0 && stage.input[1] <= 0) || stage.input[0] > global.strangeInfo.quarksGain || stage.input[1] > player.time.stage) { return false; }\n            stageResetReward(stageIndex);\n            return true;\n        }\n        return allowedChallenge && player.elements[26] >= 1;\n    } else if (stageIndex === 3) {\n        if (player.buildings[3][0].current.lessThan('2.45576045e31')) { return false; }\n    } else if (stageIndex === 2) {\n        if (player.buildings[2][1].current.lessThan('1.19444e29')) { return false; }\n    } else if (stageIndex === 1) {\n        if (player.buildings[1][3].current.lessThan('1.67133125e21')) { return false; }\n    } else { return false; }\n\n    if (!allowedChallenge) { return false; }\n    if (quarks !== null) { //Just checks if auto\n        if (player.strangeness[5][6] < 1) { return false; }\n        if (player.toggles.normal[2]) { //False vacuum only\n            const info = global.milestonesInfo[stageIndex];\n            for (let i = 0; i < info.max.length; i++) {\n                if (player.milestones[stageIndex][i] < info.max[i] && info.time[i] >= player.time.stage) { return false; }\n            }\n        }\n        stageResetReward(stageIndex);\n    }\n    return true;\n};\nexport const stageResetUser = async() => {\n    if (global.paused) { return; }\n    const active = player.inflation.vacuum || (player.stage.active === 4 && (player.stage.true >= 7 || player.event)) ? 5 : player.stage.active;\n    if (!stageResetCheck(active)) { return; }\n\n    if (player.toggles.confirm[0] !== 'None') {\n        let errorText = '';\n        if (player.upgrades[5][3] === 1) {\n            assignMergeReward();\n            const universeCost = calculateBuildingsCost(1, 6);\n            if (universeCost.lessOrEqual(player.merge.reward[0] + (calculateMergeMaxResets() < player.merge.resets ? global.mergeInfo.checkReward[0] : 0))) {\n                errorText += `can create an Universe${universeCost.moreThan(player.merge.reward[0]) ? ' after Merge' : ''}`;\n            }\n        }\n        if (player.researchesExtra[5][0] >= 1) {\n            const galaxyCost = calculateBuildingsCost(3, 5);\n            if (galaxyCost.lessOrEqual(Math.max(player.collapse.mass, global.collapseInfo.newMass))) {\n                if (errorText !== '') { errorText += '\\nAlso '; }\n                errorText += `can afford a Galaxy${galaxyCost.moreThan(player.collapse.mass) ? ' after Collapse' : ''}`;\n            }\n        }\n        if (errorText !== '') {\n            if (!await Confirm(`Prevented Stage reset because ${errorText}\\nReset anyway?`)) { return; }\n            if (!stageResetCheck(active)) { return Notify('Stage reset canceled, requirements are no longer met'); }\n        }\n    }\n    if (globalSave.SRSettings[0]) {\n        let message;\n        if (player.stage.true >= 5) {\n            message = `Caused Stage reset for ${format(active >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false))} Strange quarks`;\n            const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(active >= 4, 1) : 0;\n            if (strangelets > 0) { message += ` and ${format(strangelets)} Strangelets`; }\n        } else { message = `${global.stageInfo.word[player.stage.true]} Stage ended, but new one started`; }\n        getId('SRMain').textContent = message;\n    }\n    stageResetReward(active);\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage } = player;\n\n    stage.resets++;\n    let fullReset = true;\n    let update: null | boolean = true;\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        if (stage.active === 1 || stage.active >= 6) {\n            update = false;\n        } else { setActiveStage(1); }\n        stage.current = 1;\n        if (stage.true >= 7) {\n            resetThese.push(6);\n        } else if (stage.resets < 2) { playEvent(7); }\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 4) {\n            const check = stage.current === stage.active;\n            stage.current++;\n            if (stage.current === 2 && player.milestones[2][1] >= 7) { stage.current++; }\n            if (stage.current === 3 && player.milestones[3][1] >= 7) { stage.current++; }\n            if (check) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.event = false;\n                visualTrueStageUnlocks();\n            }\n        } else {\n            stage.current = player.milestones[1][1] < 6 ? 1 : player.milestones[2][1] < 7 ? 2 : player.milestones[3][1] < 7 ? 3 : 4;\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            resetThese.unshift(4);\n        }\n        if (stage.true >= 7) { resetThese.push(6); }\n    } else {\n        update = stageIndex === stage.active ? false : null;\n        fullReset = false;\n    }\n\n    if (stage.true >= 5) {\n        const { strange } = player;\n        const exportReward = player.time.export;\n        const quarks = stageIndex >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n        const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(stageIndex >= 4, 1) : 0;\n        strange[0].current += quarks;\n        strange[0].total += quarks;\n        if (strangelets > 0) {\n            strange[1].current += strangelets;\n            strange[1].total += strangelets;\n            if (strangelets > exportReward[2]) { exportReward[2] = strangelets; }\n            assignStrangeInfo[1]();\n        }\n        if (quarks > exportReward[1]) { exportReward[1] = quarks; }\n        if (resetThese.includes(4)) { player.elements[26] = 0; } //Lazy fix for Strange boost\n        assignStrangeInfo[0]();\n\n        if (stageIndex >= 4) {\n            const history = player.history.stage;\n            const storage = global.historyStorage.stage;\n            const realTime = player.time.stage;\n            storage.unshift([realTime, quarks, strangelets, 0]);\n            if (storage.length > 100) { storage.length = 100; }\n            if (quarks / realTime > history.best[1] / history.best[0]) {\n                history.best = [realTime, quarks, strangelets, 0];\n            }\n        }\n    }\n\n    resetStage(resetThese, update, fullReset);\n};\n/* Export if required */\nconst stageFullReset = () => {\n    const vacuum = player.inflation.vacuum;\n    const current = vacuum ? 5 : player.stage.current;\n    if (!vacuum) {\n        if (current !== 1 && player.milestones[1][1] >= 6) {\n            if (stageResetCheck(1)) {\n                stageResetReward(1);\n            } else { resetStage([1], false, false); }\n        }\n        if (current !== 2 && player.milestones[2][1] >= 7) {\n            if (stageResetCheck(2)) {\n                stageResetReward(2);\n            } else { resetStage([2], false, false); }\n        }\n        if (current !== 3 && player.milestones[3][1] >= 7) {\n            if (stageResetCheck(3)) {\n                stageResetReward(3);\n            } else { resetStage([3], false, false); }\n        }\n    }\n\n    if (stageResetCheck(current)) {\n        stageResetReward(current);\n    } else {\n        const resetThese = vacuum ? [1, 2, 3, 4, 5] : [current];\n        if (player.stage.true >= 7) { resetThese.push(6); }\n        let update = false;\n        if (vacuum) {\n            if (player.stage.active !== 1 && player.stage.active < 6) {\n                setActiveStage(1);\n                update = true;\n            }\n            player.stage.current = 1;\n        }\n        resetStage(resetThese, update);\n    }\n};\n\nexport const switchStage = (stage: number, active = stage) => {\n    if (!global.stageInfo.activeAll.includes(stage) || player.stage.active === stage) {\n        if (player.stage.active === stage && global.trueActive !== stage) {\n            global.trueActive = stage;\n            getId(`stageSwitch${stage}`).style.textDecoration = 'underline';\n        }\n        if (!global.paused) {\n            visualUpdate();\n            numbersUpdate();\n        }\n        return;\n    }\n\n    setActiveStage(stage, active);\n    stageUpdate();\n};\n\n/** Doesn't check for Stage being unlocked, requires stageUpdate() call afterwards */\nexport const setActiveStage = (stage: number, active = stage) => {\n    getId(`stageSwitch${player.stage.active}`).style.textDecoration = '';\n    player.stage.active = stage;\n    global.trueActive = active;\n    getId(`stageSwitch${stage}`).style.textDecoration = 'underline' + (global.trueActive !== stage ? ' dashed' : '');\n\n    if (global.tab === 'inflation') {\n        if (stage !== 6) { switchTab('upgrade'); }\n    } else if (global.tab === 'Elements') {\n        if (stage !== 4 && stage !== 5) { switchTab('upgrade'); }\n    }\n    if (global.tab === 'upgrade') {\n        if (global.subtab.upgradeCurrent === 'Elements' && stage !== 4 && stage !== 5) { switchTab('upgrade', 'Upgrades'); }\n    }\n};\n\n/** And scaling */\nconst assignDischargeCost = () => {\n    let scale = (2 * player.researches[1][3]) + (player.strangeness[1][2] / 2);\n    if (player.challenges.superVoid[1] >= 1 && (player.inflation.tree[3] >= 1 || player.challenges.active === 0)) { scale++; }\n    global.dischargeInfo.next = Math.round((10 - scale) ** player.discharge.current);\n    global.dischargeInfo.scaling = 10 - scale;\n};\n/** Also will assign energyType */\nexport const assignTrueEnergy = () => {\n    const energyType = player.inflation.vacuum ? [[],\n        [0, 1, 3, 5, 10, 20],\n        [0, 20, 30, 40, 50, 60, 120],\n        [0, 20, 40, 60, 120, 160],\n        [0, 80, 160, 240, 320, 400],\n        [0, 400, 400, 2000]\n    ] : [[], [0, 1, 5, 20], [], [], [], []];\n\n    let energyTrue = 0;\n    for (let s = 1; s < energyType.length; s++) {\n        let add = 0;\n        for (let i = 1; i < energyType[s].length; i++) {\n            let value = energyType[s][i];\n            if (s === 1) {\n                if (i === 1 && player.inflation.vacuum) { value += player.strangeness[1][7] * 2; }\n            } else if (player.challenges.active === 0) { value /= 2; }\n\n            add += value * player.buildings[s][i as 1].true;\n            energyType[s][i] = value;\n        }\n        global.dischargeInfo.energyStage[s] = add;\n        energyTrue += add;\n    }\n    global.dischargeInfo.energyType = energyType;\n    global.dischargeInfo.energyTrue = energyTrue;\n};\n\nconst dischargeResetCheck = (goals = false): boolean => {\n    assignDischargeCost(); //Also visually updates numbers\n    if (player.upgrades[1][5] !== 1) { return false; }\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n    const level = player.strangeness[1][4];\n\n    if (goals) {\n        if (level >= 2 && energy >= info.next) {\n            dischargeReset(true);\n            if (!player.toggles.auto[1]) { return false; }\n            assignDischargeCost();\n        } else if (!player.toggles.auto[1] || (level < 1 && (player.researchesAuto[2] < 1 || (!player.inflation.vacuum && player.stage.current !== 1)))) { return false; }\n\n        if (energy >= info.energyTrue && (level >= 2 || energy < info.next)) { return false; }\n        dischargeReset();\n        return true;\n    }\n    return energy < info.energyTrue || (level < 2 && energy >= info.next);\n};\nexport const dischargeResetUser = async() => {\n    if (global.paused || !dischargeResetCheck()) { return; }\n\n    if (player.toggles.confirm[1] !== 'None') {\n        if (player.stage.active !== 1) {\n            if (!await Confirm(\"Prevented Discharge because current active Stage isn't Microworld\\nReset anyway?\")) { return; }\n            if (!dischargeResetCheck()) { return Notify('Discharge canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Discharge to reset spent Energy${player.discharge.energy >= global.dischargeInfo.next ? ', also reached new goal' : ''}`; }\n    dischargeReset();\n    numbersUpdate();\n};\n\nconst dischargeReset = (noReset = false) => {\n    if (player.discharge.energy >= global.dischargeInfo.next) {\n        player.discharge.current++;\n        if (!noReset) {\n            player.discharge.energy -= global.dischargeInfo.next;\n        } //else { global.dischargeInfo.total = calculateEffects.effectiveGoals(); }\n    }\n    awardVoidReward(1);\n    if (!noReset) { reset('discharge', [1]); }\n};\n\nconst assignNewClouds = () => {\n    const softcap = player.challenges.active === 0 ? 0.4 : player.inflation.vacuum ? 0.5 : 0.6;\n    global.vaporizationInfo.get.setValue(player.vaporization.clouds).power(1 / softcap).plus(\n        new Overlimit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(calculateEffects.S2Upgrade2())\n    ).power(softcap).minus(player.vaporization.clouds);\n};\n\nconst vaporizationResetCheck = (clouds = null as number | null): boolean => {\n    assignNewClouds(); //Also visually updates numbers\n    if (player.upgrades[2][2] < 1 || global.vaporizationInfo.get.lessOrEqual('0')) { return false; } //Can be negative\n\n    if (clouds !== null) {\n        const level = player.strangeness[2][4];\n        if (level >= 2) {\n            vaporizationReset(clouds);\n            if (!player.toggles.auto[2] || player.toggles.normal[1]) { return false; }\n            assignNewClouds();\n        } else if (!player.toggles.auto[2] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 3 : (player.researchesAuto[2] < 1 || player.stage.current !== 2)))) { return false; }\n\n        const vaporization = player.vaporization;\n        if (player.inflation.vacuum && vaporization.input[1] > 0 && vaporization.clouds.moreOrEqual(vaporization.input[1])) { return false; }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan(vaporization.input[0])) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\nexport const vaporizationResetUser = async() => {\n    if (global.paused || !vaporizationResetCheck()) { return; }\n\n    if (player.toggles.confirm[2] !== 'None') {\n        let errorText = '';\n        if (player.strangeness[2][4] >= 2) {\n            errorText += 'already gaining Clouds without needing to reset';\n        }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan('2')) {\n            if (errorText !== '') { errorText += '\\nAlso '; }\n            errorText += 'boost from doing it is below 2x';\n        }\n        if (player.stage.active !== 2) {\n            if (errorText !== '') { errorText += '\\nAlso '; }\n            errorText += \"current active Stage isn't Submerged\";\n        }\n        if (errorText !== '') {\n            if (!await Confirm(`Prevented Vaporization because ${errorText}\\nReset anyway?`)) { return; }\n            if (!vaporizationResetCheck()) { return Notify('Vaporization canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        getId('SRMain').textContent = `Caused Vaporization for ${format(global.vaporizationInfo.get)} Clouds, +${format(player.vaporization.clouds.moreThan('0') ? new Overlimit(global.vaporizationInfo.get).divide(player.vaporization.clouds).multiply('1e2') : 100)}%`;\n    }\n    vaporizationReset();\n    numbersUpdate();\n};\n\nconst vaporizationReset = (autoClouds = null as number | null) => {\n    const vaporization = player.vaporization;\n\n    if (autoClouds !== null) {\n        vaporization.clouds.plus(new Overlimit(global.vaporizationInfo.get).multiply(autoClouds / 40));\n    } else {\n        vaporization.clouds.plus(global.vaporizationInfo.get);\n        if (player.stage.true === 2) { global.vaporizationInfo.get.setValue('0'); }\n    }\n    if (vaporization.cloudsMax.lessThan(vaporization.clouds)) { vaporization.cloudsMax.setValue(vaporization.clouds); }\n    awardVoidReward(2);\n    if (autoClouds === null) { reset('vaporization', player.inflation.vacuum ? [1, 2] : [2]); }\n};\n\nexport const assignMaxRank = () => {\n    if (player.inflation.vacuum) {\n        global.accretionInfo.maxRank = player.strangeness[3][9] >= 1 ? 7 : 6;\n    } else {\n        global.accretionInfo.maxRank = player.stage.true >= 4 || (player.stage.true === 3 && player.event) ? 5 : 4;\n    }\n};\n\nconst rankResetCheck = (auto = false): boolean => {\n    const rank = player.accretion.rank;\n    const info = global.accretionInfo;\n    if (rank >= info.maxRank) { return false; }\n    const level = player.strangeness[3][4];\n\n    if (player.challenges.active === 0 && rank >= 6) {\n        const scaling = global.buildingsInfo.increase[5][3]; //Will require updating if anything will make Galaxies (not scaling) cheaper\n        if (player.buildings[5][3].true < logAny(info.rankCost[rank] / 1.98847e38 * (scaling - 1) + 1, scaling)) { return false; }\n    } else if ((player.buildings[3][0][level >= 2 ? 'total' : 'current']).lessThan(info.rankCost[rank])) {\n        return false;\n    }\n\n    if (auto) {\n        if (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 2 : (player.researchesAuto[2] < 1 || player.stage.current !== 3))) { return false; }\n        rankReset();\n    }\n    return true;\n};\nexport const rankResetUser = async() => {\n    if (global.paused || !rankResetCheck()) { return; }\n\n    if (player.toggles.confirm[3] !== 'None' && player.accretion.rank !== 0) {\n        let errorText = '';\n        if (player.inflation.vacuum && (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) && player.accretion.rank >= 4) {\n            errorText += `current ${player.researchesExtra[2][1] <= 0 ? \"level for Cloud Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make next Rank slow`;\n        }\n        if (player.stage.active !== 3) {\n            if (errorText !== '') { errorText += '\\nAlso '; }\n            errorText += \"current active Stage isn't Accretion\";\n        }\n        if (errorText !== '') {\n            if (!await Confirm(`Prevented Rank increase because ${errorText}\\nReset anyway?`)) { return; }\n            if (!rankResetCheck()) { return Notify('Rank increase canceled, requirements are no longer met'); }\n        }\n    }\n\n    rankReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Rank increased to '${global.accretionInfo.rankName[player.accretion.rank]}' (Rank number is ${player.accretion.rank})`; }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        if (player.toggles.normal[0] && player.stage.active < 4) {\n            setActiveStage(4);\n            stageUpdate(true, true);\n        } else { stageUpdate(false, true); }\n    }\n    awardVoidReward(3);\n    reset('rank', player.inflation.vacuum ? [1, 2, 3] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    if (player.stage.active === 3) { visualUpdate(); }\n};\n\nconst calculateMassGain = (): number => {\n    const elements = player.elements;\n\n    let massGain = 0.004;\n    if (elements[3] >= 1) { massGain += 0.002; }\n    if (elements[5] >= 1) { massGain += 0.0002 * player.buildings[4][1].true; }\n    massGain *= elements[15] >= 1 ? global.collapseInfo.trueStars : player.buildings[4][1].true;\n    if (player.inflation.vacuum) {\n        massGain = (massGain * (player.challenges.active === 0 ? 48 : 96)) + 1;\n    } else {\n        if (elements[10] >= 1) { massGain *= 2; }\n        if (player.researchesExtra[4][1] >= 1) { massGain *= calculateEffects.S4Extra1(); }\n        massGain *= calculateEffects.star[2]();\n        if (player.strangeness[5][7] >= 1) { massGain *= global.strangeInfo.stageBoost[5]; }\n    }\n    return massGain;\n};\n\nconst assignNewMass = () => {\n    if (player.inflation.vacuum) {\n        assignSharedHardcapDelays();\n        assignSolarMassHardcap();\n        global.collapseInfo.newMass = Math.min(player.buildings[1][0].current.toNumber() * 8.96499278339628e-67, global.inflationInfo.massCap); //1.78266192e-33 / 1.98847e33\n    } else { global.collapseInfo.newMass = calculateMassGain(); }\n};\nconst assignNewRemnants = () => {\n    const building = player.buildings[4];\n    const starCheck = global.collapseInfo.starCheck;\n    const stars = player.collapse.stars;\n    starCheck[0] = building[2].trueTotal.moreThan('0') ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 10) - stars[0], 0) : 0;\n    starCheck[1] = Math.max(building[3].true - stars[1], 0);\n    starCheck[2] = Math.max(building[4].true + (building[5].true * player.researches[4][5]) - stars[2], 0);\n};\n\nconst collapseResetCheck = (remnants = false): boolean => {\n    assignNewRemnants(); //Also visually updates numbers\n    assignNewMass(); //Required for Milestones\n    if (player.upgrades[4][0] < 1) { return false; }\n    const info = global.collapseInfo;\n    const collapse = player.collapse;\n    const level = player.strangeness[4][4];\n\n    if (remnants) {\n        if (level >= 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) {\n            collapseReset(true);\n            if (!player.toggles.auto[4]) { return false; }\n            info.starCheck[0] = 0;\n            info.starCheck[1] = 0;\n            info.starCheck[2] = 0;\n            assignNewMass();\n        } else if (!player.toggles.auto[4] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 4 : (player.researchesAuto[2] < 1 || player.stage.current < 4)))) { return false; }\n\n        if (player.strangeness[5][4] >= 1 && player.toggles.buildings[5][3] && player.ASR[5] >= 3 && player.researchesExtra[5][0] >= 1 && calculateBuildingsCost(3, 5).lessOrEqual(info.newMass)) {\n            collapseReset();\n            return true;\n        }\n        if (player.inflation.vacuum) {\n            const timeUntil = new Overlimit(global.inflationInfo.massCap / 8.96499278339628e-67).minus(player.buildings[1][0].current).divide(global.buildingsInfo.producing[1][1]).toNumber() / global.inflationInfo.globalSpeed;\n            if (timeUntil < collapse.input[1] && timeUntil > 0) { return false; }\n        }\n        while (info.pointsLoop < collapse.points.length) {\n            const point = collapse.points[info.pointsLoop];\n            if (point > info.newMass || (point > 40 && player.strangeness[5][4] < 1)) { break; }\n            if (point > collapse.mass) {\n                info.pointsLoop++;\n                collapseReset();\n                return true;\n            }\n            info.pointsLoop++;\n        }\n        const massBoost = (calculateEffects.mass(true) / calculateEffects.mass()) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / global.mergeInfo.galaxyBase) ** (player.buildings[5][3].true * 2));\n        if (massBoost >= collapse.input[0]) {\n            collapseReset();\n            return true;\n        } else if (level >= 2) { return false; }\n        const calculateStar = calculateEffects.star;\n        const starProd = global.buildingsInfo.producing[4];\n        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n        if (massBoost * new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber() * (calculateStar[1](true) / calculateStar[1]()) * (calculateStar[2](true) / calculateStar[2]()) < collapse.input[0]) { return false; }\n        collapseReset();\n        return true;\n    }\n    return info.newMass > collapse.mass || (level < 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) || player.elements.includes(0.5, 1);\n};\nexport const collapseResetUser = async() => {\n    if (global.paused || !collapseResetCheck()) { return; }\n\n    if (player.toggles.confirm[4] !== 'None') {\n        let errorText = '';\n        if (player.inflation.vacuum) {\n            const unlockedG = player.researchesExtra[5][0] >= 1;\n            const cantAffordG = !unlockedG || calculateBuildingsCost(3, 5).moreThan(global.collapseInfo.newMass);\n            const timeUntil = new Overlimit(global.inflationInfo.massCap / 8.96499278339628e-67).minus(player.buildings[1][0].current).divide(global.buildingsInfo.producing[1][1]).toNumber();\n            if (timeUntil > 0 && timeUntil < 1e6 && cantAffordG) {\n                errorText += `Solar mass isn't hardcapped, but can be soon hardcapped${unlockedG ? \", also can't afford new Galaxy\" : ''}`;\n            }\n            if (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) {\n                if (errorText !== '') { errorText += '\\nAlso '; }\n                errorText += `current ${player.researchesExtra[2][1] <= 0 ? \"level for Cloud Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make recovering from Collapse really slow`;\n            }\n        }\n        if (player.stage.active !== 4 && player.stage.active !== 5) {\n            if (errorText !== '') { errorText += '\\nAlso '; }\n            errorText += \"current active Stage isn't Interstellar\";\n        }\n        if (errorText !== '') {\n            if (!await Confirm(`Prevented Collapse because ${errorText}\\nReset anyway?`)) { return; }\n            if (!collapseResetCheck()) { return Notify('Collapse canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        const { starCheck: newStars, newMass } = global.collapseInfo;\n        let count = 0;\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            count++;\n        }\n        let message = `Caused Collapse to${count > 0 ? ` activate ${format(count)} new Elements and` : ''} ${newMass > player.collapse.mass ? `increase Solar mass to ${format(newMass)}` : ''}`;\n        if (newStars[0] > 0 || newStars[1] > 0 || newStars[2] > 0) {\n            message += newMass > player.collapse.mass ? ', also gained' : 'gain';\n            if (newStars[0] > 0) { message += ` ${format(newStars[0])} Red giants`; }\n            if (newStars[1] > 0) { message += `, ${format(newStars[1])} Neutron stars`; }\n            if (newStars[2] > 0) { message += `, ${format(newStars[2])} Black holes`; }\n        }\n        getId('SRMain').textContent = message;\n    }\n    collapseReset();\n    numbersUpdate();\n};\n\nconst collapseReset = (noReset = false) => {\n    const collapseInfo = global.collapseInfo;\n    const collapse = player.collapse;\n\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    if (!noReset) {\n        if (collapseInfo.newMass > collapse.mass) {\n            collapse.mass = collapseInfo.newMass;\n            if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n        }\n        for (let i = 1; i < playerStart.elements.length; i++) { //Must be below mass and star checks\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            buyUpgrades(i, 4, 'elements', true);\n        }\n\n        reset('collapse', player.inflation.vacuum ? [1, 2, 3, 4] : (player.strangeness[5][3] < 1 ? [4, 5] : [4]));\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n    }\n    awardVoidReward(4);\n};\n\nexport const assignMergeReward = () => {\n    global.mergeInfo.checkReward[0] = Math.max(Math.floor(player.buildings[5][3].true / 40), 0);\n};\nexport const calculateMergeMaxResets = (): number => {\n    let max = 1;\n    if (player.elements[30] >= 1) { max += player.buildings[6][1].true; }\n    return max;\n};\n\nconst mergeResetCheck = (): boolean => {\n    if (player.upgrades[5][3] !== 1) { return false; }\n    if (!player.inflation.vacuum) { return player.buildings[5][3].true >= 22 + 2 * player.buildings[6][1].true; }\n    if (player.merge.resets >= calculateMergeMaxResets() || player.buildings[5][3].true < 1) { return false; }\n    assignMergeReward();\n\n    return true;\n};\nexport const mergeResetUser = async() => {\n    if (global.paused || !mergeResetCheck()) { return; }\n\n    if (player.toggles.confirm[5] !== 'None') {\n        if (player.stage.active !== 5) {\n            if (!await Confirm(\"Prevented Merge because current active Stage isn't Intergalactic\\nReset anyway?\")) { return; }\n            if (!mergeResetCheck()) { return Notify('Merge canceled, requirements are no longer met'); }\n        }\n    }\n\n    mergeReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) {\n        const { checkReward } = global.mergeInfo;\n        getId('SRMain').textContent = player.inflation.vacuum ? `Tryed to Merge Galaxies and ${checkReward[0] > 0 ? `created ${format(checkReward[0])} Galaxy Groups` : 'resetted self-made Galaxies'}` : 'Vacuum decayed into its true state';\n    }\n};\n\nconst mergeReset = () => {\n    if (!player.inflation.vacuum) { return switchVacuum(); }\n    player.merge.resets++;\n    player.buildings[5][3].true = 0;\n    player.merge.reward[0] += global.mergeInfo.checkReward[0];\n    reset('galaxy', [1, 2, 3, 4, 5]);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n\n    if (player.stage.current < 6) {\n        player.stage.current = 6;\n        stageUpdate(false, true);\n    }\n};\n\nexport const assignMilestoneInformation = (index: number, stageIndex: number) => {\n    const pointer = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (player.inflation.vacuum) {\n        pointer.time[index] = 1200;\n        pointer.need[index].setValue('Infinity');\n    } else {\n        const percentage = level / (pointer.max[index] - 1);\n        if (stageIndex === 1) {\n            pointer.time[index] = 14400 / (percentage * (index === 1 ? 11 : 3) + 1) ** percentage;\n        } else if (stageIndex === 2) {\n            pointer.time[index] = 28800 / (percentage * (index === 1 ? 23 : 7) + 1) ** percentage;\n        } else if (stageIndex === 3) {\n            pointer.time[index] = 43200 / (percentage * (index === 1 ? 35 : 11) + 1) ** percentage;\n        } else if (stageIndex === 4) {\n            pointer.time[index] = 57600 / (percentage * (index === 1 ? 47 : 15) + 1) ** percentage;\n        } else if (stageIndex === 5) {\n            pointer.time[index] = index === 0 ? (3600 / (percentage * 2 + 1)) : 1200;\n        }\n        pointer.need[index].setValue(pointer.scaling[index][level]);\n    }\n    if (player.inflation.tree[0] === 1) { pointer.time[index] /= 4; }\n};\n\nconst awardMilestone = (index: number, stageIndex: number, count = 0) => {\n    if (!milestoneCheck(index, stageIndex)) {\n        if (count > 0) {\n            player.strange[0].current += count;\n            player.strange[0].total += count;\n            assignStrangeInfo[0]();\n\n            Notify(`Milestone '${global.milestonesInfo[stageIndex].name[index]}' new tier completed${!player.inflation.vacuum && player.milestones[stageIndex][index] >= global.milestonesInfo[stageIndex].max[index] ? ', maxed' : ''}`);\n            if (!player.inflation.vacuum) {\n                if (stageIndex === 4) {\n                    if (index === 0 && player.milestones[4][0] >= 8) { calculateMaxLevel(6, 4, 'strangeness', true); }\n                } else if (stageIndex === 5) {\n                    if (index === 0 && player.milestones[5][0] >= 8) { calculateMaxLevel(6, 5, 'strangeness', true); }\n                }\n            } else if (stageIndex === 3 && index === 1) {\n                global.accretionInfo.effective = calculateEffects.effectiveRank();\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n            }\n        }\n        return;\n    }\n\n    player.milestones[stageIndex][index]++;\n    assignMilestoneInformation(index, stageIndex);\n    awardMilestone(index, stageIndex, count + 1);\n};\n\n/** Also updates related information */\nexport const toggleSuperVoid = (change = false) => {\n    const info = global.challengesInfo;\n    if (change) {\n        if (player.challenges.active === 0) { return Notify(`Can't be toggled while inside ${info.name[0]}`); }\n        player.challenges.super = !player.challenges.super && player.stage.true >= 7;\n    }\n\n    const toggleHTML = getId('superVoidToggle');\n    if (player.challenges.super) {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = 'ON';\n        info.name[0] = 'Super Void';\n        info.rewardText[0] = global.voidRewards[1];\n        info.reset[0] = 'vacuum';\n        getId('voidRewardsExtraText').textContent = 'All rewards are active only while inside any Void\\nAnd related Void rewards will persist through Vacuum reset';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'OFF';\n        info.name[0] = 'Void';\n        info.rewardText[0] = global.voidRewards[0];\n        info.reset[0] = 'stage';\n        getId('voidRewardsExtraText').textContent = 'All rewards are related to Strangeness';\n    }\n    assignChallengeInformation();\n    if (change) { numbersUpdate(); }\n};\n\n/* For now just index 0 */\nexport const assignChallengeInformation = () => {\n    global.challengesInfo.time[0] = player.challenges.super ? 1200 : 3600;\n    if (player.inflation.tree[0] === 1) { global.challengesInfo.time[0] /= 4; }\n};\n\nconst awardVoidReward = (index: number) => {\n    if (player.challenges.active !== 0) { return; }\n\n    let progress = 1;\n    if (index === 1) {\n        progress += player.researchesExtra[1][2];\n    } else if (index === 2) {\n        if (player.vaporization.clouds.moreThan('1e4')) { progress += player.accretion.rank > 1 ? 1 : 2; }\n    } else if (index === 3) {\n        progress = Math.min(player.accretion.rank - 1, 6);\n    } else if (index === 4) {\n        if (player.collapse.stars[0] >= 1) { progress++; }\n        if (player.collapse.stars[1] >= 1) { progress++; }\n        if (player.collapse.stars[2] >= 1) { progress++; }\n    } else if (index === 5) {\n        if (player.buildings[5][3].true >= 1) { progress++; }\n        if (player.merge.reward[0] >= 1) { progress++; }\n    }\n\n    const superVoid = player.challenges.super;\n    const old = player.challenges[superVoid ? 'superVoid' : 'void'][index];\n    if (old >= progress || player.time[superVoid ? 'universe' : 'stage'] > global.challengesInfo.time[0]) { return; }\n\n    player.challenges.void[index] = progress;\n    if (player.challenges.voidCheck[index] < progress) { player.challenges.voidCheck[index] = progress; }\n    if (superVoid) {\n        player.challenges.superVoid[index] = progress;\n        if (player.clone.challenges?.void[index] < progress) { player.clone.challenges.void[index] = progress; }\n    }\n    for (let i = old; i < progress; i++) {\n        Notify(`New ${superVoid ? 'Super ' : ''}Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][index][i]}`);\n    }\n    if (index === 3) {\n        if (old < 4) {\n            calculateMaxLevel(0, 1, 'strangeness', true);\n            calculateMaxLevel(3, 1, 'strangeness', true);\n            calculateMaxLevel(1, 2, 'strangeness', true);\n            calculateMaxLevel(3, 2, 'strangeness', true);\n            calculateMaxLevel(0, 3, 'strangeness', true);\n            calculateMaxLevel(1, 3, 'strangeness', true);\n            calculateMaxLevel(0, 4, 'strangeness', true);\n            calculateMaxLevel(1, 4, 'strangeness', true);\n            calculateMaxLevel(2, 5, 'strangeness', true);\n        }\n    } else if (index === 4) {\n        if (old < 1) {\n            calculateMaxLevel(4, 1, 'strangeness', true);\n            calculateMaxLevel(4, 2, 'strangeness', true);\n            calculateMaxLevel(4, 3, 'strangeness', true);\n            calculateMaxLevel(4, 4, 'strangeness', true);\n        }\n    }\n};\n\n/** Null means exit if possible, nothing if isn't. Entering same challenge will exit out of it */\nexport const enterExitChallengeUser = (index: number | null) => {\n    if (global.paused) { return; }\n    const old = player.challenges.active;\n    if (old === index || index === null) {\n        if (old === null) { return; }\n        player.challenges.active = null;\n\n        challengeReset(null, old);\n        Notify(`Left the '${global.challengesInfo.name[old]}'`);\n    } else {\n        if (index === 0 && !player.challenges.super && !player.inflation.vacuum) { return; }\n        player.challenges.active = index;\n\n        challengeReset(index, old);\n        Notify(`'${global.challengesInfo.name[index]}' is now active`);\n    }\n};\nconst exitChallengeAuto = () => {\n    const old = player.challenges.active;\n    if (old === null) { return; }\n    const info = global.challengesInfo;\n    if (player.time[info.reset[old] === 'vacuum' ? 'universe' : 'stage'] <= info.time[old]) { return; }\n\n    player.challenges.active = null;\n    challengeReset(null, old);\n    Notify(`Automatically left the '${info.name[old]}'`);\n};\n/** Handles all required resets related to challenges */\nconst challengeReset = (next: number | null, old: number | null) => {\n    if (next !== null) {\n        const resetType = global.challengesInfo.reset;\n        if (old !== null) { challengeReset(null, old); }\n        cloneBeforeReset(resetType[next]);\n        if (resetType[next] === 'vacuum') {\n            if (player.stage.active < 6) { setActiveStage(1); }\n            player.time.export[0] = 0;\n            player.inflation.age = 0;\n            player.time.universe = 0;\n            if (!player.inflation.vacuum) {\n                player.clone.inflation.vacuum = false;\n                player.inflation.vacuum = true;\n                prepareVacuum(true);\n                visualTrueStageUnlocks();\n            }\n            resetVacuum();\n        } else {\n            stageFullReset();\n            if (next === 0) { assignTrueEnergy(); }\n        }\n    } else if (old !== null) {\n        if (player.stage.active < 6) { setActiveStage(1); }\n        if (player.clone.inflation?.vacuum === false) {\n            player.inflation.vacuum = false;\n            prepareVacuum(false);\n            visualTrueStageUnlocks();\n        }\n        loadFromClone();\n    }\n};\n", "import { checkTab, milestoneGetValue } from './Check';\nimport Overlimit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { global, logAny, player } from './Player';\nimport { Notify, SRHotkeysInfo, globalSave, playEvent, setTheme, specialHTML } from './Special';\nimport { calculateBuildingsCost, stageResetCheck, toggleSwap, switchStage, setActiveStage, calculateEffects, assignMergeReward, calculateMergeMaxResets, assignBuildingsProduction } from './Stage';\nimport type { gameTab } from './Types';\n\nexport const switchTab = (tab: gameTab, subtab = null as null | string) => {\n    if (subtab === null) {\n        const oldTab = global.tab;\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n        for (const inside of global.tabList[`${oldTab}Subtabs`]) {\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n        }\n\n        global.tab = tab;\n        let subtabAmount = 0;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n        for (const inside of global.tabList[`${tab}Subtabs`]) {\n            if (checkTab(tab, inside)) {\n                getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                subtabAmount++;\n            } else if (global.subtab[`${tab}Current`] === inside) {\n                switchTab(tab, global.tabList[`${tab}Subtabs`][0]);\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${tab}Current`]}'` : ''}`; }\n    } else {\n        const oldSubtab = global.subtab[`${tab}Current`];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[`${tab as Exclude<gameTab, 'Elements'>}Current`] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (global.tab !== tab) { return; }\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    const active = player.stage.active;\n    if ((tab === 'upgrade' && global.subtab.upgradeCurrent === 'Elements') || tab === 'Elements') {\n        if (active !== 4 && active !== 5) {\n            if (tab === 'upgrade' && subtab === null) {\n                switchTab('upgrade', 'Upgrades');\n            } else {\n                setActiveStage(global.trueActive === 5 ? 5 : 4, global.trueActive);\n                stageUpdate();\n            }\n            return;\n        }\n    } else if (tab === 'inflation') {\n        if (active !== 6) {\n            setActiveStage(6, global.trueActive);\n            stageUpdate();\n            return;\n        }\n    } else if (global.trueActive !== active) {\n        switchStage(global.trueActive);\n        return;\n    }\n    if (!global.paused) {\n        visualUpdate();\n        numbersUpdate();\n    }\n};\n\nexport const numbersUpdate = () => {\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n    const vacuum = player.inflation.vacuum;\n\n    if (!global.debug.timeLimit) {\n        const challenge = player.challenges.active;\n        let timeLimit = 0;\n        if (vacuum) {\n            if (challenge !== null) { timeLimit = global.challengesInfo.time[challenge]; }\n        } else if (player.stage.true >= 7 || player.stage.resets >= 4) {\n            const s = Math.min(player.stage.current, 4);\n            const info = global.milestonesInfo;\n            for (let i = 0; i < info[s].need.length; i++) {\n                if (player.milestones[s][i] >= info[s].max[i]) {\n                    if (s === 4 && player.milestones[5][i] < info[5].max[i]) {\n                        timeLimit = Math.max(info[5].time[i], timeLimit);\n                    }\n                    continue;\n                }\n                timeLimit = Math.max(info[s].time[i], timeLimit);\n            }\n        }\n\n        if (timeLimit > 0) {\n            if (player.time[challenge !== null && global.challengesInfo.reset[challenge] === 'vacuum' ? 'universe' : 'stage'] > timeLimit) {\n                Notify(`Time limit has been reached for ${challenge !== null ? global.challengesInfo.name[challenge] : 'all Milestones'}`);\n                global.debug.timeLimit = true;\n            }\n        } else { global.debug.timeLimit = true; }\n    }\n\n    if (global.footer) {\n        if (active === 1) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(buildings[1].current, { padding: true });\n            getId('footerStat3Span').textContent = format(player.vaporization.clouds, { padding: true });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        } else if (active === 4 || active === 5) {\n            const stars = player.buildings[4];\n\n            getId('footerStat1Span').textContent = format(player.collapse.mass, { padding: true });\n            getId('footerStat2Span').textContent = format(stars[0].current, { padding: true });\n            if (active === 5) {\n                getId('footerStat3Span').textContent = format(new Overlimit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current), { padding: true });\n            }\n        } else if (active === 6) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.cosmon.current, { padding: 'exponent' });\n        }\n    }\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const howMany = global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : player.toggles.shop.input;\n\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                getId(`building${i}Cur`).textContent = format(buildings[i].current, { padding: trueCountID.style.display !== 'none' });\n                getId(`building${i}Prod`).textContent = format(buildingsInfo.producing[active][i], { padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true, { padding: 'exponent' })}]`;\n\n                let lockText;\n                if (active === 3) {\n                    if (i > 1 && player.upgrades[3][global.accretionInfo.unlockA[i - 2]] !== 1) {\n                        lockText = 'Unlocked with Upgrade';\n                    }\n                } else if (active === 4) {\n                    if (i === 5 && player.challenges.active === 0 && player.inflation.tree[3] < 1) {\n                        lockText = \"Can't be created inside Void\";\n                    } else if (player.researchesExtra[5][0] < 1 && player.collapse.mass < global.collapseInfo.unlockB[i]) {\n                        lockText = `Unlocked at ${format(global.collapseInfo.unlockB[i])} Mass`;\n                    }\n                }\n                if (lockText !== undefined) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = lockText;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | Overlimit;\n                let free = false;\n                let multi = true;\n                if (active === 6) { //Universe\n                    costName = 'Groups';\n                    currency = player.merge.reward[0];\n                    multi = false;\n                } else if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                    multi = false;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 1) {\n                        if (i === 1 && vacuum) { free = player.researchesExtra[1][2] >= 1 && player.strangeness[1][8] >= 1; }\n                    } else if (active === 2) {\n                        if (i !== 1) { e = 1; }\n                    } else if (active >= 3) {\n                        e = 0;\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let buy = 1;\n                const cost = calculateBuildingsCost(i, active);\n                if (howMany !== 1 && multi) {\n                    const scaling = buildingsInfo.increase[active][i];\n                    if (free) {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).divide(cost).log(scaling).toNumber()) + 1, 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy - 1)); }\n                    } else {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy).minus('1').divide(scaling - 1)); }\n                    }\n                }\n\n                getId(`building${i}`).classList[cost.lessOrEqual(currency) ? 'add' : 'remove']('availableBuilding');\n                getId(`building${i}Btn`).textContent = `Need: ${format(cost, { padding: true })} ${costName}`;\n                getId(`building${i}BuyX`).textContent = format(buy, { padding: 'exponent' });\n            }\n            if (active === 1) {\n                const { dischargeInfo } = global;\n                getId('reset1Button').textContent = `Next goal is ${format(dischargeInfo.next, { padding: 'exponent' })} Energy`;\n                getQuery('#tritiumEffect > span').textContent = format(dischargeInfo.tritium, { padding: true });\n                getQuery('#dischargeEffect > span').textContent = format(new Overlimit(dischargeInfo.base).power(dischargeInfo.total), { padding: true });\n                getQuery('#energySpent > span').textContent = format(dischargeInfo.energyTrue - player.discharge.energy, { padding: 'exponent' });\n                if (vacuum) {\n                    getQuery('#preonCap > span').textContent = format(global.inflationInfo.preonCap, { padding: true });\n                    getId('preonCapRatio').textContent = format(new Overlimit(assignBuildingsProduction.S1Build1(true)).divide(global.inflationInfo.preonCap), { padding: true });\n                }\n            } else if (active === 2) {\n                getId('reset1Button').textContent = `Reset for ${format(global.vaporizationInfo.get, { padding: true })} Clouds`;\n                getQuery('#cloudEffect > span').textContent = format(calculateEffects.clouds(), { padding: true });\n                if (vacuum) {\n                    getQuery('#molesProduction > span').textContent = format(new Overlimit(global.dischargeInfo.tritium).divide('6.02214076e23'), { padding: true });\n                }\n\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#vaporizationBoostTotal > span').textContent = format(calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber() * (rainAfter / rainNow) * storm, { padding: true });\n            } else if (active === 3) {\n                getQuery('#dustSoftcap > span').textContent = format(global.accretionInfo.dustSoft);\n                if (player.accretion.rank < global.accretionInfo.maxRank) {\n                    if (player.challenges.active === 0 && player.accretion.rank >= 6) {\n                        const scaling = global.buildingsInfo.increase[5][3];\n                        getId('reset1Button').textContent = `Requires ${format(logAny(global.accretionInfo.rankCost[player.accretion.rank] / 1.98847e38 * (scaling - 1) + 1, scaling) - player.buildings[5][3].true, { padding: true })} more Galaxies`;\n                    } else if (player.strangeness[3][4] >= 2) {\n                        getId('reset1Button').textContent = `Next Rank after ${format(Math.max(global.accretionInfo.rankCost[player.accretion.rank] - buildings[0].total.toNumber(), 0), { padding: true })} Mass`;\n                    }\n                }\n                if (vacuum) {\n                    getQuery('#massProduction > span').textContent = format(new Overlimit(buildingsInfo.producing[1][1]).multiply('1.78266192e-33'), { padding: true });\n                    getQuery('#dustCap > span').textContent = format(global.inflationInfo.dustCap, { padding: true });\n                    getId('dustCapRatio').textContent = format(new Overlimit(assignBuildingsProduction.S3Build1(true)).divide(global.inflationInfo.dustCap), { padding: true });\n                    getQuery('#submersionBoost > span').textContent = format(calculateEffects.submersion(), { padding: true });\n                }\n            } else if (active === 4 || active === 5) {\n                const { collapseInfo } = global;\n                const starEffect = [calculateEffects.star[0](), collapseInfo.neutronEffect, calculateEffects.star[2]()];\n                let total = (calculateEffects.mass(true) / collapseInfo.massEffect) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / global.mergeInfo.galaxyBase) ** (player.buildings[5][3].true * 2));\n                if (player.strangeness[4][4] < 2) {\n                    const starProd = global.buildingsInfo.producing[4];\n                    const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                    total *= new Overlimit(starProd[2]).multiply(calculateEffects.star[0](true) / calculateEffects.star[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber() * (calculateEffects.star[1](true) / starEffect[1]) * (calculateEffects.star[2](true) / starEffect[2]);\n                }\n\n                if (active === 4) {\n                    getId('reset1Button').textContent = `Collapse is at ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                    getQuery('#solarMassEffect > span').textContent = format(collapseInfo.massEffect, { padding: true });\n                    for (let i = 0; i < 3; i++) {\n                        getId(`special${i + 1}Cur`).textContent = format(player.collapse.stars[i], { padding: 'exponent' });\n                        getId(`special${i + 1}Get`).textContent = format(collapseInfo.starCheck[i], { padding: 'exponent' });\n                        getQuery(`#star${i + 1}Effect > span`).textContent = format(starEffect[i], { padding: true });\n                    }\n                    getQuery('#collapseBoostTotal > span').textContent = format(total, { padding: true });\n                    if (vacuum) {\n                        getQuery('#mainCap > span').textContent = format(global.inflationInfo.massCap, { padding: true });\n                        getId('mainCapTill').textContent = format(new Overlimit(global.inflationInfo.massCap / 8.96499278339628e-67).minus(player.buildings[1][0].current).divide(buildingsInfo.producing[1][1]).replaceNaN('Infinity').toNumber() / global.inflationInfo.globalSpeed, { padding: true });\n                    }\n                } else if (active === 5) {\n                    assignMergeReward();\n                    const mergeEffects = [calculateEffects.reward[0]()];\n                    if (vacuum) {\n                        const remaining = calculateMergeMaxResets() - player.merge.resets;\n                        getId('reset1Button').textContent = `Can reset ${remaining} more time${remaining !== 1 ? 's' : ''}`;\n                        for (let i = 0; i < 1; i++) {\n                            getId(`special${i + 1}Cur`).textContent = format(player.merge.reward[i], { padding: 'exponent' });\n                            getId(`special${i + 1}Get`).textContent = format(global.mergeInfo.checkReward[i], { padding: 'exponent' });\n                            getQuery(`#merge${i + 1}Effect > span`).textContent = format(mergeEffects[i], { padding: true });\n                        }\n                        getQuery('#mainCapS5 > span').textContent = format(global.inflationInfo.massCap, { padding: true });\n                    } else {\n                        getId('reset1Button').textContent = `Requires ${format(22 + 2 * player.buildings[6][1].true, { padding: 'exponent' })} Galaxies`;\n                    }\n                    const starProd = global.buildingsInfo.producing[4];\n                    getQuery('#elementsProductionS5 > span').textContent = format(new Overlimit(starProd[1]).plus(starProd[2], starProd[3], starProd[4], starProd[5]), { padding: true });\n                    getQuery('#collapseBoostTotalS5 > span').textContent = format(total, { padding: true });\n                    getQuery('#mainCapCurrentS5 > span').textContent = format(collapseInfo.newMass, { padding: true });\n                    getQuery('#mergeBoostTotal > span').textContent = format((buildings[3].true / (buildings[3].current.toNumber() + 1) + 1) * (calculateEffects.reward[0](true) / mergeEffects[0]), { padding: true });\n                }\n            } else if (active === 6) {\n                getQuery('#cosmonGain > span').textContent = format(vacuum ? buildings[1].true + 1 : 1, { padding: 'exponent' });\n            }\n\n            if (!vacuum && (active >= 6 ? player.stage.current : active) < 4) {\n                getId('stageReward').textContent = format(calculateEffects.strangeGain(false), { padding: true });\n                if (active < 4) { getId('stageReset').textContent = stageResetCheck(active) ? 'Requirements are met' : `Requires ${active === 3 ? `${format(2.45576045e31)} Mass` : active === 2 ? `${format(1.19444e29)} Drops` : `${format(1.67133125e21)} Molecules`}`; }\n            } else { getId('stageReward').textContent = format(global.strangeInfo.quarksGain, { padding: true }); }\n            getQuery('#stageTime > span').textContent = format(player.stage.time, { type: 'time' });\n            getQuery('#stageTimeReal > span').textContent = format(player.time.stage, { type: 'time' });\n        } else if (subtab.stageCurrent === 'Advanced') {\n            getQuery('#globalSpeed > span').textContent = format(global.inflationInfo.globalSpeed, { padding: true });\n            getQuery('#universeTime > span').textContent = format(player.inflation.age, { type: 'time' });\n            getQuery('#universeTimeReal > span').textContent = format(player.time.universe, { type: 'time' });\n            getChallengeDescription(global.lastChallenge[0]);\n            getChallengeReward(global.lastChallenge[1]);\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            getUpgradeDescription(global.lastUpgrade[active][0], global.lastUpgrade[active][1]);\n        } else if (trueSubtab === 'Elements') {\n            if (global.lastElement !== 0) { getUpgradeDescription(global.lastElement, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const interstellar = vacuum || (active >= 6 ? player.stage.current : active) >= 4;\n            const quarksGain = interstellar ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n            getId('strange0Gain').textContent = format(quarksGain, { padding: true });\n            getId('strange1Gain').textContent = format(calculateEffects.strangeGain(interstellar, 1), { padding: true });\n            getId('strangeRate').textContent = format(quarksGain / player.time.stage, { type: 'income' });\n            getId('strangePeak').textContent = interstellar ? format(player.stage.peak, { type: 'income' }) : 'Interstellar Stage only';\n            getId('strange0Cur').textContent = format(player.strange[0].current, { padding: true });\n            getId('strange1Cur').textContent = format(player.strange[1].current, { padding: true });\n            getId('stageTimeStrangeness').textContent = format(player.time.stage, { type: 'time' });\n            getId('stageTimeBestReset').textContent = format(player.history.stage.best[0], { type: 'time' });\n            if (getId('strange1EffectsMain').style.display === '') { //Slow, but probably better than nothing\n                const information = global.strangeInfo.strangeletsInfo;\n                getId('strange1Effect1Stat0').textContent = format(information[0] * 100, { padding: true });\n                if (interstellar) { getId('strange1Effect1Stat1').textContent = format(stageResetCheck(5) ? information[0] * quarksGain / player.time.stage : 0, { type: 'income' }); }\n                getId('strange1Effect2Stat').textContent = format(information[1], { padding: true });\n            }\n            if (getId('strange0EffectsMain').style.display === '') {\n                const { stageBoost } = global.strangeInfo;\n                const { strangeness } = player;\n\n                getId('strange0Effect1Stat').textContent = format(strangeness[1][6] >= 1 ? stageBoost[1] : 1, { padding: true });\n                getId('strange0Effect2Stat').textContent = format(strangeness[2][6] >= 1 ? stageBoost[2] : 1, { padding: true });\n                getId('strange0Effect3Stat').textContent = format(strangeness[3][7] >= 1 ? stageBoost[3] : 1, { padding: true });\n                getId('strange0Effect4Stat').textContent = format(strangeness[4][7] >= 1 ? stageBoost[4] : 1, { padding: true });\n                getId('strange0Effect5Stat').textContent = format(strangeness[5][7] >= 1 ? stageBoost[5] : 1, { padding: true });\n            }\n            getStrangenessDescription(global.lastStrangeness[0], global.lastStrangeness[1], 'strangeness');\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            const { milestonesInfo: info } = global;\n            const time = player.time.stage;\n            for (let s = 1; s < info.length; s++) {\n                for (let i = 0; i < info[s].need.length; i++) {\n                    getId(`milestone${i + 1}Stage${s}Current`).textContent = format(milestoneGetValue(i, s), { padding: true });\n                    getId(`milestone${i + 1}Stage${s}Required`).textContent = player.milestones[s][i] >= info[s].max[i] ? 'Maxed' :\n                        time > info[s].time[i] ? 'No time' : format(info[s].need[i], { padding: true });\n                }\n            }\n            getStrangenessDescription(global.lastMilestone[0], global.lastMilestone[1], 'milestones');\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Researches') {\n            getUpgradeDescription(global.lastInflation, 'inflation');\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const exportReward = player.time.export;\n            const conversion = Math.min(exportReward[0] / 86400, 1);\n            getId('exportQuarks').textContent = format((exportReward[1] / 2.5 + 1) * conversion, { padding: true });\n            getId('exportStrangelets').textContent = format(exportReward[2] / 2.5 * conversion, { padding: true });\n            if (global.lastSave >= 1) { getId('isSaved').textContent = `${format(global.lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            getId('firstPlayAgo').textContent = format((Date.now() - player.time.started) / 1000, { type: 'time' });\n            getId('onlineTotal').textContent = format(player.time.online, { type: 'time' });\n            getQuery('#stageResets > span').textContent = `${player.stage.resets}`;\n\n            const exportReward = player.time.export;\n            getId('exportQuarksMax').textContent = format(exportReward[1] / 2.5 + 1, { padding: true });\n            getId('exportStrangeletsMax').textContent = format(exportReward[2] / 2.5, { padding: true });\n            getId('exportTimeToMax').textContent = format(86400 - exportReward[0], { type: 'time' });\n            getId('exportQuarksStorage').textContent = format(exportReward[1], { padding: true });\n            getId('exportStrangeletsStorage').textContent = format(exportReward[2], { padding: true });\n            if (active === 1) {\n                getQuery('#dischargeStat > span').textContent = format(global.dischargeInfo.total);\n                getId('dischargeStatTrue').textContent = ` [${player.discharge.current}]`;\n                getQuery('#dischargeScaleStat > span').textContent = format(global.dischargeInfo.scaling);\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    const buildings = player.buildings[s];\n                    const energyType = global.dischargeInfo.energyType[s];\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        getQuery(`#energyGainStage${s}Build${i + (vacuum ? 0 : 2)} > span`).textContent = format(energyType[i] * buildings[i as 1].true, { padding: 'exponent' });\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Per`).textContent = format(energyType[i]);\n                    }\n                }\n                getQuery('#effectiveEnergyStat > span').textContent = format(calculateEffects.effectiveEnergy(), { padding: true });\n                getQuery('#maxEnergyStat > span').textContent = format(player.discharge.energyMax, { padding: 'exponent' });\n            } else if (active === 2) {\n                const clouds = calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber();\n                getQuery('#cloudStat > span').textContent = format(clouds, { padding: true });\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const rain = rainAfter / rainNow;\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#rainStat > span').textContent = format(rain, { padding: true });\n                getQuery('#stormStat > span').textContent = format(storm, { padding: true });\n                getId('cloudEffectTotal').textContent = format(clouds * rain * storm, { padding: true });\n                getQuery('#maxCloudStat > span').textContent = format(player.vaporization.cloudsMax, { padding: true });\n\n                if (vacuum) {\n                    buildings[0].total.setValue(player.buildings[1][5].total).divide('6.02214076e23');\n                    buildings[0].trueTotal.setValue(player.buildings[1][5].trueTotal).divide('6.02214076e23');\n                }\n            } else if (active === 3) {\n                getId('currentRank').textContent = format(global.accretionInfo.effective);\n                getId('currentRankTrue').textContent = ` [${player.accretion.rank}]`;\n                if (vacuum) {\n                    buildings[0].trueTotal.setValue(player.buildings[1][0].trueTotal).multiply('1.78266192e-33');\n                }\n            } else if (active === 4 || active === 5) {\n                getQuery('#maxSolarMassStat > span').textContent = format(player.collapse.massMax, { padding: true });\n                if (active === 4) {\n                    const auto2 = player.strangeness[4][4] >= 2;\n                    const mass = calculateEffects.mass(true) / global.collapseInfo.massEffect;\n                    getQuery('#solarMassStat > span').textContent = format(mass, { padding: true });\n                    let star0 = 1;\n                    if (!auto2) {\n                        const starProd = global.buildingsInfo.producing[4];\n                        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                        star0 = new Overlimit(starProd[2]).multiply(calculateEffects.star[0](true) / calculateEffects.star[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber();\n                    }\n                    const star1 = auto2 ? 1 : calculateEffects.star[1](true) / global.collapseInfo.neutronEffect;\n                    const star2 = auto2 ? 1 : calculateEffects.star[2](true) / calculateEffects.star[2]();\n                    if (!auto2) {\n                        getQuery('#star1Stat > span').textContent = format(star0, { padding: true });\n                        getQuery('#star2Stat > span').textContent = format(star1, { padding: true });\n                        getQuery('#star3Stat > span').textContent = format(star2, { padding: true });\n                    }\n                    const gamma = calculateEffects.S4Research4(true) / calculateEffects.S4Research4();\n                    getQuery('#gammaRayStat > span').textContent = format(gamma, { padding: true });\n                    const quasar = (1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / global.mergeInfo.galaxyBase) ** player.buildings[5][3].true;\n                    getQuery('#quasarStat > span').textContent = format(quasar, { padding: true });\n                    getId('starTotal').textContent = format(mass * star0 * star1 * star2 * gamma * (quasar ** 2), { padding: true });\n                } else if (active === 5) {\n                    getId('trueStarsStat').textContent = format(global.collapseInfo.trueStars, { padding: 'exponent' });\n                    const stars = player.buildings[4];\n                    buildings[0].current.setValue(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current);\n                    buildings[0].total.setValue(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n                    buildings[0].trueTotal.setValue(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal);\n                    const base = buildings[3].true / (buildings[3].current.toNumber() + 1) + 1;\n                    getQuery('#mergeBaseStat > span').textContent = format(base, { padding: true });\n                    const reward1 = calculateEffects.reward[0](true) / calculateEffects.reward[0]();\n                    getQuery('#merge1Stat > span').textContent = format(reward1, { padding: true });\n                    getId('mergeTotal').textContent = format(base * reward1, { padding: true });\n                }\n            } else if (active === 6) {\n                getId('vacuumResets').textContent = `${player.inflation.resets}`;\n            }\n            for (let i = 0; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}StatTotal`).textContent = format(buildings[i].total, { padding: true });\n                getId(`building${i}StatTrueTotal`).textContent = format(buildings[i].trueTotal, { padding: true });\n            }\n\n            getId('strange0StatTotal').textContent = format(player.strange[0].total, { padding: true });\n            getId('strange1StatTotal').textContent = format(player.strange[1].total, { padding: true });\n            getId('cosmonStatTotal').textContent = format(player.cosmon.total, { padding: 'exponent' });\n        }\n    }\n};\n\nexport const visualUpdate = () => {\n    const { tab, subtab } = global;\n    const { active, true: highest } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    if (!player.event) {\n        if (highest === 6) {\n            if (player.merge.resets >= 1) { playEvent(8, false); }\n        } else if (highest === 5) {\n            if (active === 5) { playEvent(5, false); }\n        } else if (highest === 4) {\n            if (player.collapse.stars[1] >= 1) { playEvent(4, false); }\n        } else if (highest === 3) {\n            if (player.buildings[3][0].current.moreOrEqual('5e29')) { playEvent(3, false); }\n        } else if (highest === 2) {\n            if (new Overlimit(global.vaporizationInfo.get).plus(player.vaporization.clouds).moreThan('1e4')) { playEvent(2, false); }\n        } else if (highest === 1) {\n            if (player.upgrades[1][9] === 1) { playEvent(1, false); }\n        }\n    }\n\n    if (global.footer) {\n        if (globalSave.toggles[1]) { getId('ElementsTabBtn').style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n        if (active === 1) {\n            if (highest < 2) {\n                getId('footerStat2').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                getId('upgradeTabBtn').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n            }\n        } else if (active === 2) {\n            getId('footerStat3').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n        }\n    }\n    if (globalSave.MDSettings[0]) {\n        let showReset1 = tab === 'stage' || tab === 'upgrade' || tab === 'Elements' || tab === 'inflation';\n        getId('structuresFooter').style.display = showReset1 ? '' : 'none';\n        if (active === 4) {\n            getId('resetGalaxyFooter').style.display = showReset1 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n        } else if (active === 5) {\n            getId('resetCollapseFooter').style.display = showReset1 ? '' : 'none';\n        }\n        if (showReset1) {\n            if (active === 1) {\n                showReset1 = player.upgrades[1][5] === 1;\n            } else if (active === 2) {\n                showReset1 = player.upgrades[2][2] === 1;\n            } else if (active === 4) {\n                showReset1 = player.upgrades[4][0] === 1;\n            } else if (active === 5) {\n                showReset1 = player.upgrades[5][3] === 1;\n            } else if (active === 6) {\n                showReset1 = false;\n            }\n        }\n        getId('reset1Footer').style.display = showReset1 ? '' : 'none';\n        getId('stageFooter').style.display = (tab === 'stage' && (highest >= 2 || player.upgrades[1][9] === 1)) || tab === 'strangeness' ? '' : 'none';\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const ASR = player.ASR[active];\n\n            getId('stageTimeReal').style.display = player.stage.time !== player.time.stage ? '' : 'none';\n            getId('exportMaxed').style.display = player.time.export[0] >= 86400 && (player.stage.true >= 7 || player.strange[0].total > 0) ? '' : 'none';\n            if (highest < 7) {\n                if (highest < 2) { getId('toggleBuilding0').style.display = ASR >= 1 ? '' : 'none'; }\n                getId('resetStage').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = buildings[i].current.notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n            }\n            if (active === 1) {\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual(vacuum ? '5' : '18') ? '' : 'none';\n                getId('building3').style.display = buildings[2].trueTotal.moreOrEqual('2') ? '' : 'none';\n                if (vacuum) {\n                    getId('building4').style.display = buildings[3].trueTotal.moreOrEqual('18') ? '' : 'none';\n                    getId('building5').style.display = buildings[4].trueTotal.moreOrEqual('2') ? '' : 'none';\n                }\n                getId('stageInfo').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('tritiumEffect').style.display = player.upgrades[1][8] === 1 ? '' : 'none';\n                if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[1][5] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual('4e2') ? '' : 'none';\n                getId('building3').style.display = buildings[1].trueTotal.moreOrEqual('8e6') ? '' : 'none';\n                getId('building4').style.display = buildings[1].trueTotal.moreOrEqual('8e17') ? '' : 'none';\n                getId('building5').style.display = buildings[1].trueTotal.moreOrEqual('8e22') ? '' : 'none';\n                getId('cloudEffect').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('vaporizationBoostTotal').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building6').style.display = buildings[1].trueTotal.moreOrEqual('2e25') ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[2][2] === 1 ? '' : 'none'; }\n                } else { getId('stageInfo').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n\n                getId('buildings').style.display = player.accretion.rank >= 1 ? '' : 'none';\n                getId('building2').style.display = upgrades[2] === 1 || buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 || buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building4').style.display = upgrades[8] === 1 || buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('dustSoftcap').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = upgrades[11] === 1 || buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('submersionBoost').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                } else { getId('stageInfo').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none'; }\n                updateRankInfo();\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('reset1Main').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('specials').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special2').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special3').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building2').style.display = nova >= 1 ? '' : 'none';\n                getId('building3').style.display = nova >= 2 ? '' : 'none';\n                getId('building4').style.display = nova >= 3 ? '' : 'none';\n                getId('star1Effect').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Effect').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Effect').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('collapseBoostTotal').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = player.elements[26] >= 1 ? '' : 'none';\n                    getId('mainCap').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n            } else if (active === 5) {\n                getId('reset1Main').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('specials').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('mergeEffects').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('mergeBoostTotal').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                } else {\n                    getId('buildings').style.display = player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7 ? '' : 'none';\n                    getId('building1').style.display = player.milestones[2][0] >= 7 ? '' : 'none';\n                    getId('building2').style.display = player.milestones[3][0] >= 7 ? '' : 'none';\n                }\n                getId('building3').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (global.lastChallenge[0] === 0) {\n                const progress = player.challenges.voidCheck;\n                getId('voidRewards').style.display = '';\n                getId('voidReward2').style.display = progress[1] >= 3 ? '' : 'none';\n                getId('voidReward3').style.display = progress[1] >= 2 ? '' : 'none';\n                getId('voidReward4').style.display = progress[3] >= 5 ? '' : 'none';\n                getId('voidReward5').style.display = progress[4] >= 4 ? '' : 'none';\n            } else { getId('voidRewards').style.display = 'none'; }\n            getId('superVoidLabel').style.display = highest >= 7 && global.lastChallenge[0] === 0 ? '' : 'none';\n            getId('globalSpeed').style.display = global.inflationInfo.globalSpeed !== 1 ? '' : 'none';\n            getId('universeTimeReal').style.display = player.inflation.age !== player.time.universe ? '' : 'none';\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            if (vacuum) {\n                getId('researchAuto1').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                getId('researchAuto2').style.display = player.accretion.rank >= 6 ? '' : 'none';\n            }\n            if (active === 1) {\n                const superposition = player.upgrades[1][5] === 1;\n\n                getId('upgrade7').style.display = superposition ? '' : 'none';\n                getId('upgrade8').style.display = superposition ? '' : 'none';\n                getId('upgrade9').style.display = superposition ? '' : 'none';\n                getId('upgrade10').style.display = superposition ? '' : 'none';\n                getId('stageResearches').style.display = superposition ? '' : 'none';\n                if (vacuum) {\n                    getId('extraResearches').style.display = superposition ? '' : 'none';\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                }\n                if (highest < 7) { getId('researches').style.display = superposition ? '' : 'none'; }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('upgrade2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade5').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade6').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade7').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade8').style.display = player.strangeness[2][2] >= 3 && buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade9').style.display = player.strangeness[2][8] >= 3 && buildings[6].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('researchExtra4').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                }\n                getId('research2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research3').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research5').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research6').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('extraResearches').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('researchExtra3').style.display = buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n                const planetesimal = player.buildings[3][2].trueTotal.moreThan('0');\n\n                getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n                getId('upgrade4').style.display = planetesimal ? '' : 'none';\n                getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n                getId('upgrade6').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade8').style.display = rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n                getId('research3').style.display = planetesimal ? '' : 'none';\n                getId('research4').style.display = planetesimal ? '' : 'none';\n                getId('research5').style.display = rank >= 3 ? '' : 'none';\n                getId('research6').style.display = rank >= 3 ? '' : 'none';\n                getId('research7').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('research8').style.display = rank >= 4 ? '' : 'none';\n                getId('research9').style.display = rank >= 5 ? '' : 'none';\n                getId('extraResearches').style.display = rank >= 2 ? '' : 'none';\n                getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n                getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n                getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n                if (vacuum) {\n                    getId('researchExtra5').style.display = rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                } else {\n                    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n                    getId('stageResearches').style.display = rank >= 1 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const { strangeness } = player;\n                const stars = player.collapse.stars;\n                const galaxy = player.researchesExtra[5][0] >= 1;\n\n                getId('upgrade4').style.display = strangeness[4][2] >= 3 ? '' : 'none';\n                getId('upgrade5').style.display = strangeness[4][9] >= 1 ? '' : 'none';\n                getId('research4').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 1 ? '' : 'none';\n                getId('research5').style.display = galaxy || stars[2] > 0 ? '' : 'none';\n                getId('research6').style.display = (galaxy || stars[2] > 0) && strangeness[4][9] >= 3 ? '' : 'none';\n                getId('researchExtra2').style.display = galaxy || stars[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 2 ? '' : 'none';\n                getId('researchExtra4').style.display = (galaxy || stars[1] > 0) && strangeness[4][9] >= 2 ? '' : 'none';\n            } else if (active === 5) {\n                if (!vacuum) {\n                    const nebula = player.milestones[2][0] >= 7;\n                    const cluster = player.milestones[3][0] >= 7;\n\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                    getId('stageResearches').style.display = nebula || cluster ? '' : 'none';\n                    getId('research1').style.display = nebula ? '' : 'none';\n                    getId('research2').style.display = cluster ? '' : 'none';\n                    getId('extraResearches').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                }\n                getId('upgrade3').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('upgrade4').style.display = player.researchesExtra[5][0] >= 1 && (vacuum ? player.accretion.rank >= 7 : player.milestones[5][1] >= 8) ? '' : 'none';\n            } else if (active === 6) {\n                getId('upgrades').style.display = 'none';\n                getId('stageResearches').style.display = 'none';\n            }\n        } else if (trueSubtab === 'Elements') {\n            const upgrades = player.upgrades[4];\n            const neutron = player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1);\n\n            let columns = 17 - (upgrades[3] === 1 ? 0 : 2) - (upgrades[4] === 1 ? 0 : 1); //18\n            getId('elementsGrid').style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = neutron ? '' : 'none'; }\n            if (!neutron) {\n                columns = 8;\n            } else if (player.collapse.show < 23) { //26 - showAhead\n                for (let i = 26; i > Math.max(player.collapse.show + 3, 10); i--) { getId(`element${i}`).style.display = 'none'; }\n                columns = Math.max(player.collapse.show - 9, 8); //min + show + showAhead - 20\n            }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n            for (let i = 29; i < global.elementsInfo.name.length; i++) {\n                getId(`element${i}`).style.display = upgrades[4] === 1 && player.buildings[6][1].true >= i - 29 ? '' : 'none';\n            }\n            document.documentElement.style.setProperty('--elements-columns', `${columns}`);\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            getId('strange1').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            getId('strange1Unlocked').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            if (vacuum) {\n                const bound = player.strangeness[5][3] >= 1;\n                const voidProgress = player.challenges.void;\n\n                getId('strange8Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange9Stage1').style.display = (voidProgress[1] >= 2 || global.milestonesInfoS6.active[0]) ? '' : 'none';\n                getId('strange10Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange8Stage2').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange9Stage2').style.display = voidProgress[2] >= 1 ? '' : 'none';\n                getId('strange10Stage2').style.display = voidProgress[2] >= 2 ? '' : 'none';\n                getId('strange9Stage3').style.display = voidProgress[4] >= 4 ? '' : 'none';\n                getId('strange10Stage3').style.display = voidProgress[5] >= 2 ? '' : 'none';\n                getId('strange9Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange10Stage4').style.display = voidProgress[5] >= 1 ? '' : 'none';\n                getId('strange1Stage5').style.display = bound ? '' : 'none';\n                getId('strange2Stage5').style.display = bound ? '' : 'none';\n                getId('strange5Stage5').style.display = bound && (voidProgress[4] >= 1 || global.milestonesInfoS6.active[1]) ? '' : 'none';\n                getId('strange6Stage5').style.display = bound ? '' : 'none';\n                getId('strange8Stage5').style.display = bound ? '' : 'none';\n                getId('strange9Stage5').style.display = voidProgress[3] >= 5 ? '' : 'none';\n            } else {\n                const { milestones } = player;\n                const strange5 = milestones[4][0] >= 8;\n                const firstTwo = milestones[2][0] >= 7 || milestones[3][0] >= 7;\n\n                getId('strange7Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange7Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage4').style.display = strange5 ? '' : 'none';\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}5`).style.display = strange5 ? '' : 'none';\n                getId('strange1Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange2Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange3Stage5').style.display = milestones[5][0] >= 8 ? '' : 'none';\n                getId('strange4Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange5Stage5').style.display = milestones[4][1] >= 8 ? '' : 'none';\n                getId('strange6Stage5').style.display = firstTwo ? '' : 'none';\n            }\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            if (!vacuum) {\n                const milestonesS4 = player.milestones[4];\n                getId('milestone1Stage5Div').style.display = milestonesS4[0] >= 8 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = milestonesS4[1] >= 8 ? '' : 'none';\n                if (global.stageInfo.activeAll.includes(4)) { getId('milestonesStage5Main').style.display = milestonesS4[0] >= 8 ? '' : 'none'; }\n                if (global.stageInfo.activeAll.includes(5)) { getId('milestone2Stage5Main').style.display = milestonesS4[1] >= 8 ? '' : 'none'; }\n            }\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Milestones') {\n            const activated = global.milestonesInfoS6.active;\n            for (let i = 0; i < activated.length; i++) {\n                getId(`inflationMilestone${i + 1}`).classList[activated[i] ? 'add' : 'remove']('completed');\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { researchesAuto, strangeness } = player;\n\n            getId('collapsePointsMax').textContent = strangeness[5][4] >= 1 ? 'There is no maximum value' : 'Maximum value is 40';\n            getId('exportStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            getId('toggleAuto0').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            getId('toggleAuto0Main').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            if (!vacuum) { getId('stageAutoInterstellar').style.display = strangeness[5][6] >= 2 ? '' : 'none'; }\n            getId('autoTogglesUpgrades').style.display = researchesAuto[0] >= 1 || researchesAuto[1] >= 2 ? '' : 'none';\n            getId('autoToggle5').style.display = researchesAuto[0] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[0] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('autoToggle8').style.display = researchesAuto[1] >= 2 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][4] >= 1 || (researchesAuto[2] >= 1 && (vacuum || player.stage.current === 1)) ? '' : 'none';\n            const showAuto2 = strangeness[2][4] >= 1 || (vacuum ? researchesAuto[2] >= 3 : (researchesAuto[2] >= 1 && player.stage.current === 2));\n            getId('toggleAuto2').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto2Main').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 || (vacuum ? researchesAuto[2] >= 2 : (researchesAuto[2] >= 1 && player.stage.current === 3)) ? '' : 'none';\n            const showAuto4 = strangeness[4][4] >= 1 || (vacuum ? researchesAuto[2] >= 4 : (researchesAuto[2] >= 1 && player.stage.current >= 4));\n            getId('toggleAuto4').style.display = showAuto4 ? '' : 'none';\n            getId('toggleAuto4Main').style.display = showAuto4 ? '' : 'none';\n            if (highest < 7) {\n                const hotkeyTest = getId('stageHotkey', true);\n                if (highest < 2) {\n                    getId('resetToggles').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) {\n                        hotkeyTest.style.display = player.upgrades[1][9] === 1 ? '' : 'none';\n                        getId('dischargeHotkey').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                    }\n                }\n                if (highest < 3) {\n                    getId('vaporizationToggleReset').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('vaporizationHotkey').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n                }\n                if (highest < 5) {\n                    getId('collapseToggleReset').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    getId('elementsAsTab').style.display = player.upgrades[4][1] === 1 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('collapseHotkey').style.display = player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n                if (highest < 6) {\n                    getId('saveFileNameGalaxy').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                    if (hotkeyTest !== null) { getId('galaxyHotkey').style.display = player.milestones[4][1] >= 8 ? '' : 'none'; }\n                }\n                getId('stageToggleReset').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                getId('vaporizationExtra').style.display = player.challenges.void[4] >= 1 ? '' : 'none';\n                getId('exportReward').style.display = player.strange[0].total > 0 ? '' : 'none';\n                getId('mergeToggleReset').style.display = vacuum && player.upgrades[5][3] === 1 ? '' : 'none';\n                if (hotkeyTest !== null) {\n                    getId('exitChallengeHotkey').style.display = highest >= 6 && player.stage.resets >= 1 ? '' : 'none';\n                    getId('mergeHotkey').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                }\n            }\n        } else if (subtab.settingsCurrent === 'History') {\n            updateStageHistory();\n            updateVacuumHistory();\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const { strangeness } = player;\n            const buildings = player.buildings[active];\n\n            getId('firstPlay').textContent = new Date(player.time.started).toLocaleString();\n            getId('exportStatsStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            if (highest < 7) {\n                getId('stageResets').style.display = player.stage.resets >= 1 ? '' : 'none';\n                getId('exportStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal.moreThan('0') ? '' : 'none';\n            }\n            getId('strangeAllStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            getId('strange1Stats').style.display = player.strange[1].total > 0 ? '' : 'none';\n\n            getId('maxSolarMassStat').style.display = active === 4 || active === 5 ? '' : 'none';\n            if (active === 1) {\n                getId('dischargeStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('dischargeStatTrue').style.display = player.discharge.current !== global.dischargeInfo.total ? '' : 'none';\n                getId('dischargeScaleStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    let anyUnlocked = false;\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        const unlocked = player.buildings[s][i].trueTotal.moreThan('0');\n                        if (!anyUnlocked) { anyUnlocked = unlocked; }\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Name`).style.display = unlocked ? '' : 'none';\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}`).style.display = unlocked ? '' : 'none';\n                    }\n                    getId(s === 1 ? 'energyGainStats' : `energyGainStage${s}`).style.display = anyUnlocked ? '' : 'none';\n                }\n                getId('effectiveEnergyStat').style.display = calculateEffects.effectiveEnergy() !== player.discharge.energy ? '' : 'none';\n                if (highest < 2) {\n                    getId('maxEnergyStat').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                    getId('energyGainStats').style.display = 'none';\n                }\n            } else if (active === 2) {\n                getId('vaporizationBoost').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rainStat').style.display = player.researchesExtra[2][1] >= 1 ? '' : 'none';\n                getId('stormStat').style.display = player.researchesExtra[2][2] >= 1 ? '' : 'none';\n                getId('maxCloudStat').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                getId('currentRankTrue').style.display = global.accretionInfo.effective !== player.accretion.rank ? '' : 'none';\n                if (vacuum) {\n                    getId('rankStat0').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n                }\n                for (let i = 1; i < global.accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = player.accretion.rank >= i ? '' : 'none'; }\n            } else if (active === 4) {\n                const auto2 = strangeness[4][4] >= 2;\n                getId('star1Stat').style.display = !auto2 && buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Stat').style.display = !auto2 && buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Stat').style.display = !auto2 && buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('gammaRayStat').style.display = player.elements[26] >= 1 || player.researches[4][4] >= 1 ? '' : 'none';\n                getId('quasarStat').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                if (vacuum) {\n                    getId('mergeBoost').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                }\n            }\n        }\n    }\n};\nexport const visualTrueStageUnlocks = () => {\n    const highest = player.stage.true;\n    const hotkeyTest = getId('stageHotkey', true);\n\n    if (!player.inflation.vacuum) { getId('mergeResetText').innerHTML = `Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together${highest >= 7 ? ', which will result in <span class=\"orchidText\">Vacuum</span> decaying into its true state' : ' to create even bigger Structures. Might have severe consequences'}.`; }\n    getId('stageRewardOld').style.display = highest < 5 ? '' : 'none';\n    getId('stageRewardNew').style.display = highest >= 5 ? '' : 'none';\n    getId('autoWaitMain').style.display = highest >= 3 ? '' : 'none';\n    getId('researchAuto3').style.display = highest >= 7 ? '' : 'none';\n    getId(globalSave.MDSettings[0] ? 'toggleHover0' : 'researchToggles').style.display = highest >= 2 ? '' : 'none';\n    getId('toggleMax0').style.display = highest >= 4 ? '' : 'none';\n    getId('strange1GlobalSpeedInfo').style.display = highest >= 7 ? '' : 'none';\n    getId('themeArea').style.display = highest >= 2 || globalSave.theme !== null ? '' : 'none';\n    getId('switchTheme2').style.display = highest >= 2 ? '' : 'none';\n    getId('switchTheme3').style.display = highest >= 3 ? '' : 'none';\n    getId('switchTheme4').style.display = highest >= 4 ? '' : 'none';\n    getId('switchTheme5').style.display = highest >= 5 ? '' : 'none';\n    getId('switchTheme6').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameStrange').style.display = highest >= 5 ? '' : 'none';\n    getId('saveFileNameVacuum').style.display = highest >= 6 ? '' : 'none';\n    getId('saveFileNameUniverse').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameCosmon').style.display = highest >= 7 ? '' : 'none';\n    getId('autoStageSwitch').style.display = highest >= 5 ? '' : 'none';\n    getId('cosmonStat').style.display = highest >= 7 ? '' : 'none';\n    getId('vacuumHistory').style.display = highest >= 7 ? '' : 'none';\n    if (hotkeyTest !== null) {\n        getId('stageRightHotkey').style.display = highest >= 5 ? '' : 'none';\n        getId('stageLeftHotkey').style.display = highest >= 5 ? '' : 'none';\n    }\n    if (highest >= 2) {\n        getId('toggleBuilding0').style.display = '';\n        getId('resetToggles').style.display = '';\n        getId('maxEnergyStat').style.display = '';\n        getId('upgradeTabBtn').style.display = '';\n        if (hotkeyTest !== null) { hotkeyTest.style.display = ''; }\n    }\n    if (highest >= 5) {\n        getId('elementsAsTab').style.display = '';\n    }\n    if (highest >= 6) {\n        getId('dischargeToggleReset').style.display = '';\n        getId('saveFileNameGalaxy').style.display = '';\n        for (let s = 2; s <= 5; s++) {\n            getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            getId(`milestone2Stage${s}Div`).style.display = '';\n        }\n    }\n    if (highest >= 7) {\n        getId('stageSelect').style.display = '';\n        getId('resets').style.display = '';\n        getId('resetStage').style.display = '';\n        getId('researches').style.display = '';\n        getId('vaporizationExtra').style.display = '';\n        getId('stageToggleReset').style.display = '';\n        getId('vaporizationToggleReset').style.display = '';\n        getId('rankToggleReset').style.display = '';\n        getId('collapseToggleReset').style.display = '';\n        getId('mergeToggleReset').style.display = player.inflation.vacuum ? '' : 'none';\n        getId('strangenessTabBtn').style.display = '';\n        getId('stageResets').style.display = '';\n        getId('exportReward').style.display = '';\n        getId('exportStats').style.display = '';\n        if (hotkeyTest !== null) { getId('exitChallengeHotkey').style.display = ''; }\n    }\n};\n\nexport const getUpgradeDescription = (index: number | null, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'inflation') => {\n    if (type === 'inflation') {\n        if (index === null) {\n            getId('inflationText').textContent = 'Hover to see.';\n            getId('inflationEffect').textContent = 'Hover to see.';\n            getId('inflationCost').textContent = 'Cosmon.';\n            return;\n        }\n        const pointer = global.inflationTreeInfo;\n\n        getId('inflationText').textContent = `${pointer.name[index]}. (Level ${format(player.inflation.tree[index])} out of ${format(pointer.max[index])})`;\n        getId('inflationEffect').textContent = pointer.effectText[index]();\n        getId('inflationCost').textContent = player.inflation.tree[index] >= pointer.max[index] ? 'Fully activated.' : `${format(pointer.cost[index])} Cosmon.`;\n        return;\n    }\n    if (type === 'elements') {\n        if (index === null) {\n            getId('elementText').textContent = 'Hover to see.';\n            getId('elementEffect').textContent = 'Hover to see.';\n            getId('elementCost').textContent = 'Elements.';\n            return;\n        }\n        const pointer = global.elementsInfo;\n\n        getId('elementText').textContent = `${pointer.name[index]}.`;\n        getId('elementEffect').textContent = player.elements[index] >= 1 || (player.collapse.show >= index && index !== 0) ? pointer.effectText[index]() : 'Effect is not yet known.';\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' :\n            player.elements[index] > 0 ? 'Awaiting Collapse.' :\n            index === 0 ? 'Unknown.' : `${format(pointer.startCost[index])} Elements.${globalSave.MDSettings[0] ? ' (Hold to create)' : ''}`;\n        return;\n    }\n\n    const stageIndex = player.stage.active;\n    if (index === null) {\n        getId('upgradeText').textContent = 'Hover to see.';\n        getId('upgradeEffect').textContent = 'Hover to see.';\n        getId('upgradeCost').textContent = `${global.stageInfo.costName[stageIndex]}.`;\n        return;\n    }\n    if (type === 'upgrades') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] === 1 ? 'Created.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass && player.researchesExtra[5][0] < 1 ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.costName[stageIndex]}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex][index];\n        if (type === 'researchesExtra' && stageIndex === 4 && index === 0) { pointer.name[0] = ['Nova', 'Supernova', 'Hypernova'][Math.min(level, 2)]; }\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else if (stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass && player.researchesExtra[5][0] < 1) {\n            getId('upgradeCost').textContent = `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.`;\n        } else {\n            let newLevels = 1;\n            let cost = pointer.cost[index];\n            if (player.toggles.max[0] && player.stage.true >= 4 && pointer.max[index] > 1) {\n                const scaling = pointer.scaling[index];\n                if (stageIndex === 1) {\n                    if (player.accretion.rank >= 6 && player.strangeness[1][9] >= 1) {\n                        newLevels = Math.min(Math.max(Math.floor((player.discharge.energy - cost) / scaling + 1), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost += (newLevels - 1) * scaling; }\n                    } else {\n                        const simplify = cost - scaling / 2;\n                        newLevels = Math.min(Math.max(Math.floor(((simplify ** 2 + 2 * scaling * player.discharge.energy) ** 0.5 - simplify) / scaling), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                    }\n                } else {\n                    const currency = stageIndex === 2 ? player.buildings[2][1].current : stageIndex === 3 ? player.buildings[3][0].current : player.buildings[4][0].current;\n                    newLevels = Math.min(Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1), pointer.max[index] - level);\n                    if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost).toNumber(); }\n                }\n            }\n\n            getId('upgradeCost').textContent = `${format(cost)} ${global.stageInfo.costName[stageIndex]}.${newLevels > 1 ? ` [x${format(newLevels)}]` : ''}`;\n        }\n    } else if (type === 'researchesAuto') {\n        const pointer = global.researchesAutoInfo;\n        let level = player.researchesAuto[index];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else {\n            const autoStage = pointer.autoStage[index][level];\n            if (index === 1 && player.strangeness[4][6] >= 1) { level = Math.max(level - 1, 0); }\n            getId('upgradeCost').textContent = !(autoStage === stageIndex || (stageIndex === 5 && autoStage === 4)) ? `This level can only be created while inside '${global.stageInfo.word[autoStage]}'.` :\n                `${format(pointer.costRange[index][level])} ${global.stageInfo.costName[stageIndex]}.`;\n        }\n    } else if (type === 'ASR') {\n        const pointer = global.ASRInfo;\n        const level = player.ASR[stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name}.`;\n        getId('upgradeEffect').textContent = pointer.effectText();\n        getId('upgradeCost').textContent = level >= pointer.max[stageIndex] ? 'Maxed.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 ? \"Cannot be created without 'Superposition' Upgrade\" :\n            stageIndex === 3 && player.accretion.rank < 1 ? \"Cannot be created at 'Ocean world' Rank.\" :\n            `${format(pointer.costRange[stageIndex][level])} ${global.stageInfo.costName[stageIndex]}.`;\n    }\n};\n\nexport const getStrangenessDescription = (index: number | null, stageIndex: number, type: 'strangeness' | 'milestones') => {\n    const stageText = getId(`${type}Stage`);\n    if (index !== null) {\n        stageText.style.color = `var(--${global.stageInfo.textColor[stageIndex]}-text)`;\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n    } else { stageText.textContent = ''; }\n    if (type === 'strangeness') {\n        if (index === null) {\n            getId('strangenessText').textContent = 'Hover to see.';\n            getId('strangenessEffect').textContent = 'Hover to see.';\n            getId('strangenessCost').textContent = 'Strange quarks.';\n            return;\n        }\n        const pointer = global.strangenessInfo[stageIndex];\n\n        getId('strangenessText').textContent = `${pointer.name[index]}.`;\n        getId('strangenessEffect').textContent = pointer.effectText[index]();\n        getId('strangenessCost').textContent = player.strangeness[stageIndex][index] >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n    } else {\n        let text;\n        if (index === null) {\n            getId('milestonesText').textContent = 'Hover to see.';\n            text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"blueText\">Time limit: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"darkvioletText\">${player.inflation.vacuum ? 'Effect' : 'Unlock'}: <span class=\"greenText\">Hover to see.</span></p>`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n            const level = player.milestones[stageIndex][index];\n            getId('milestonesText').textContent = `${pointer.name[index]}. (${format(level)})`;\n            if (player.inflation.vacuum) {\n                const isActive = player.challenges.active === 0;\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive ? player.time.stage : 0), { type: 'time' })} ${isActive ? 'remains ' : ''}to increase this tier within Void.</span></p>\n                <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`;\n            } else if (level < pointer.max[index]) {\n                const isActive = global.stageInfo.activeAll.includes(Math.min(stageIndex, 4));\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive ? player.time.stage : 0), { type: 'time' })} ${isActive ? 'remains ' : ''}to complete this tier within ${isActive ? 'current' : global.stageInfo.word[index === 0 && stageIndex === 5 ? 4 : stageIndex]} Stage.</span></p>\n                <p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Main reward unlocked after ${pointer.max[index] - level} more completions.</span></p>`;\n            } else { text = `<p class=\"darkvioletText\">Reward: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n        }\n\n        const multilineID = getId('milestonesMultiline');\n        if (multilineID.innerHTML !== text) { multilineID.innerHTML = text; }\n        const container = multilineID.parentElement as HTMLElement;\n        container.style.minHeight = `${container.offsetHeight}px`;\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    const isActive = player.challenges.active === index;\n    const info = global.challengesInfo;\n    const color = `${info.color[index]}Text`;\n    const text = `<h3 class=\"${color} bigWord\">${info.name[index]}${isActive ? ', <span class=\"greenText\">active</span>' : ''}</h3>\n    <p class=\"whiteText\">${info.description[index]()}</p>\n    <div><h4 class=\"${color} bigWord\">Effect:</h4>\n    <p>${info.effectText[index]()}</p>\n    <p class=\"blueText\">${isActive ? 'Remaining time' : 'Time limit'} is <span class=\"cyanText\">${format(info.time[index] - (isActive ? (info.reset[index] === 'vacuum' ? player.time.universe : player.time.stage) : 0), { type: 'time' })}</span></p></div>`;\n    const multilineID = getId('challengeMultiline');\n    if (multilineID.innerHTML !== text) { multilineID.innerHTML = text; }\n};\n\n/** Void only at the moment */\nexport const getChallengeReward = (index: number | null) => {\n    if (index === null) { return; }\n    const need = global.challengesInfo.needText[0][index];\n    const current = player.challenges[player.challenges.super ? 'superVoid' : 'void'][index];\n    const best = player.challenges.super ? current : player.challenges.voidCheck[index];\n    const noTime = player.time[player.challenges.super ? 'universe' : 'stage'] > global.challengesInfo.time[0];\n    let text = '';\n    for (let i = 0; i < need.length; i++) {\n        const unlocked = current > i;\n        text += `<div><p><span class=\"${unlocked ? 'greenText' : 'redText'}\">\u2192</span> ${need[i]()}${!unlocked && player.challenges.active === 0 && (noTime || (index === 2 && i === 2 && player.accretion.rank > 1)) ? ' <span class=\"redText\">(Failed)</span>' : ''}</p>\n        <p><span class=\"${unlocked ? 'greenText' : 'redText'}\">Reward:</span> ${best > i ? `${global.challengesInfo.rewardText[0][index][i]}${!unlocked && globalSave.SRSettings[0] ? ' (not unlocked)' : ''}` : 'Not yet unlocked'}</p></div>`;\n    }\n\n    const textHTML = getId('voidRewardsDivText');\n    if (textHTML.innerHTML !== text) { textHTML.innerHTML = text; }\n};\n\nexport const visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = '';\n        const image = getId(`upgrade${index + 1}`);\n        if (player.upgrades[stageIndex][index] === 1) {\n            if (stageIndex === 1) {\n                color = 'green';\n            } else if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            } else if (stageIndex === 6) {\n                color = 'white'; //Placeholder\n            }\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else { image.tabIndex = 0; }\n        image.style.backgroundColor = color;\n    } else if (type === 'elements') {\n        const image = getId(`element${index}`);\n        if (player.elements[index] >= 1) {\n            image.classList.remove('awaiting');\n            image.classList.add('created');\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else if (player.elements[index] > 0) {\n            image.classList.add('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        } else {\n            image.classList.remove('awaiting');\n            image.classList.remove('created');\n            image.tabIndex = 0;\n        }\n    }\n};\n\nexport const visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    let image: HTMLElement;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researches' ? '' : 'Extra';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n        image = getId(`research${extra}${index + 1}Image`);\n    } else if (type === 'researchesAuto') {\n        max = global.researchesAutoInfo.max[index];\n        level = player.researchesAuto[index];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        getId(`researchAuto${index + 1}Max`).textContent = `${max}`;\n        image = getId(`researchAuto${index + 1}Image`);\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n        image = getId('ASRImage');\n    } else /*if (type === 'strangeness')*/ {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n        image = getId(`strange${index + 1}Stage${stageIndex}Image`);\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.style.color = 'var(--green-text)';\n        image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n    } else if (level === 0) {\n        upgradeHTML.style.color = ''; //Red\n        image.tabIndex = 0;\n    } else {\n        upgradeHTML.style.color = 'var(--orchid-text)';\n        image.tabIndex = 0;\n    }\n};\n\n/* If check is number, then it will sort only if that Research is maxed */\nexport const visualUpdateInflation = (check = null as number | null) => {\n    const { max, startCost } = global.inflationTreeInfo;\n    const tree = player.inflation.tree;\n    if (check !== null && tree[check] < max[check]) { return; }\n    const total = player.cosmon.total;\n    const keepIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1];\n    for (let i = 0; i < startCost.length; i++) {\n        const image = getId(`inflation${i + 1}`);\n        image.style.display = total >= startCost[i] ? '' : 'none';\n        if (tree[i] >= max[i]) {\n            getId('inflationCreated').append(image);\n            image.tabIndex = keepIndex ? 0 : -1;\n        } else {\n            getId('inflationAvailable').append(image);\n            image.tabIndex = 0;\n        }\n    }\n};\n\nconst updateRankInfo = () => {\n    const rank = player.accretion.rank;\n    if (global.debug.rankUpdated === rank) { return; }\n    const rankInfo = global.accretionInfo;\n    const name = getId('rankName');\n\n    getId('reset1Button').textContent = rank >= rankInfo.maxRank ? 'Max Rank achieved' : `Next Rank is ${format(rankInfo.rankCost[rank])} Mass`;\n    (getId('rankImage') as HTMLImageElement).src = `Used_art/${rankInfo.rankImage[rank]}`;\n    name.textContent = rankInfo.rankName[rank];\n    name.style.color = `var(--${rankInfo.rankColor[rank]}-text)`;\n    global.debug.rankUpdated = rank;\n};\n\nexport const setRemnants = () => {\n    if (player.stage.active === 4) {\n        const whiteDwarf = player.researchesExtra[4][2] >= 1;\n        getId('special1').title = whiteDwarf ? 'White dwarfs (Red giants)' : 'Red giants';\n        (getQuery('#special1 > img') as HTMLImageElement).src = `Used_art/${whiteDwarf ? 'White%20dwarf' : 'Red%20giant'}.png`;\n        getId('special1Cur').className = whiteDwarf ? 'cyanText' : 'redText';\n\n        const quarkStar = player.researchesExtra[4][3] >= 1;\n        getId('special2').title = quarkStar ? 'Quark stars (Neutron stars)' : 'Neutron stars';\n        (getQuery('#special2 > img') as HTMLImageElement).src = `Used_art/${quarkStar ? 'Quark%20star' : 'Neutron%20star'}.png`;\n        const text2 = `Boost${quarkStar ? ' and cost decrease' : ''} to all Stars`;\n        getQuery('#star2Effect > span:last-of-type').textContent = globalSave.SRSettings[0] ? ` (${text2})` : text2;\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Stars remnants'; }\n    } else if (player.stage.active === 5) {\n        getId('special1').title = 'Galaxy groups';\n        (getQuery('#special1 > img') as HTMLImageElement).src = 'Used_art/Galaxy%20group.png';\n        getId('special1Cur').className = 'grayText';\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Merge results'; }\n    }\n};\n\nconst updateStageHistory = () => {\n    if (global.debug.historyStage === player.stage.resets) { return; }\n    const list = global.historyStorage.stage;\n    const length = Math.min(list.length, player.history.stage.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(list[i][1], { padding: true })} Strange quarks</span>${list[i][2] > 0 ? `, <span class=\"greenText\">${format(list[i][2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][1] / list[i][0], { type: 'income' })}</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('stageHistoryList').innerHTML = text;\n\n    const best = player.history.stage.best;\n    getId('stageHistoryBest').innerHTML = `<span class=\"greenText\">${format(best[1], { padding: true })} Strange quarks</span>${best[2] > 0 ? `, <span class=\"greenText\">${format(best[2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[1] / best[0], { type: 'income' })}</span>`;\n    global.debug.historyStage = player.stage.resets;\n};\nconst updateVacuumHistory = () => {\n    if (global.debug.historyVacuum === player.inflation.resets) { return; }\n    const list = global.historyStorage.vacuum;\n    const length = Math.min(list.length, player.history.vacuum.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"darkvioletText\">${format(list[i][2], { padding: true })} Cosmon</span>, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][2] / list[i][0], { type: 'income' })}</span>, <span class=\"${list[i][1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('vacuumHistoryList').innerHTML = text;\n\n    const best = player.history.vacuum.best;\n    getId('vacuumHistoryBest').innerHTML = `<span class=\"darkvioletText\">${format(best[2], { padding: true })} Cosmon</span>, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[2] / best[0], { type: 'income' })}</span>, <span class=\"${best[1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span>`;\n    global.debug.historyVacuum = player.inflation.resets;\n};\n\n/** @param padding 'exponent' value will behave as true, but only after number turns into its shorter version */\nexport const format = (input: number | Overlimit, settings = {} as { type?: 'number' | 'input' | 'time' | 'income', padding?: boolean | 'exponent' }): string => {\n    if (typeof input === 'object') { return input?.format(settings as any); }\n    const type = settings.type ?? 'number';\n    let padding = settings.padding;\n\n    let extra;\n    if (type === 'income') {\n        const inputAbs = Math.abs(input);\n        if (inputAbs >= 1) {\n            extra = 'per second';\n        } else if (inputAbs >= 1 / 60) {\n            input *= 60;\n            extra = 'per minute';\n        } else if (inputAbs >= 1 / 3600) {\n            input *= 3600;\n            extra = 'per hour';\n        } else if (inputAbs >= 1 / 86400) {\n            input *= 86400;\n            extra = 'per day';\n        } else if (inputAbs >= 1 / 31556952) {\n            input *= 31556952;\n            extra = 'per year';\n        } else if (inputAbs >= 1 / 3.1556952e10) {\n            input *= 3.1556952e10;\n            extra = 'per millennium';\n        } else if (inputAbs >= 1 / 3.1556952e13) {\n            input *= 3.1556952e13;\n            extra = 'per megaannum';\n        } else {\n            input *= 3.1556952e16;\n            extra = 'per eon';\n        }\n\n        if (padding === undefined) { padding = true; }\n    } else if (type === 'time') {\n        const inputAbs = Math.abs(input);\n        if (inputAbs < 60) {\n            extra = 'seconds';\n        } else if (inputAbs < 3600) {\n            const minutes = Math.trunc(input / 60);\n            const seconds = Math.trunc(input - minutes * 60);\n            if (padding === false && seconds === 0) { return `${minutes} minutes`; }\n            return `${minutes} minutes ${seconds} seconds`;\n        } else if (inputAbs < 86400) {\n            const hours = Math.trunc(input / 3600);\n            const minutes = Math.trunc(input / 60 - hours * 60);\n            if (padding === false && minutes === 0) { return `${hours} hours`; }\n            return `${hours} hours ${minutes} minutes`;\n        } else if (inputAbs < 31556952) {\n            const days = Math.trunc(input / 86400);\n            const hours = Math.trunc(input / 3600 - days * 24);\n            if (padding === false && hours === 0) { return `${days} days`; }\n            return `${days} days ${hours} hours`;\n        } else if (inputAbs < 3.1556952e10) {\n            const years = Math.trunc(input / 31556952);\n            const days = Math.trunc(input / 86400 - years * 365.2425);\n            if (padding === false && days === 0) { return `${years} years`; }\n            return `${years} years ${days} days`;\n        } else if (inputAbs < 3.1556952e13) {\n            input /= 3.1556952e10;\n            extra = 'millenniums';\n        } else if (inputAbs < 3.1556952e16) {\n            input /= 3.1556952e13;\n            extra = 'megaannums';\n        } else {\n            input /= 3.1556952e16;\n            extra = 'eons';\n        }\n\n        padding = !(padding === false && Math.trunc(input) === input);\n    }\n    if (!isFinite(input)) { return extra !== undefined ? `${input} ${extra}` : `${input}`; }\n\n    const inputAbs = Math.abs(input);\n    if (inputAbs >= 1e6 || (inputAbs < 1e-3 && inputAbs > 0)) {\n        let digits = Math.floor(Math.log10(inputAbs));\n        let result = Math.round(input / 10 ** (digits - 2)) / 100;\n        if (Math.abs(result) === 10) {\n            result /= 10;\n            digits++;\n        }\n\n        if (padding === 'exponent') { padding = true; }\n        let formated = padding ? result.toFixed(2) : `${result}`;\n        if (type === 'input') { return `${formated}e${digits}`; }\n        formated = `${formated.replace('.', globalSave.format[0])}e${digits}`;\n        return extra !== undefined ? `${formated} ${extra}` : formated;\n    }\n\n    const precision = Math.max(4 - Math.floor(Math.log10(Math.max(inputAbs, 1))), 0);\n    const result = Math.round(input * 10 ** precision) / 10 ** precision;\n\n    if (padding === 'exponent') { padding = false; }\n    let formated = padding ? result.toFixed(precision) : `${result}`;\n    if (type === 'input') { return formated; }\n    formated = formated.replace('.', globalSave.format[0]);\n    if (result >= 1e3) { formated = formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]); }\n    return extra !== undefined ? `${formated} ${extra}` : formated;\n};\n\n/** @param offline used to return early if game is paused due to calculating offline, requires another call after calculations are done */\nexport const stageUpdate = (changed = true, offline = false) => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest } = player.stage;\n    const vacuum = player.inflation.vacuum;\n    const challenge = player.challenges.active;\n\n    stageInfo.activeAll = [];\n    const activeAll = stageInfo.activeAll;\n    if (vacuum) {\n        activeAll.push(1);\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (current >= 2) { activeAll.push(3); } //player.researchesExtra[1][2] >= 1\n        if (current >= 4) { activeAll.push(4); } //player.accretion.rank >= 6\n        if (current >= 5 && player.strangeness[5][3] >= 1) { activeAll.push(5); } //player.elements[26] >= 1\n    } else {\n        if (current === 1 || player.milestones[1][1] >= 6) { stageInfo.activeAll.push(1); }\n        if (current === 2 || player.milestones[2][1] >= 7) { stageInfo.activeAll.push(2); }\n        if (current === 3 || player.milestones[3][1] >= 7) { stageInfo.activeAll.push(3); }\n        if (current >= 4) { activeAll.push(4); }\n        if (current >= 5) { activeAll.push(5); } //player.elements[26] >= 1\n    }\n    if (highest >= 7 || (player.event && highest === 6)) { activeAll.push(6); }\n    if (offline && global.paused) {\n        if (!global.debug.offlineUpdate) { global.debug.offlineUpdate = changed; }\n        return;\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) { element.style.display = active === s ? '' : 'none'; }\n        for (const element of getClass(`stage${s}Include`)) { element.style.display = activeAll.includes(s) ? '' : 'none'; }\n    }\n\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = `var(--${stageInfo.textColor[current]}-text)`;\n    if ((challenge !== null && global.challengesInfo.reset[challenge] === 'stage') || (!vacuum && active >= 6)) {\n        getId('stageReset').textContent = 'No Stage resets available';\n    } else if (vacuum || active >= 4) {\n        getId('stageReset').textContent = highest >= 6 || (player.event && highest === 5) ? (current >= 5 ? 'Requirements are met' : \"Requires '[26] Iron' Element\") : 'Requirements are unknown';\n    }\n    if (challenge !== null) {\n        getId('currentChallenge').style.display = '';\n        const currentID = getQuery('#currentChallenge > span');\n        currentID.textContent = global.challengesInfo.name[challenge];\n        currentID.style.color = `var(--${global.challengesInfo.color[challenge]}-text)`;\n    } else { getId('currentChallenge').style.display = 'none'; }\n\n    if (highest < 7) {\n        getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n        const showAll = vacuum && player.stage.resets >= 1;\n        if (highest < 6) { getId('dischargeToggleReset').style.display = activeAll.includes(1) ? '' : 'none'; }\n        getId('vaporizationToggleReset').style.display = showAll || activeAll.includes(2) ? '' : 'none';\n        getId('rankToggleReset').style.display = showAll || activeAll.includes(3) ? '' : 'none';\n        getId('collapseToggleReset').style.display = showAll || activeAll.includes(4) ? '' : 'none';\n        getId('strangenessTabBtn').style.display = player.strange[0].total > 0 || (vacuum && current >= 5) ? '' : 'none';\n        getId('inflationTabBtn').style.display = 'none';\n        if (changed) {\n            getId('resets').style.display = '';\n            getId('researches').style.display = '';\n        }\n    }\n    if (vacuum) {\n        getId('milestonesProgressArea').style.display = challenge === 0 ? '' : 'none';\n    } else {\n        const interstellar = (active >= 6 ? current : active) >= 4;\n        getId('strange1Effect1Allowed').style.display = interstellar ? '' : 'none';\n        getId('strange1Effect1Disabled').style.display = !interstellar ? '' : 'none';\n        if (highest < 6) {\n            for (let s = 2; s <= 4; s++) {\n                const unlocked = player.stage.resets >= s + 3;\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = unlocked ? '' : 'none';\n                getId(`milestone1Stage${s}Div`).style.display = unlocked ? '' : 'none';\n                getId(`milestone2Stage${s}Div`).style.display = unlocked ? '' : 'none';\n            }\n        }\n    }\n\n    if (!changed) {\n        visualUpdate();\n        numbersUpdate();\n        return;\n    }\n    if (globalSave.MDSettings[0]) {\n        getId('reset1Footer').textContent = specialHTML.resetHTML[active];\n    }\n    if (globalSave.SRSettings[0]) {\n        SRHotkeysInfo(true);\n        for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n            getId(`building${i}`).ariaLabel = `${buildingsInfo.name[active][i]}, hotkeys are ${i} and Shift ${i})`;\n        }\n        getId('extraResearches').ariaLabel = `${['Energy', 'Cloud', 'Rank', 'Collapse', 'Galaxy', ''][active - 1]} Researches`;\n        getId('SRStage').textContent = `Current active Stage is '${stageInfo.word[active]}'${active !== global.trueActive ? `, will be changed to '${stageInfo.word[global.trueActive]}' after changing tab` : ''}`;\n    }\n\n    const upgradesInfo = global.upgradesInfo[active];\n    const researchesInfo = global.researchesInfo[active];\n    const researchesExtraInfo = global.researchesExtraInfo[active];\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = upgradesInfo.maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesInfo.maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesExtraInfo.maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = footerStatsHTML.length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(2, 3, 4, 5);\n        showR.push(0, 1, 2, 3, 4, 5);\n        showF.push(0, 1, 2);\n        getId('specials').style.display = 'none';\n        if (vacuum) {\n            showU.push(0, 1);\n            showRE.push(0, 2);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearches').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(0);\n        showR.push(0, 1);\n        showRE.push(0, 1);\n        showF.push(0, 1);\n        getId('specials').style.display = 'none';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 3) {\n        showU.push(0, 1);\n        showR.push(0, 1);\n        showRE.push(0);\n        showF.push(0);\n        global.debug.rankUpdated = null;\n        getId('specials').style.display = 'none';\n        getId('reset1Main').style.display = '';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 4) {\n        showU.push(0, 1, 2);\n        showR.push(0, 1, 2);\n        showRE.push(0);\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('extraResearches').style.display = '';\n        setRemnants();\n    } else if (active === 5) {\n        showRE.push(0);\n        showF.push(0, 1, 2);\n        getId('stageInfo').style.display = '';\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(0, 1);\n            showR.push(0, 1);\n            getId('extraResearches').style.display = '';\n            getId('special2').style.display = 'none';\n            getId('special3').style.display = 'none';\n        } else {\n            getId('specials').style.display = 'none';\n        }\n        setRemnants();\n    } else if (active === 6) {\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('reset1Main').style.display = 'none';\n        getId('specials').style.display = 'none';\n        getId('extraResearches').style.display = 'none';\n    }\n    getId('buildings').style.display = '';\n    getId('building1').style.display = '';\n    getId('upgrades').style.display = '';\n    getId('stageResearches').style.display = '';\n    (getId('autoWaitInput') as HTMLInputElement).value = format(player.toggles.shop.wait[active], { type: 'input' });\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    const buildingName = buildingsInfo.name[active];\n    const buildingType = buildingsInfo.type[active];\n    const buildingHoverText = buildingsInfo.hoverText[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        (getQuery(`#building${i} > img`) as HTMLImageElement).src = `Used_art/${buildingHTML[i - 1]}`;\n        getQuery(`#building${i}Stats > h4`).textContent = buildingName[i];\n        getId(`building${i}Name`).textContent = buildingName[i];\n        getQuery(`#building${i}ProdDiv > span`).textContent = buildingType[i - 1];\n        getId(`building${i}ProdDiv`).title = buildingHoverText[i - 1];\n        toggleSwap(i, 'buildings');\n    }\n    getQuery('#building0Stats > h4').textContent = buildingName[0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < upgradesInfo.maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i]}`;\n        image.alt = upgradesInfo.name[i];\n        visualUpdateUpgrades(i, active, 'upgrades');\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < researchesInfo.maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i)) { main.style.display = ''; }\n        main.className = researchHTML[i][1];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchesInfo.name[i];\n        visualUpdateResearches(i, active, 'researches');\n    }\n\n    const researchExtraHTML = specialHTML.researchExtraHTML[active];\n    for (let i = 0; i < researchesExtraInfo.maxActive; i++) {\n        const main = getId(`researchExtra${i + 1}`);\n        if (showRE.includes(i)) { main.style.display = ''; }\n        main.className = researchExtraHTML[i][1];\n        const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchExtraHTML[i][0]}`;\n        image.alt = researchesExtraInfo.name[i];\n        visualUpdateResearches(i, active, 'researchesExtra');\n    }\n    getQuery('#extraResearches > div').className = specialHTML.researchExtraDivHTML[active][1];\n    (getQuery('#extraResearches > img') as HTMLImageElement).src = `Used_art/${specialHTML.researchExtraDivHTML[active][0]}`;\n    visualUpdateResearches(0, active, 'ASR');\n\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        (getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement).src = `Used_art/${footerStatsHTML[i][0]}`;\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][1];\n        getQuery(`#footerStat${i + 1} span`).textContent = footerStatsHTML[i][2];\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--stage-text', `var(--${stageInfo.textColor[active]}-text)`);\n    body.setProperty('--stage-button-border', stageInfo.buttonBorder[active]);\n    body.setProperty('--stage-image-borderColor', stageInfo.imageBorderColor[active]);\n    body.setProperty('--image-border', `url(\"Used_art/Stage${active} border.png\")`);\n    getId('currentSwitch').textContent = stageInfo.word[active];\n\n    visualUpdate();\n    numbersUpdate();\n    if (globalSave.theme === null) { setTheme(); }\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseResetUser, dischargeResetUser, enterExitChallengeUser, mergeResetUser, rankResetUser, stageResetUser, switchStage, toggleSwap, vaporizationResetUser } from './Stage';\nimport { buyAll, pauseGameUser } from './Main';\nimport { SRHotkeysInfo, globalSave, specialHTML } from './Special';\nimport type { hotkeysList } from './Types';\n\nexport const hotkeys = {} as Record<string, hotkeysList>;\nconst hotkeyFunction = {\n    makeAll: () => buyAll(),\n    stage: (event) => {\n        if (event.repeat && (player.inflation.vacuum || player.stage.active >= 4)) { return; }\n        void stageResetUser();\n    },\n    discharge: () => void dischargeResetUser(),\n    vaporization: (event) => {\n        if (event.repeat) { return; }\n        void vaporizationResetUser();\n    },\n    rank: () => void rankResetUser(),\n    collapse: (event) => {\n        if (event.repeat) { return; }\n        void collapseResetUser();\n    },\n    galaxy: () => buyBuilding(3, 5),\n    pause: (event) => {\n        if (event.repeat) { return; }\n        void pauseGameUser();\n    },\n    toggleAll: (event) => {\n        if (event.repeat) { return; }\n        toggleSwap(0, 'buildings', true);\n    },\n    merge: (event) => {\n        if (event.repeat) { return; }\n        void mergeResetUser();\n    },\n    universe: () => buyBuilding(1, 6),\n    exitChallenge: () => enterExitChallengeUser(null),\n    tabRight: (event) => {\n        if (event.repeat) { return; }\n        changeTab('Right');\n    },\n    tabLeft: (event) => {\n        if (event.repeat) { return; }\n        changeTab('Left');\n    },\n    subtabUp: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('Up');\n    },\n    subtabDown: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('Down');\n    },\n    stageRight: (event) => {\n        if (event.repeat) { return; }\n        changeStage('Right');\n    },\n    stageLeft: (event) => {\n        if (event.repeat) { return; }\n        changeStage('Left');\n    }\n} as Record<hotkeysList, (event: KeyboardEvent) => void>;\n\n/** Will remove identical hotkeys from globalSave */\nexport const assignHotkeys = () => {\n    for (const key in hotkeys) { delete hotkeys[key]; } //Don't know better way for now\n    const index = globalSave.toggles[0] ? 0 : 1;\n    for (const key in globalSave.hotkeys) {\n        const hotkey = globalSave.hotkeys[key as hotkeysList][index];\n        if (hotkey === '' || hotkey == null) { continue; }\n        if (hotkeys[hotkey] !== undefined) {\n            globalSave.hotkeys[key as hotkeysList] = [];\n        } else { hotkeys[hotkey] = key as hotkeysList; }\n    }\n    if (globalSave.SRSettings[0]) { SRHotkeysInfo(); }\n};\n\n/** Removes hotkey if exist, returns name of removed hotkey */\nexport const removeHotkey = (remove: string): string | null => {\n    const test = hotkeys[remove];\n    if (test === undefined) { return null; }\n    globalSave.hotkeys[test] = [];\n    return test;\n};\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    if (check.code === 'Tab') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        document.body.classList.remove('noFocusOutline');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.body.classList.add('noFocusOutline');\n    }\n    if (global.hotkeys.disabled) { return; }\n    const { key, code } = check;\n    let { shiftKey } = check;\n\n    if (shiftKey) { global.hotkeys.shift = true; }\n    if (check.ctrlKey) { global.hotkeys.ctrl = true; }\n\n    if (code === 'Escape') {\n        if (check.metaKey || check.ctrlKey || shiftKey || check.altKey ||\n            specialHTML.alert[0] !== null || specialHTML.bigWindow !== null) { return; }\n        const notification = specialHTML.notifications[0];\n        if (notification !== undefined) { notification[1](true); }\n        return;\n    }\n\n    const numberKey = Number(code.replace('Digit', '').replace('Numpad', ''));\n    if (!isNaN(numberKey) && code !== '') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        if (isNaN(Number(key))) {\n            if (!shiftKey) { //Numpad\n                shiftKey = true;\n                check.preventDefault();\n            }\n        }\n\n        if (shiftKey) {\n            if (check.repeat) { return; }\n            toggleSwap(numberKey, 'buildings', true);\n        } else if (numberKey !== 0) {\n            buyBuilding(numberKey, player.stage.active);\n        } else { buyAll(); }\n    } else {\n        let name = check.metaKey ? 'Meta ' : '';\n        if (check.ctrlKey) { name += 'Ctrl '; }\n        if (shiftKey) { name += 'Shift '; }\n        if (check.altKey) { name += 'Alt '; }\n        name += globalSave.toggles[0] ?\n            (key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')) :\n            (key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow '));\n        const functionTest = hotkeyFunction[hotkeys[name]];\n        if (functionTest !== undefined) {\n            functionTest(check);\n            check.preventDefault();\n        }\n    }\n};\n\nconst changeTab = (direction: 'Left' | 'Right') => {\n    const tabs = global.tabList.tabs;\n    let index = tabs.indexOf(global.tab);\n\n    if (direction === 'Left') {\n        do {\n            if (index <= 0) {\n                index = tabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tabs[index]));\n        switchTab(tabs[index]);\n    } else {\n        do {\n            if (index >= tabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tabs[index]));\n        switchTab(tabs[index]);\n    }\n};\n\nconst changeSubtab = (direction: 'Down' | 'Up') => {\n    const tab = global.tab;\n    const subtabs = global.tabList[`${tab}Subtabs`] as string[];\n    if (subtabs.length < 2) { return; } //To remove never[]\n    let index = subtabs.indexOf(global.subtab[`${tab}Current`]);\n\n    if (direction === 'Down') {\n        do {\n            if (index <= 0) {\n                index = subtabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tab, subtabs[index]));\n        switchTab(tab, subtabs[index]);\n    } else {\n        do {\n            if (index >= subtabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tab, subtabs[index]));\n        switchTab(tab, subtabs[index]);\n    }\n};\n\nconst changeStage = (direction: 'Left' | 'Right') => {\n    const activeAll = global.stageInfo.activeAll;\n    if (activeAll.length === 1) { return; }\n    let index = activeAll.indexOf(player.stage.active);\n\n    if (direction === 'Left') {\n        if (index <= 0) {\n            index = activeAll.length - 1;\n        } else { index--; }\n        switchStage(activeAll[index]);\n    } else {\n        if (index >= activeAll.length - 1) {\n            index = 0;\n        } else { index++; }\n        switchStage(activeAll[index]);\n    }\n};\n\n/* preventDefault should not be used here */\nexport const handleTouchHotkeys = (event: TouchEvent) => {\n    const touches = event.changedTouches;\n    if (touches.length > 1) { return; }\n    const mainHTML = document.documentElement;\n    const change = [ //Too lazy to detect changes in screen size, so no caching\n        (touches[0].clientX - specialHTML.mobileDevice.start[0]) / mainHTML.clientWidth,\n        (touches[0].clientY - specialHTML.mobileDevice.start[1]) / mainHTML.clientHeight\n    ];\n\n    if (Math.abs(change[1]) > 0.2) {\n        if (Math.abs(change[1]) < 0.8 || Math.abs(change[0]) > 0.2) { return; }\n        changeSubtab(change[1] > 0 ? 'Up' : 'Down');\n        return;\n    } else if (Math.abs(change[0]) < 0.6) { return; }\n    changeTab(change[0] > 0 ? 'Left' : 'Right');\n};\n", "import { assignHotkeys, removeHotkey } from './Hotkeys';\nimport { getId, getQuery, globalSaveStart, pauseGame } from './Main';\nimport { deepClone, global, player } from './Player';\nimport { assignMaxRank } from './Stage';\nimport type { globalSaveType, hotkeysList } from './Types';\nimport { format, numbersUpdate, stageUpdate, visualTrueStageUnlocks, visualUpdate } from './Update';\n\nexport const globalSave: globalSaveType = {\n    intervals: {\n        main: 20,\n        offline: 40,\n        numbers: 80,\n        visual: 1000,\n        autoSave: 20000\n    },\n    hotkeys: { //hotkeyFunction: [key, code]\n        stage: ['S', 'S'],\n        discharge: ['D', 'D'],\n        vaporization: ['V', 'V'],\n        rank: ['R', 'R'],\n        collapse: ['C', 'C'],\n        galaxy: ['G', 'G'],\n        pause: ['P', 'P'],\n        makeAll: ['M', 'M'],\n        toggleAll: ['Shift A', 'Shift A'],\n        merge: ['Shift M', 'Shift M'],\n        universe: ['Shift U', 'Shift U'],\n        exitChallenge: ['Shift E', 'Shift E'],\n        tabRight: ['Arrow Right', 'Arrow Right'],\n        tabLeft: ['Arrow Left', 'Arrow Left'],\n        subtabUp: ['Arrow Up', 'Arrow Up'],\n        subtabDown: ['Arrow Down', 'Arrow Down'],\n        stageRight: ['Shift Arrow Right', 'Shift Arrow Right'],\n        stageLeft: ['Shift Arrow Left', 'Shift Arrow Left']\n    },\n    toggles: [false, false, false, false],\n    //Hotkeys type[0]; Elements as tab[1]; Allow text selection[2]; Footer on top[3]\n    format: ['.', ''], //Point[0]; Separator[1]\n    theme: null,\n    fontSize: 16,\n    MDSettings: [false, false], //Status[0]; Mouse events[1]\n    SRSettings: [false, false, false], //Status[0]; Tabindex Upgrades[1]; Tabindex primary[2]\n    developerMode: false\n};\n\nexport const saveGlobalSettings = (noSaving = false): string => {\n    const hotkeysClone = deepClone(globalSave.hotkeys);\n    const encoder = new TextEncoder();\n    for (const key in hotkeysClone) {\n        const array = hotkeysClone[key as hotkeysList];\n        for (let i = 0; i < array.length; i++) {\n            array[i] = String.fromCharCode(...encoder.encode(array[i]));\n        }\n    }\n    const clone = { ...globalSave };\n    clone.hotkeys = hotkeysClone;\n    const save = btoa(JSON.stringify(clone));\n    if (!noSaving) { localStorage.setItem('fundamentalSettings', save); }\n    return save;\n};\n\nexport const toggleSpecial = (number: number, type: 'global' | 'mobile' | 'reader', change = false, reload = false) => {\n    let toggles;\n    if (type === 'mobile') {\n        toggles = globalSave.MDSettings;\n    } else if (type === 'reader') {\n        toggles = globalSave.SRSettings;\n    } else {\n        toggles = globalSave.toggles;\n    }\n\n    if (change) {\n        if (reload) {\n            return void (async() => {\n                if (!await Confirm('Changing this setting will reload game, confirm?\\n(Game will not autosave)')) { return; }\n                pauseGame();\n                toggles[number] = !toggles[number];\n                saveGlobalSettings();\n                window.location.reload();\n                void Alert('Awaiting game reload');\n            })();\n        } else {\n            toggles[number] = !toggles[number];\n            saveGlobalSettings();\n        }\n    }\n\n    let toggleHTML;\n    if (type === 'mobile') {\n        toggleHTML = getId(`MDToggle${number}`);\n    } else if (type === 'reader') {\n        toggleHTML = getId(`SRToggle${number}`);\n    } else {\n        toggleHTML = getId(`globalToggle${number}`);\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = 'OFF';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'ON';\n    }\n};\n\nexport const specialHTML = { //Images here are from true vacuum for easier cache\n    resetHTML: ['', 'Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge', ''], //[0] === textContent\n    longestBuilding: 7, //+1\n    buildingHTML: [ //outerHTML is slow\n        [],\n        ['Preon.png', 'Quarks.png', 'Particle.png', 'Atom.png', 'Molecule.png'], //[0] === src\n        ['Drop.png', 'Puddle.png', 'Pond.png', 'Lake.png', 'Sea.png', 'Ocean.png'],\n        ['Cosmic%20dust.png', 'Planetesimal.png', 'Protoplanet.png', 'Natural%20satellite.png', 'Subsatellite.png'],\n        ['Brown%20dwarf.png', 'Orange%20dwarf.png', 'Red%20supergiant.png', 'Blue%20hypergiant.png', 'Quasi%20star.png'],\n        ['Nebula.png', 'Star%20cluster.png', 'Galaxy.png'],\n        ['Universe.png']\n    ],\n    longestUpgrade: 13,\n    upgradeHTML: [\n        [], [\n            'UpgradeQ1.png',\n            'UpgradeQ2.png',\n            'UpgradeQ3.png',\n            'UpgradeQ4.png',\n            'UpgradeQ5.png',\n            'UpgradeQ6.png',\n            'UpgradeQ7.png',\n            'UpgradeQ8.png',\n            'UpgradeQ9.png',\n            'UpgradeQ10.png'\n        ], [\n            'UpgradeW1.png',\n            'UpgradeW2.png',\n            'UpgradeW3.png',\n            'UpgradeW4.png',\n            'UpgradeW5.png',\n            'UpgradeW6.png',\n            'UpgradeW7.png',\n            'UpgradeW8.png',\n            'UpgradeW9.png'\n        ], [\n            'UpgradeA1.png',\n            'UpgradeA2.png',\n            'UpgradeA3.png',\n            'UpgradeA4.png',\n            'UpgradeA5.png',\n            'UpgradeA6.png',\n            'UpgradeA7.png',\n            'UpgradeA8.png',\n            'UpgradeA9.png',\n            'UpgradeA10.png',\n            'UpgradeA11.png',\n            'UpgradeA12.png',\n            'UpgradeA13.png'\n        ], [\n            'UpgradeS1.png',\n            'UpgradeS2.png',\n            'UpgradeS3.png',\n            'UpgradeS4.png',\n            'UpgradeS5.png'\n        ], [\n            'UpgradeG1.png',\n            'UpgradeG2.png',\n            'UpgradeG3.png',\n            'UpgradeG4.png'\n        ], []\n    ],\n    longestResearch: 9,\n    researchHTML: [\n        [], [\n            ['ResearchQ1.png', 'stage1borderImage'], //[1] === className\n            ['ResearchQ2.png', 'stage1borderImage'],\n            ['ResearchQ3.png', 'stage1borderImage'],\n            ['ResearchQ4.png', 'stage4borderImage'],\n            ['ResearchQ5.png', 'stage4borderImage'],\n            ['ResearchQ6.png', 'stage4borderImage']\n        ], [\n            ['ResearchW1.png', 'stage2borderImage'],\n            ['ResearchW2.png', 'stage2borderImage'],\n            ['ResearchW3.png', 'stage2borderImage'],\n            ['ResearchW4.png', 'stage2borderImage'],\n            ['ResearchW5.png', 'stage2borderImage'],\n            ['ResearchW6.png', 'stage2borderImage']\n        ], [\n            ['ResearchA1.png', 'stage3borderImage'],\n            ['ResearchA2.png', 'stage2borderImage'],\n            ['ResearchA3.png', 'stage3borderImage'],\n            ['ResearchA4.png', 'stage3borderImage'],\n            ['ResearchA5.png', 'stage3borderImage'],\n            ['ResearchA6.png', 'stage3borderImage'],\n            ['ResearchA7.png', 'stage1borderImage'],\n            ['ResearchA8.png', 'stage7borderImage'],\n            ['ResearchA9.png', 'stage1borderImage']\n        ], [\n            ['ResearchS1.png', 'stage5borderImage'],\n            ['ResearchS2.png', 'stage5borderImage'],\n            ['ResearchS3.png', 'stage7borderImage'],\n            ['ResearchS4.png', 'stage5borderImage'],\n            ['ResearchS5.png', 'stage6borderImage'],\n            ['ResearchS6.png', 'stage4borderImage']\n        ], [\n            ['ResearchG1.png', 'stage1borderImage'],\n            ['ResearchG2.png', 'stage6borderImage']\n        ], []\n    ],\n    longestResearchExtra: 5,\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'stage6borderImage'],\n        ['Collapse%20Researches.png', 'stage6borderImage'],\n        ['Galaxy%20Researches.png', 'stage3borderImage'],\n        ['Missing.png', 'stage7borderImage']\n    ],\n    researchExtraHTML: [\n        [], [\n            ['ResearchEnergy1.png', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'stage6borderImage']\n        ], [\n            ['ResearchClouds1.png', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'stage4borderImage'],\n            ['ResearchClouds4.png', 'stage2borderImage']\n        ], [\n            ['ResearchRank1.png', 'stage3borderImage'],\n            ['ResearchRank2.png', 'stage3borderImage'],\n            ['ResearchRank3.png', 'stage3borderImage'],\n            ['ResearchRank4.png', 'stage2borderImage'],\n            ['ResearchRank5.png', 'stage2borderImage']\n        ], [\n            ['ResearchCollapse1.png', 'stage6borderImage'],\n            ['ResearchCollapse2.png', 'stage7borderImage'],\n            ['ResearchCollapse3.png', 'stage1borderImage'],\n            ['ResearchCollapse4.png', 'stage6borderImage']\n        ], [\n            ['ResearchGalaxy1.png', 'stage3borderImage']\n        ], []\n    ],\n    longestFooterStats: 3,\n    footerStatsHTML: [\n        [], [\n            ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'], //[2] === textcontent\n            ['Energy.png', 'stage4borderImage orangeText', 'Energy']\n        ], [\n            ['Water.png', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'stage2borderImage blueText', 'Drops'],\n            ['Clouds.png', 'stage3borderImage grayText', 'Clouds']\n        ], [\n            ['Mass.png', 'stage3borderImage grayText', 'Mass']\n        ], [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements']\n        ], [\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'stage4borderImage orangeText', 'Elements'],\n            ['Stars.png', 'stage7borderImage redText', 'Stars']\n        ], [\n            ['Dark%20matter.png', 'stage3borderImage grayText', 'Matter'],\n            ['Cosmon.png', 'stage6borderImage darkvioletText', 'Cosmon']\n        ]\n    ],\n    mobileDevice: { //All browsers that I tested didn't properly detected more than 1 touch\n        start: [0, 0] //[X, Y]\n    },\n    cache: {\n        imagesDiv: document.createElement('div'),\n        idMap: new Map<string, HTMLElement>(),\n        classMap: new Map<string, HTMLCollectionOf<HTMLElement>>(),\n        queryMap: new Map<string, HTMLElement>()\n    },\n    notifications: [] as Array<[string, (instantClose?: boolean) => void]>, //[text, true ? incrementFunc : closeFunc]\n    alert: [null, null] as [number | null, (() => void) | null], //[priority, closeFunc]\n    bigWindow: null as string | null,\n    styleSheet: document.createElement('style') //Secondary\n};\n\nexport const preventImageUnload = () => {\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n\n    let images = '<img src=\"Used_art/Red%20giant.png\" loading=\"lazy\"><img src=\"Used_art/White%20dwarf.png\" loading=\"lazy\">';\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 2) { continue; } //Drops\n            } else if (s === 5 && i < 2) { continue; } //Solar mass and Elements\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`;\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    specialHTML.cache.imagesDiv.innerHTML = images; //Saved just in case\n};\n\n/** Not providing value for 'theme' will make it use one from globalSave and remove all checks */\nexport const setTheme = (theme = 'current' as 'current' | number | null) => {\n    if (theme !== 'current') {\n        if (theme !== null) {\n            if (player.stage.true < theme) { theme = null; }\n            if (theme === 6 && player.stage.true < 7) { theme = null; }\n        }\n\n        globalSave.theme = theme;\n        saveGlobalSettings();\n        getId('currentTheme').textContent = theme === null ? 'Default' : global.stageInfo.word[theme];\n    } else { theme = globalSave.theme; }\n\n    const upgradeTypes = ['upgrade', 'element', 'inflation'];\n    const properties = {\n        '--background-color': '#030012',\n        '--window-color': '#12121c',\n        '--window-border': 'cornflowerblue',\n        '--footer-color': 'darkblue',\n        '--button-color': 'mediumblue',\n        '--button-border': 'darkcyan',\n        '--button-hover': '#2626ff',\n        '--building-afford': '#a90000',\n        '--tab-active': '#8b00c5',\n        '--tab-elements': '#9f6700',\n        '--tab-strangeness': '#00b100',\n        '--tab-inflation': '#6c1ad1',\n        '--hollow-hover': '#170089',\n        '--footerButton-hover': '#181818',\n        '--input-border': '#831aa5',\n        '--input-text': '#cf71ff',\n        '--button-text': '#e3e3e3',\n        '--main-text': 'var(--cyan-text)',\n        '--white-text': 'white',\n        //'--cyan-text': '#03d3d3',\n        '--blue-text': 'dodgerblue',\n        '--orange-text': 'darkorange',\n        '--gray-text': '#8f8f8f',\n        '--orchid-text': '#e14bdb',\n        '--darkorchid-text': '#bd24ef',\n        '--darkviolet-text': '#8635eb',\n        '--red-text': '#eb0000',\n        '--green-text': '#00e900',\n        '--yellow-text': '#fafa00'\n        //'--brown-text': '#9b7346'\n    };\n\n    /* Many of these colors will need to be changed in other places (find them with quick search, there are too many of them) */\n    switch (theme ?? player.stage.active) {\n        case 1:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = '';\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = '';\n            }\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            break;\n        case 2:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--white-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#070026';\n            properties['--window-color'] = '#000052';\n            properties['--window-border'] = 'blue';\n            properties['--footer-color'] = '#0000db';\n            properties['--button-color'] = '#0000eb';\n            properties['--button-border'] = '#386cc7';\n            properties['--button-hover'] = '#2929ff';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#990000';\n            properties['--hollow-hover'] = '#2400d7';\n            properties['--input-border'] = '#4747ff';\n            properties['--input-text'] = 'dodgerblue';\n            properties['--main-text'] = 'var(--blue-text)';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#8b6bff';\n            properties['--green-text'] = '#82cb3b';\n            properties['--red-text'] = '#f70000';\n            break;\n        case 3:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = 'var(--green-text)';\n            }\n            properties['--background-color'] = '#000804';\n            properties['--window-color'] = '#2e1200';\n            properties['--window-border'] = '#31373e';\n            properties['--footer-color'] = '#221a00';\n            properties['--button-color'] = '#291344';\n            properties['--button-border'] = '#424242';\n            properties['--button-hover'] = '#382055';\n            properties['--building-afford'] = '#9e0000';\n            properties['--tab-active'] = '#8d4c00';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#5a2100';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#8b4a00';\n            properties['--input-text'] = '#e77e00';\n            properties['--main-text'] = 'var(--gray-text)';\n            properties['--white-text'] = '#dfdfdf';\n            properties['--orange-text'] = '#f58600';\n            properties['--green-text'] = '#00db00';\n            break;\n        case 4:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--blue-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#140e04';\n            properties['--window-color'] = '#4e0000';\n            properties['--window-border'] = '#894800';\n            properties['--footer-color'] = '#4e0505';\n            properties['--button-color'] = '#6a3700';\n            properties['--button-border'] = '#a35700';\n            properties['--button-hover'] = '#8a4700';\n            properties['--building-afford'] = '#007f95';\n            properties['--tab-active'] = '#008297';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--tab-strangeness'] = '#00a500';\n            properties['--hollow-hover'] = '#605100';\n            properties['--footerButton-hover'] = '#212121';\n            properties['--input-border'] = '#008399';\n            properties['--input-text'] = '#05c3c3';\n            properties['--button-text'] = '#d9d900';\n            properties['--main-text'] = 'var(--orange-text)';\n            properties['--white-text'] = '#e5e500';\n            properties['--blue-text'] = '#2e96ff';\n            properties['--gray-text'] = '#8b8b8b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#9457ff';\n            properties['--red-text'] = 'red';\n            properties['--green-text'] = '#00e600';\n            properties['--yellow-text'] = 'var(--green-text)';\n            break;\n        case 5:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = '#060010';\n            properties['--window-color'] = '#001d42';\n            properties['--window-border'] = '#35466e';\n            properties['--footer-color'] = '#2f005c';\n            properties['--button-color'] = '#4a008f';\n            properties['--button-border'] = '#8f004c';\n            properties['--button-hover'] = '#6800d6';\n            properties['--building-afford'] = '#8603ff';\n            properties['--tab-active'] = '#8500ff';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#3b0080';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#3656a1';\n            properties['--input-text'] = '#6a88cd';\n            properties['--button-text'] = '#fc9cfc';\n            properties['--main-text'] = 'var(--darkorchid-text)';\n            properties['--white-text'] = '#ff79ff';\n            properties['--orchid-text'] = '#ff00f4';\n            properties['--darkorchid-text'] = '#c000ff';\n            properties['--darkviolet-text'] = '#9f52ff';\n            properties['--yellow-text'] = 'var(--darkviolet-text)';\n            break;\n        case 6:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--orange-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = 'black';\n            properties['--window-color'] = '#01003c';\n            properties['--window-border'] = '#7100ff';\n            properties['--footer-color'] = '#00007a';\n            properties['--button-color'] = '#2b0095';\n            properties['--button-border'] = '#6c1ad1';\n            properties['--button-hover'] = '#3d00d6';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#8d0000';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#490070';\n            properties['--input-border'] = '#a50000';\n            properties['--input-text'] = 'red';\n            properties['--button-text'] = '#bfbdff';\n            properties['--main-text'] = 'var(--darkviolet-text)';\n            properties['--white-text'] = '#aba8ff';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkviolet-text'] = '#8157ff';\n            properties['--red-text'] = 'red';\n            properties['--yellow-text'] = 'var(--green-text)';\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--transition-all', '800ms');\n    body.setProperty('--transition-buttons', '600ms');\n    for (const property in properties) { body.setProperty(property, properties[property as '--main-text']); }\n\n    setTimeout(() => {\n        body.setProperty('--transition-all', '0ms');\n        body.setProperty('--transition-buttons', '100ms');\n    }, 800);\n};\n\nexport const Alert = async(text: string, priority = 0): Promise<void> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve();\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        const key = async(event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                confirm.focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve();\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string, priority = 0): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(false);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        let result = false;\n        const yes = () => {\n            result = true;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                if (event.shiftKey || document.activeElement === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                (document.activeElement === cancel ? confirm : cancel).focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\nexport const Prompt = async(text: string, placeholder = '', priority = 0): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(null);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const input = getId('alertInput') as HTMLInputElement;\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        body.classList.remove('noTextSelection');\n        input.placeholder = placeholder;\n        input.value = '';\n        const oldFocus = document.activeElement as HTMLElement | null;\n        input.focus();\n\n        let result: null | string = null;\n        const yes = () => {\n            result = input.value === '' ? input.placeholder : input.value;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                const active = document.activeElement;\n                if (event.shiftKey || (code === 'Space' && active === input) || active === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                if (event.shiftKey && document.activeElement === input) {\n                    event.preventDefault();\n                    cancel.focus();\n                } else if (!event.shiftKey && document.activeElement === cancel) {\n                    event.preventDefault();\n                    input.focus();\n                }\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\nexport const Notify = (text: string) => {\n    const { notifications } = specialHTML;\n\n    let index;\n    for (let i = 0; i < notifications.length; i++) {\n        if (notifications[i][0] === text) {\n            index = i;\n            break;\n        }\n    }\n\n    if (index === undefined) {\n        let count = 1;\n        let timeout: number;\n\n        const html = document.createElement('p');\n        html.textContent = text;\n        html.style.animation = 'hideX 800ms ease-in-out reverse';\n        html.style.pointerEvents = 'none';\n        if (globalSave.SRSettings[0]) { html.role = 'alert'; }\n        getId('notifications').append(html);\n\n        const pointer = notifications[notifications.push([text, (instantClose = false) => {\n            if (instantClose) {\n                if (html.style.animation === '') { remove(); }\n                return;\n            }\n            html.textContent = `${text} | x${++count}`;\n            if (timeout === undefined) { return; } //Required to make it work properly if call happened too early\n            clearTimeout(timeout);\n            timeout = setTimeout(remove, 7200);\n        }]) - 1];\n        const remove = () => {\n            notifications.splice(notifications.indexOf(pointer), 1);\n            html.removeEventListener('click', remove);\n            html.style.animation = 'hideX 800ms ease-in-out forwards';\n            html.style.pointerEvents = 'none';\n            setTimeout(() => html.remove(), 800);\n            clearTimeout(timeout);\n        };\n        setTimeout(() => {\n            html.style.animation = '';\n            html.style.pointerEvents = '';\n            timeout = setTimeout(remove, 7200);\n            html.addEventListener('click', remove);\n        }, 800);\n    } else { notifications[index][1](); }\n};\n\nexport const hideFooter = () => {\n    const toggleData = getId('hideToggle').dataset;\n    if (toggleData.disabled === 'true') { return; }\n    const footer = getId('footer');\n    const footerArea = getId('footerMain');\n    const arrow = getId('hideArrow');\n\n    const animationReset = () => {\n        footer.style.animation = '';\n        arrow.style.animation = '';\n        toggleData.disabled = '';\n    };\n\n    global.footer = !global.footer;\n    toggleData.disabled = 'true';\n    if (global.footer) {\n        footerArea.style.display = '';\n        arrow.style.transform = '';\n        footer.style.animation = 'hideY 800ms reverse';\n        arrow.style.animation = 'rotate 800ms reverse';\n        getQuery('#hideToggle > p').textContent = 'Hide';\n        getId('stageSelect').classList.add('active');\n        setTimeout(animationReset, 800);\n\n        visualUpdate();\n        numbersUpdate();\n    } else {\n        footer.style.animation = 'hideY 800ms backwards';\n        arrow.style.animation = 'rotate 800ms backwards';\n        getQuery('#hideToggle > p').textContent = 'Show';\n        getId('stageSelect').classList.remove('active');\n        setTimeout(() => {\n            footerArea.style.display = 'none';\n            arrow.style.transform = 'rotate(180deg)';\n            animationReset();\n        }, 800);\n    }\n};\n\nexport const changeFontSize = (initial = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    const size = Math.min(Math.max(initial ? globalSave.fontSize : (input.value === '' ? 16 : Math.floor(Number(input.value) * 100) / 100), 12), 24);\n    if (!initial) {\n        globalSave.fontSize = size;\n        saveGlobalSettings();\n\n        (getId('milestonesMultiline').parentElement as HTMLElement).style.minHeight = '';\n    }\n\n    document.documentElement.style.fontSize = size === 16 ? '' : `${size}px`;\n    input.value = `${size}`;\n    adjustCSSRules(initial);\n};\n/* Only decent work around media not allowing var() and rem units being bugged */\nconst adjustCSSRules = (initial: boolean) => {\n    const styleSheet = (getId('primaryRules') as HTMLStyleElement).sheet;\n    if (styleSheet == null) { //Safari doesn't wait for CSS to load even if script is defered\n        if (initial) {\n            return getId('primaryRules').addEventListener('load', () => {\n                adjustCSSRules(false);\n            }, { once: true });\n        }\n        return Notify(`Due to ${styleSheet} related Error some font size features will not work`);\n    }\n    const styleLength = styleSheet.cssRules.length - 1;\n    const fontRatio = globalSave.fontSize / 16;\n    const rule1 = styleSheet.cssRules[styleLength - 1] as CSSMediaRule; //Primary phone size\n    const rule2 = styleSheet.cssRules[styleLength] as CSSMediaRule; //Tiny phone size\n    styleSheet.deleteRule(styleLength);\n    styleSheet.deleteRule(styleLength - 1);\n    styleSheet.insertRule(rule1.cssText.replace(rule1.conditionText, `screen and (max-width: ${893 * fontRatio + 32}px)`), styleLength - 1);\n    styleSheet.insertRule(rule2.cssText.replace(rule2.conditionText, `screen and (max-width: ${362 * fontRatio + 32}px)`), styleLength);\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    let value = htmlInput.value.replace(' ', '\u00A0'); //No break space\n    const allowed = ['.', '\u00B7', ',', '\u00A0', '_', \"'\", '\"', '`', '|'].includes(value);\n    if (!allowed || globalSave.format[point ? 1 : 0] === value) {\n        if (point && globalSave.format[1] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            globalSave.format[1] = '';\n        }\n        value = point ? '.' : '';\n        htmlInput.value = value;\n    }\n    globalSave.format[point ? 0 : 1] = value;\n    saveGlobalSettings();\n};\n\n/** Short is only for hotkeys that can change */\nexport const SRHotkeysInfo = (short = false) => {\n    const index = globalSave.toggles[0] ? 0 : 1;\n    const resetName = specialHTML.resetHTML[player.stage.active];\n    const resetHotkey = globalSave.hotkeys[resetName.toLowerCase() as hotkeysList];\n    const list = [resetHotkey !== undefined ? resetHotkey[index] : ''];\n    if (!short) {\n        list.push(\n            globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index],\n            globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index],\n            globalSave.hotkeys.stageLeft[index], globalSave.hotkeys.stageRight[index],\n            globalSave.hotkeys.stage[index],\n            globalSave.hotkeys.makeAll[index],\n            globalSave.hotkeys.toggleAll[index]\n        );\n    }\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n    }\n    getId('reset1Main').ariaLabel = `${resetName} reset, hotkey is ${list[0]}`;\n    if (short) { return; }\n    getQuery('#footerMain > nav').ariaLabel = `Tab list, hotkeys are ${list[1]} and ${list[2]}`;\n    getId('subtabs').ariaLabel = `Subtab list, hotkeys are ${list[3]} and ${list[4]}`;\n    getId('stageSelect').ariaLabel = `Active Stages list, hotkeys are ${list[5]} and ${list[6]}`;\n    getId('resetStage').ariaLabel = `Stage reset, hotkey is ${list[7]}`;\n    getId('makeAllStructures').ariaLabel = `Make all Structures, hotkey is ${list[8]}`;\n    getId('toggleBuilding0').ariaLabel = `Toggle all Structures, hotkey is ${list[9]}`;\n};\n\nexport const MDStrangenessPage = (stageIndex: number) => {\n    for (let s = 1; s <= 5; s++) { getId(`strangenessSection${s}`).style.display = 'none'; }\n    getId(`strangenessSection${stageIndex}`).style.display = '';\n};\n\nexport const replayEvent = async() => {\n    let last;\n    if (player.stage.true >= 6) {\n        last = player.event ? 8 : player.stage.resets >= 1 ? 7 : 6;\n    } else {\n        last = player.stage.true - (player.event ? 0 : 1);\n        if (last < 1) { return void Alert('There are no unlocked events'); }\n    }\n\n    let text = 'Which event do you want to see again?\\nEvent 1: Stage reset';\n    if (last >= 2) { text += '\\nEvent 2: Clouds softcap'; }\n    if (last >= 3) { text += '\\nEvent 3: New Rank'; }\n    if (last >= 4) { text += '\\nEvent 4: New Elements'; }\n    if (last >= 5) { text += '\\nEvent 5: Intergalactic'; }\n    if (last >= 6) { text += '\\nEvent 6: True Vacuum'; }\n    if (last >= 7) { text += '\\nEvent 7: Void unlocked'; }\n    if (last >= 8) { text += '\\nEvent 8: New Universe'; }\n\n    const event = Number(await Prompt(text, `${last}`));\n    if (event > last) { return; }\n    playEvent(event);\n};\n\n/** Sets player.event to true if replay is false */\nexport const playEvent = (event: number, replay = true) => {\n    if (specialHTML.alert[0] !== null) { return Notify(`Missed Event ${event}, you can replay it from options`); }\n    if (!replay) { player.event = true; }\n\n    switch (event) {\n        case 1:\n            return void Alert('New reset tier has been unlocked. It will allow to reach higher tiers of Structures, but for the price of everything else');\n        case 2:\n            return void Alert(`Cloud density is too high... Any new Clouds past ${format(1e4)} will be weaker due to softcap`);\n        case 3:\n            if (!replay) {\n                assignMaxRank();\n                global.debug.rankUpdated = null;\n            }\n            return void Alert(\"Can't gain any more Mass with current Rank. New one has been unlocked, but reaching it will softcap the Mass production\");\n        case 4:\n            return void Alert('Last explosion not only created first Neutron stars, but also unlocked new Elements through Supernova nucleosynthesis');\n        case 5:\n            if (!replay) { stageUpdate(false); }\n            return void Alert(\"There are no Structures in Intergalactic yet, but they can be created within previous Stages. Stage resets and exports will now award Strange quarks, '[26] Iron' Element will use new effect to improve reward.\\n(Stars in Intergalactic are just Stars from Interstellar)\");\n        case 6:\n            return void Alert('As Galaxies started to Merge, their combined Gravity pushed Vacuum out of its local minimum into more stable global minimum. New forces and Structures are expected within this new and true Vacuum state');\n        case 7:\n            return void Alert(\"With Vacuum decaying remaining matter had rearranged itself in such way that lead to the formation of the 'Void'. Check it out in 'Advanced' subtab\");\n        case 8:\n            if (!replay) { stageUpdate(false); }\n            return void Alert(\"Soon there will be enough matter to create first 'Universe' within 'Abyss' Stage. Doing it will require getting at least 40 Galaxies before Merge reset. Creating it will do a Vacuum reset, while also resetting Vacuum state back to false\");\n    }\n};\n\nconst buildBigWindow = () => {\n    if (getId('closeBigWindow', true) !== null) { return; }\n    getId('bigWindow').innerHTML = '<div role=\"dialog\" aria-modal=\"false\"><button type=\"button\" id=\"closeBigWindow\">Close</button></div>';\n    specialHTML.styleSheet.textContent += '#bigWindow > div { display: flex; flex-direction: column; align-items: center; width: clamp(20vw, 38em, 80vw); height: clamp(18vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em; }';\n    specialHTML.styleSheet.textContent += '#bigWindow > div > button { flex-shrink: 0; border-radius: 4px; width: 6em; font-size: 0.92em; margin-top: auto; } #bigWindow > div > div { width: 100%; overflow-y: auto; overscroll-behavior-y: none; }';\n};\n\nexport const getVersionInfoHTML = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    buildBigWindow();\n    if (getId('versionHTML', true) === null) {\n        const mainHTML = document.createElement('div');\n        mainHTML.innerHTML = `<label>v0.2.1</label><p>- New content (Abyss)\\n- Full game rebalance\\n- Custom hotkeys\\n- Updated supports\\n- Many small changes and additions\\n<a href=\"https://docs.google.com/document/d/1o6rk6mG-fCG7Xi1BpA4w4g_5_h9A87wrCv7bODweBWA/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Full changelog</a></p>\n        <label>v0.2.0</label><p>- Reworked balance for all Stages past first reset cycle\\n- Many quality of life additions\\n- Most of settings are now saved separate from save file\\n- Some more work on Mobile device support</p>\n        <label>v0.1.9</label><p>- More true Vacuum balance\\n- Reworked time related formats\\n- Warp and Offline time usage reworked</p>\n        <label>v0.1.8</label><p>- True Vacuum small balance changes\\n- Upgrades and Researches merged\\n- Added copy to clipboard, load from string save file options</p>\n        <label>v0.1.7</label><p>- New content (Void)\\n- Further balance changes</p>\n        <label>v0.1.6</label><p>- Massive rebalance and reworks for all Stages</p>\n        <label>v0.1.5</label><p>- True Vacuum minor balance\\n- Images no longer unload\\n- Screen reader support reworked</p>\n        <label>v0.1.4</label><p>- Custom scrolls\\n- Notifications</p>\n        <label>v0.1.3</label><p>- True Vacuum balance changes\\n- Submerged Stage minor balance\\n- Replay event button\\n\\n- History for Stage resets</p>\n        <label>v0.1.2</label><p>- New content (Vacuum)\\n- Offline time reworked\\n- Added version window (removed change log on game load)\\n- Permanently removed text movement</p>\n        <label>v0.1.1</label><p>- More balance changes for late game</p>\n        <label>v0.1.0</label><p>- New content (Intergalactic)\\n- Balance changes for late game</p>\n        <label>v0.0.9</label><p>- New content (Milestones)\\n- More Interstellar and late game balance</p>\n        <label>v0.0.8</label><p>- Minor speed up to all Stages past Microworld</p>\n        <label>v0.0.7</label><p>- New content (Strangeness)\\n- Microworld Stage rework\\n\\n- Added stats for Save file name</p>\n        <label>v0.0.6</label><p>- Added hotkeys list\\n\\n- Option to remove text movement\\n- Ability to rename save file</p>\n        <label>v0.0.5</label><p>- New content (Interstellar)\\n- Basic loading screen\\n\\n- Added hotkeys</p>\n        <label>v0.0.4</label><p>- Speed up to all Stages\\n- Added events\\n\\n- Added numbers format</p>\n        <label>v0.0.3</label><p>- New content (Accretion)\\n- Submerged Stage extended\\n- Offline time calculated better</p>\n        <label>v0.0.2</label><p>- Stats subtab</p>\n        <label>v0.0.1</label><p>- Submerged Stage rework\\n- Added change log on game load\\n\\n- Mobile device support</p>\n        <label>v0.0.0</label><p>- First published version\\n\\n- Submerged Stage placeholder</p>`;\n        getQuery('#bigWindow > div').prepend(mainHTML);\n        mainHTML.id = 'versionHTML';\n        specialHTML.styleSheet.textContent += '#versionHTML label { font-size: 1.18em; } #versionHTML p { line-height: 1.3em; white-space: pre-line; color: var(--white-text); margin-top: 0.2em; margin-bottom: 1.4em; } #versionHTML p:last-of-type { margin-bottom: 0; }';\n    }\n\n    specialHTML.bigWindow = 'version';\n    const body = document.body;\n    const closeButton = getId('closeBigWindow');\n    const mainHTML = getId('versionHTML');\n    const windowHMTL = getId('bigWindow');\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) { return; }\n        const code = event.code;\n        if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        mainHTML.style.display = 'none';\n        body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    mainHTML.style.display = '';\n    windowHMTL.style.display = '';\n    closeButton.focus();\n};\n\nexport const getHotkeysHTML = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    buildBigWindow();\n    if (getId('hotkeysHTML', true) === null) {\n        const mainHTML = document.createElement('div');\n        mainHTML.innerHTML = `<p id=\"hotkeysMessage\" class=\"bigWord\" aria-live=\"assertive\">Some hotkeys can be changed by clicking on them</p>\n        ${globalSave.MDSettings[0] ? `<p>Swipe Left or Right \u2012 <span class=\"whiteText\">change current tab</span></p>\n        <p>Swipe Down or Up \u2012 <span class=\"whiteText\">change current subtab</span></p>` : ''}\n        <label id=\"tabRightHotkey\"><button></button> \u2012 <span class=\"whiteText\">change tab to the next one</span></label>\n        <label id=\"tabLeftHotkey\"><button></button> \u2012 <span class=\"whiteText\">change tab to the previous one</span></label>\n        <label id=\"subtabUpHotkey\"><button></button> \u2012 <span class=\"whiteText\">change subtab to the next one</span></label>\n        <label id=\"subtabDownHotkey\"><button></button> \u2012 <span class=\"whiteText\">change subtab to the previous one</span></label>\n        <label id=\"stageRightHotkey\"><button></button> \u2012 <span class=\"whiteText\">change active Stage to the next one</span></label>\n        <label id=\"stageLeftHotkey\"><button></button> \u2012 <span class=\"whiteText\">change active Stage to the previous one</span></label>\n        <p>Numbers \u2012 <span class=\"whiteText\">make a Structure</span></p>\n        <label id=\"makeAllHotkey\">0 <span class=\"whiteText\">or</span> <button></button> \u2012 <span class=\"whiteText\">make all Structures</span></label>\n        <p>Shift Numbers \u2012 <span class=\"whiteText\">toggle auto Structure</span></p>\n        <label id=\"toggleAllHotkey\">Shift 0 <span class=\"whiteText\">or</span> <button></button> \u2012 <span class=\"whiteText\">toggle all auto Structures</span></label>\n        <label id=\"exitChallengeHotkey\"><button></button> \u2012 <span class=\"whiteText\">Exit out of current Challenge</span></label>\n        <div>\n            <label id=\"stageHotkey\" class=\"stageText\"><button></button> \u2012 <span class=\"whiteText\">Stage reset</span></label>\n            <label id=\"dischargeHotkey\" class=\"orangeText stage1Include\"><button></button> \u2012 <span class=\"whiteText\">Discharge</span></label>\n            <label id=\"vaporizationHotkey\" class=\"blueText stage2Include\"><button></button> \u2012 <span class=\"whiteText\">Vaporization</span></label>\n            <label id=\"rankHotkey\" class=\"darkorchidText stage3Include\"><button></button> \u2012 <span class=\"whiteText\">Rank</span></label>\n            <label id=\"collapseHotkey\" class=\"orchidText stage4Include\"><button></button> \u2012 <span class=\"whiteText\">Collapse</span></label>\n            <label id=\"galaxyHotkey\" class=\"grayText stage5Include\"><button></button> \u2012 <span class=\"whiteText\">Galaxy</span></label>\n            <label id=\"mergeHotkey\" class=\"darkvioletText stage5Include\"><button></button> \u2012 <span class=\"whiteText\">Merge</span></label>\n            <label id=\"universeHotkey\" class=\"darkvioletText stage6Include\"><button></button> \u2012 <span class=\"whiteText\">Universe</span></label>\n            <label id=\"pauseHotkey\" class=\"grayText\"><button></button> \u2012 <span class=\"whiteText\">pause</span></label>\n        </div>\n        <p>Enter <span class=\"whiteText\">or</span> Space \u2012 <span class=\"whiteText\">click selected HTML Element or confirm Alert</span></p>\n        <p>Escape \u2012 <span class=\"whiteText\">cancel changing hotkey, close Alert or Notification</span></p>\n        <p>Tab <span class=\"whiteText\">and</span> Shift Tab \u2012 <span class=\"whiteText\">select another HTML Element</span></p>\n        <p>Holding Enter on last selected button will repeatedly press it, also works with Mouse and Touch events on some buttons</p>\n        <label id=\"hotkeysToggleLabel\" title=\"Turn ON, if using non QWERTY layout keyboard\">Language dependant hotkeys </label>\n        <button id=\"restoreHotkeys\" type=\"button\">Restore default hotkeys values</button>`;\n        getQuery('#bigWindow > div').prepend(mainHTML);\n        mainHTML.id = 'hotkeysHTML';\n        const toggle = getId('globalToggle0');\n        toggle.className = 'specialToggle';\n        toggle.style.display = '';\n        getId('hotkeysToggleLabel').append(toggle);\n        specialHTML.styleSheet.textContent += '#hotkeysHTML { display: flex; flex-direction: column; align-items: center; row-gap: 0.2em; } #hotkeysHTML > div { display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%; gap: 0.3em; } #hotkeysHTML > div label { justify-self: center; width: max-content; }';\n        specialHTML.styleSheet.textContent += '#hotkeysHTML button:not(.specialToggle) { color: inherit; background-color: unset; border-width: 1px; border-color: inherit; border-right: none; border-left: none; border-top: none; font-size: inherit; height: unset; }';\n\n        const changeHotkey = async(disableFirstUp = false): Promise<string[] | null> => {\n            return await new Promise((resolve) => {\n                getId('hotkeysMessage').textContent = 'Awaiting new value for the hotkey';\n                const body = document.body;\n                let result: null | string[] = null;\n                const prevent = (event: KeyboardEvent) => {\n                    const code = event.code;\n                    if (code === 'Tab') { return; }\n                    event.preventDefault();\n                    if (code === 'Escape' || ((code === 'Enter' || code === 'Space') && document.activeElement === getId('closeBigWindow'))) {\n                        finish();\n                    }\n                };\n                const detect = async(event: KeyboardEvent) => {\n                    if (disableFirstUp) { return void (disableFirstUp = false); }\n                    const { key, code } = event;\n                    if (code === 'Tab' || code === 'Escape') { return; }\n                    let prefix = event.metaKey ? 'Meta ' : '';\n                    if (event.ctrlKey) { prefix += 'Ctrl '; }\n                    if (event.shiftKey) { prefix += 'Shift '; }\n                    if (event.altKey) { prefix += 'Alt '; }\n                    if ((!isNaN(Number(code.replace('Digit', '').replace('Numpad', ''))) && code !== '') ||\n                        key === 'Meta' || key === 'Control' || key === 'Shift' || key === 'Alt' || code === 'Enter' || code === 'Space') {\n                        getId('hotkeysMessage').textContent = `Value '${prefix}${globalSave.toggles[0] ? key : code}' for hotkeys isn't allowed`;\n                        return;\n                    }\n                    result = [`${prefix}${key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')}`,\n                        `${prefix}${key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow ')}`];\n                    finish();\n                };\n                const finish = () => {\n                    body.removeEventListener('keydown', prevent);\n                    body.removeEventListener('keyup', detect);\n                    body.removeEventListener('click', finish, { capture: true });\n                    global.hotkeys.disabled = false;\n                    resolve(result);\n                };\n                global.hotkeys.disabled = true;\n                body.addEventListener('keydown', prevent);\n                body.addEventListener('keyup', detect);\n                body.addEventListener('click', finish, { capture: true });\n            });\n        };\n        const index = globalSave.toggles[0] ? 0 : 1;\n        for (const key in globalSaveStart.hotkeys) {\n            const button = getQuery(`#${key}Hotkey > button`) as HTMLButtonElement;\n            const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n            button.textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n            button.type = 'button';\n            button.addEventListener('click', async(event) => {\n                const button = getQuery(`#${key}Hotkey > button`);\n                button.style.borderBottomStyle = 'dashed';\n                const newHotkey = await changeHotkey(event.clientX <= 0); //Check if click was caused by pressing Enter\n                if (newHotkey !== null) {\n                    const index = globalSave.toggles[0] ? 0 : 1;\n                    const removed = removeHotkey(newHotkey[index]);\n                    if (removed !== null && removed !== key) { getQuery(`#${removed}Hotkey > button`).textContent = 'None'; }\n                    button.textContent = newHotkey[index];\n                    globalSave.hotkeys[key as hotkeysList] = newHotkey;\n                    assignHotkeys();\n                    saveGlobalSettings();\n                }\n                button.style.borderBottomStyle = '';\n                getId('hotkeysMessage').textContent = 'Some hotkeys can be changed by clicking on them';\n            });\n        }\n        getId('restoreHotkeys').addEventListener('click', () => {\n            globalSave.hotkeys = deepClone(globalSaveStart.hotkeys);\n            const index = globalSave.toggles[0] ? 0 : 1;\n            for (const key in globalSave.hotkeys) {\n                getQuery(`#${key}Hotkey > button`).textContent = globalSave.hotkeys[key as hotkeysList][index] as string;\n            }\n            assignHotkeys();\n            saveGlobalSettings();\n        });\n        stageUpdate(false);\n        visualTrueStageUnlocks();\n    }\n\n    specialHTML.bigWindow = 'hotkeys';\n    const body = document.body;\n    const closeButton = getId('closeBigWindow');\n    const mainHTML = getId('hotkeysHTML');\n    const windowHMTL = getId('bigWindow');\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) { return; }\n        const code = event.code;\n        if ((!global.hotkeys.disabled && code === 'Escape') || ((code === 'Enter' || code === 'Space') && document.activeElement === closeButton)) {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        mainHTML.style.display = 'none';\n        body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    mainHTML.style.display = '';\n    windowHMTL.style.display = '';\n    getQuery('#tabRightHotkey > button').focus();\n};\n", "import { globalSave } from './Special';\n\ntype allowedTypes = string | number | bigint | [number, number] | Overlimit;\n/* This is version has all settings (and other stuff) removed (for better speed) */\n/** To test number for being Overlimit can use: typeof number === 'object'; Array.isArray(number); number instanceof Overlimit\n * @param number allowed types are string, number, bigint, Overlimit and [number, number]; If Array is used, then must not contain any mistakes (example and proper way: [11, 0] > [1.1, 1]; [1, NaN] > [NaN, NaN]; [1, 1.4] > [1, 1])\n */\nexport default class Overlimit extends Array<number> {\n    constructor(number: allowedTypes) {\n        const post = technical.convert(number);\n        super(post[0], post[1]);\n    }\n    get mantissa() { return this[0]; }\n    get exponent() { return this[1]; }\n\n    /** Creates new Overlimit */\n    clone(): Overlimit { return new Overlimit(this); }\n    setValue(newValue: allowedTypes) { return this.#privateSet(technical.convert(newValue)); }\n    #privateSet(newValue: [number, number] | Overlimit) {\n        this[0] = newValue[0];\n        this[1] = newValue[1];\n        return this;\n    }\n\n    /** Can take any amount of arquments */\n    plus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.add(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    minus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.sub(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    multiply(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.mult(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    divide(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.div(result, technical.convert(numbers[i]));\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Power must be a number */\n    power(power: number) { return this.#privateSet(technical.pow(this, power)); }\n    /** Root must be a number, default value is 2 */\n    root(root = 2) { return this.#privateSet(technical.pow(this, 1 / root)); }\n    /** Base must be a number, default value is Math.E */\n    log(base = 2.718281828459045) { return this.#privateSet(technical.log(this, base)); }\n\n    abs() {\n        this[0] = Math.abs(this[0]);\n        return this;\n    }\n\n    trunc() { return this.#privateSet(technical.trunc(this)); }\n    floor() { return this.#privateSet(technical.floor(this)); }\n    ceil() { return this.#privateSet(technical.ceil(this)); }\n    round() { return this.#privateSet(technical.round(this)); }\n\n    /** Doesn't check exponent, since exponent being NaN while mantissa isn't would be a bug */\n    isNaN(): boolean { return isNaN(this[0])/* || isNaN(this[1])*/; }\n    /** Will set new value to provided, but only if current one is NaN */\n    replaceNaN(replaceWith: allowedTypes): Overlimit { return isNaN(this[0]) ? this.#privateSet(technical.convert(replaceWith)) : this; }\n    /** Doesn't check exponent, since exponent being Infinity while mantissa isn't would be a bug */\n    isFinite(): boolean { return isFinite(this[0])/* && isFinite(this[1])*/; }\n\n    lessThan(compare: allowedTypes): boolean { return technical.less(this, technical.convert(compare)); }\n    lessOrEqual(compare: allowedTypes): boolean { return technical.lessOrEqual(this, technical.convert(compare)); }\n    moreThan(compare: allowedTypes): boolean { return technical.more(this, technical.convert(compare)); }\n    moreOrEqual(compare: allowedTypes): boolean { return technical.moreOrEqual(this, technical.convert(compare)); }\n    notEqual(compare: allowedTypes): boolean { return technical.notEqual(this, technical.convert(compare)); }\n    equal(compare: allowedTypes): boolean { return !technical.notEqual(this, technical.convert(compare)); }\n    /** Can take any amount of arquments; Returns true if no arquments provided */\n    allEqual(...compare: allowedTypes[]): boolean {\n        let previous: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const next = technical.convert(compare[i]);\n            if (technical.notEqual(previous, next)) { return false; }\n            previous = next;\n        }\n\n        return true;\n    }\n\n    /** Set original number to biggest of provided arguments */\n    max(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.#privateSet([NaN, NaN]); }\n\n            if (technical.less(result, after)) { result = after; }\n        }\n\n        return this.#privateSet(result);\n    }\n    /** Set original number to smallest of provided arguments */\n    min(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.#privateSet([NaN, NaN]); }\n\n            if (technical.more(result, after)) { result = after; }\n        }\n\n        return this.#privateSet(result);\n    }\n\n    /** Returns formatted string, takes object as arqument (some default values are from limitSettings)\n     * @param type \"number\" is default, \"input\" will make formatted number to be usable in Overlimit\n     * @param padding should zeros be added past point, if below max digits. 'exponent' value will behave as true, but only after number turns into its shorter version\n     */\n    format(settings = {} as { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string { return technical.format(this, settings); }\n    /** Returns value as Number, doesn't change original number */\n    toNumber(): number { return Number(technical.turnString(this)); }\n    /** Same as .toNumber, but also converts Infinity (and NaN; can use replaceNaN before calling this function) to Number.MAX_VALUE */\n    toSafeNumber(): number {\n        const result = Number(technical.turnString(this));\n        if (isFinite(result)) { return result; }\n        return Number.MAX_VALUE * (result < 0 ? -1 : 1);\n    }\n    /** Returns value as String, doesn't change original number */\n    toString(): string { return technical.turnString(this); }\n    /** Returns value as Array, doesn't change original number */\n    toArray(): [number, number] { return [this[0], this[1]]; }\n    /** Automatically called with JSON.stringify. It will call toString to preserve NaN and Infinity */\n    toJSON(): string { return technical.turnString(this); }\n}\n\nconst technical = {\n    convert: (number: allowedTypes): [number, number] | Overlimit => {\n        if (typeof number === 'object' && number !== null) { return number; } //Readonly Array\n        if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n        const index = number.indexOf('e');\n        const result: [number, number] = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n\n        if (!isFinite(result[0]) || !isFinite(result[1])) {\n            if (result[0] === 0 || result[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(result[0]) || isNaN(result[1])) { return [NaN, NaN]; }\n            return [result[0] < 0 ? -Infinity : Infinity, Infinity];\n        }\n\n        const after = Math.abs(result[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after < 1 || after >= 10) {\n            const digits = Math.floor(Math.log10(after));\n            result[0] /= 10 ** digits;\n            result[1] += digits;\n\n            if (Math.abs(result[0]) < 1) { //Important\n                result[0] *= 10;\n                result[1]--;\n            }\n        }\n\n        //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n        result[0] = Math.round(result[0] * 1e14) / 1e14;\n        if (Math.abs(result[0]) === 10) {\n            result[0] /= 10;\n            result[1]++;\n        }\n\n        return result;\n    },\n    /* Number is readonly */\n    turnString: (number: [number, number] | Overlimit): string => number[1] === 0 || !isFinite(number[0]) ? `${number[0]}` : `${number[0]}e${number[1]}`,\n    /* Right is readonly */\n    add: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return left; }\n        if (left[0] === 0) { return [right[0], right[1]]; }\n        if (!isFinite(left[0]) || !isFinite(right[0])) {\n            const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n            return isNaN(check) ? [NaN, NaN] : [check, Infinity];\n        }\n\n        const difference = left[1] - right[1];\n        if (Math.abs(difference) >= 16) { return difference > 0 ? left : [right[0], right[1]]; }\n\n        if (difference === 0) {\n            left[0] += right[0];\n        } else if (difference > 0) {\n            left[0] += right[0] / 10 ** difference;\n        } else {\n            left[0] = right[0] + (left[0] * 10 ** difference);\n            left[1] = right[1];\n        }\n\n        const after = Math.abs(left[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        } else if (after < 1) {\n            const digits = -Math.floor(Math.log10(after));\n            left[0] *= 10 ** digits;\n            left[1] -= digits;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly, its quite a lazy function... */\n    sub: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => technical.add(left, [-right[0], right[1]]),\n    /* Right is readonly */\n    mult: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n        left[1] += right[1];\n        left[0] *= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly */\n    div: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return [NaN, NaN]; }\n        if (left[0] === 0) { return [0, 0]; }\n\n        left[1] -= right[1];\n        left[0] /= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) < 1) {\n            left[0] *= 10;\n            left[1]--;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    pow: (left: [number, number] | Overlimit, power: number): [number, number] | Overlimit => {\n        if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n        if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n        if (!isFinite(power)) {\n            if ((left[1] === 0 && left[0] === 1) || left[0] < 0) { return left[0] === 1 ? [1, 0] : [NaN, NaN]; }\n            if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n            return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n        if (negative !== null) { //Complex numbers are not supported\n            if (Math.floor(power) !== power) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const base10 = power * (Math.log10(left[0]) + left[1]);\n        if (!isFinite(base10)) {\n            if (base10 === -Infinity) { return [0, 0]; }\n            if (isNaN(left[0])) { return [NaN, NaN]; }\n            return [negative === 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n\n        if (negative === 1) { left[0] *= -1; }\n        return left;\n    },\n    log: (left: [number, number] | Overlimit, base: number): [number, number] | Overlimit => {\n        if (Math.abs(base) === 1 || (left[0] === -1 && left[1] === 0)) { return [NaN, NaN]; }\n        if (left[0] === 1 && left[1] === 0) { return [0, 0]; }\n        if (base === 0) { return [NaN, NaN]; } //Order matters (0 ** 0 === 1)\n        if (left[0] === 0) { return isNaN(base) ? [NaN, NaN] : [Math.abs(base) > 1 ? -Infinity : Infinity, Infinity]; }\n        if (!isFinite(base)) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n        if (!isFinite(left[0])) {\n            if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n            return [Math.abs(base) < 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0;\n        if (negative) { //Complex numbers are not supported\n            if (base > 0) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const tooSmall = left[1] < 0; //Minor issue with negative power\n        const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        if (tooSmall) { left[0] *= -1; } //Already can be negative\n        if (base !== 10) {\n            left[0] /= Math.log10(Math.abs(base));\n\n            const after = Math.abs(left[0]);\n            if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                left[0] /= 10 ** digits;\n                left[1] += digits;\n            }\n        }\n\n        if (base < 0 || negative) { //Special test for negative numbers\n            if (left[1] < 0) { return [NaN, NaN]; }\n            //Due to floats (1.1 * 100 !== 110), test is done in this way (also we assume that big numbers are never uneven)\n            const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n            if (base < 0 && !negative) {\n                if (test !== 0) { return [NaN, NaN]; } //Result must be even\n            } else { //base < 0 && negative\n                if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n            }\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Left and right are readonly */\n    less: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    lessOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    more: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    moreOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    notEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        return left[1] !== right[1] || left[0] !== right[0];\n    },\n    trunc: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.trunc(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        return left;\n    },\n    floor: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? -1 : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.floor(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === -10) {\n            left[0] = -1;\n            left[1]++;\n        }\n        return left;\n    },\n    ceil: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? 0 : 1, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.ceil(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n        return left;\n    },\n    round: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.round(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n        return left;\n    },\n    /* Left is readonly */\n    format: (left: [number, number] | Overlimit, settings: { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string => {\n        const [base, power] = left;\n        if (!isFinite(base)) { return `${base}`; }\n        const type = settings.type ?? 'number';\n        let padding = settings.padding;\n\n        //1.23e1.23e123\n        if (power >= 1e4 || power <= -1e4) {\n            let exponent = power;\n            let mantissa = Math.round(base * 100) / 100;\n            if (Math.abs(mantissa) === 10) {\n                mantissa /= 10;\n                exponent++; //Mantissa in short version kept only for this\n            }\n\n            exponent = Math.floor(Math.log10(Math.abs(exponent)));\n            let powerMantissa = Math.round(power / 10 ** (exponent - 2)) / 100;\n            if (Math.abs(powerMantissa) === 10) {\n                powerMantissa /= 10;\n                exponent++;\n            }\n\n            if (padding === 'exponent') { padding = true; }\n            const formatedPower = padding ? powerMantissa.toFixed(2) : `${powerMantissa}`;\n            if (type !== 'input') { //1.23ee123 (-1.23e-e123)\n                powerMantissa = Math.abs(powerMantissa);\n                if (base < 0) { powerMantissa *= -1; }\n                return `${formatedPower.replace('.', globalSave.format[0])}e${power < 0 ? '-' : ''}e${exponent}`;\n            }\n\n            const formatedBase = padding ? mantissa.toFixed(2) : `${mantissa}`;\n            return type === 'input' ? `${formatedBase}e${formatedPower}e${exponent}` : `${formatedBase.replace('.', globalSave.format[0])}e${formatedPower.replace('.', globalSave.format[0])}e${exponent}`;\n        }\n\n        //1.23e123\n        if (power >= 6 || power < -3) {\n            let exponent = power;\n            let mantissa = Math.round(base * 100) / 100;\n            if (Math.abs(mantissa) === 10) {\n                mantissa /= 10;\n                exponent++;\n            }\n            if (padding === 'exponent') { padding = true; }\n            const formated = padding ? mantissa.toFixed(2) : `${mantissa}`;\n            return type === 'input' ? `${formated}e${exponent}` : `${formated.replace('.', globalSave.format[0])}e${exponent}`;\n        }\n\n        //12345\n        const digits = Math.max(4 - Math.max(power, 0), 0);\n        const mantissa = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n        if (padding === 'exponent') { padding = false; }\n        const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n        return type === 'input' ? formated : mantissa >= 1e3 ? formated.replace('.', globalSave.format[0]).replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]) : formated.replace('.', globalSave.format[0]);\n    }\n};\n", "import Overlimit from './Limit';\nimport { getId, updateCollapsePointsText } from './Main';\nimport { assignStrangeInfo, calculateMaxLevel, assignMilestoneInformation, assignPuddles, toggleConfirm, toggleSwap, calculateEffects, assignMaxRank, assignTrueEnergy, calculateResearchCost, autoUpgradesSet, autoResearchesSet, autoElementsSet, toggleSuperVoid, assignSubmergedLevels } from './Stage';\nimport type { globalType, playerType } from './Types';\nimport { format, switchTab, visualTrueStageUnlocks, visualUpdateInflation, visualUpdateResearches, visualUpdateUpgrades } from './Update';\nimport { prepareVacuum } from './Vacuum';\n\nexport const player: playerType = { //Only for information that need to be saved (cannot be calculated)\n    version: 'v0.2.2t',\n    fileName: 'Fundamental, [dateD.M.Y] [timeH-M-S], [stage]',\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        time: 0,\n        peak: 0, //Interstellar only\n        input: [0, 0]\n    },\n    discharge: { //Stage 1\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: { //Stage 2\n        clouds: new Overlimit('0'),\n        cloudsMax: new Overlimit('0'),\n        input: [3, 0] //[Boost, max]\n    },\n    accretion: { //Stage 3\n        rank: 0\n    },\n    collapse: { //Stage 4, 5\n        mass: 0.01235,\n        massMax: 0.01235,\n        stars: [0, 0, 0],\n        show: 0,\n        input: [2, 1e6], //[Boost, wait]\n        points: []\n    },\n    merge: { //Stage 5\n        reward: [0, 0, 0, 0],\n        resets: 0\n    },\n    inflation: { //Stage 6\n        tree: [],\n        vacuum: false,\n        resets: 0,\n        age: 0\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        export: [0, 0, 0, 0],\n        offline: 0,\n        online: 0,\n        stage: 0,\n        universe: 0\n    },\n    buildings: [\n        [] as unknown as playerType['buildings'][0], [ //Stage 1\n            {\n                current: new Overlimit('3'),\n                total: new Overlimit('3'),\n                trueTotal: new Overlimit('3')\n            }, {\n                true: 0, //Bought\n                current: new Overlimit('0'), //On hands\n                total: new Overlimit('0'), //This reset\n                trueTotal: new Overlimit('0') //This stage\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 2\n            {\n                current: new Overlimit('2.7753108348135e-3'),\n                total: new Overlimit('2.7753108348135e-3'),\n                trueTotal: new Overlimit('2.7753108348135e-3')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 3\n            {\n                current: new Overlimit('1e-19'),\n                total: new Overlimit('1e-19'),\n                trueTotal: new Overlimit('1e-19')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 4\n            {\n                current: new Overlimit('1'),\n                total: new Overlimit('1'),\n                trueTotal: new Overlimit('1')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 5\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 6\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ]\n    ],\n    strange: [ //Stage 5\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    cosmon: { //Stage 6\n        current: 0,\n        total: 0\n    },\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    researchesAuto: [],\n    ASR: [], //Auto Structures Research\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    challenges: {\n        active: null,\n        super: false,\n        void: [0, 0, 0, 0, 0, 0],\n        superVoid: [0, 0, 0, 0, 0, 0],\n        voidCheck: [0, 0, 0, 0, 0, 0]\n    },\n    toggles: {\n        normal: [], //class 'toggleNormal'\n        /* Auto Stage switch[0]; Auto disable Vaporization[1]; Auto disable Stage[2]; Automatic leave[3]; Auto accept Offline[4] */\n        confirm: [], //Class 'toggleConfirm'\n        /* Stage[0]; Discharge[1]; Vaporization[2]; Rank[3]; Collapse[4]; Merge[5] */\n        buildings: [], //Class 'toggleBuilding' ([0] everywhere, is toggle all)\n        hover: [], //Class 'toggleHover'\n        /* Upgrades/Researches/Elements[0] */\n        max: [], //Class 'toggleMax'\n        /* Researches[0] */\n        auto: [], //Class 'toggleAuto'\n        /* Stage[0], Discharge[1], Vaporization[2], Rank[3], Collapse[4],\n           Upgrades[5], Researches[6], ResearchesExtra[7], Elements[8] */\n        shop: {\n            input: 0,\n            wait: [2]\n        }\n    },\n    history: {\n        stage: { //[time, quarks, strangelets, reserve]\n            best: [3.1556952e16, 0, 0, 0],\n            list: [],\n            input: [5, 10]\n        },\n        vacuum: { //[time, state, cosmon]\n            best: [3.1556952e16, false, 0],\n            list: [],\n            input: [5, 10]\n        }\n    },\n    event: false,\n    clone: {}\n};\n\nexport const global: globalType = { //For information that doesn't need to be saved\n    tab: 'stage',\n    subtab: {\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        upgradeCurrent: 'Upgrades',\n        strangenessCurrent: 'Matter',\n        inflationCurrent: 'Researches'\n    } as globalType['subtab'],\n    tabList: { //Order comes from footer\n        tabs: ['stage', 'upgrade', 'strangeness', 'inflation', 'settings'],\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'History', 'Stats'],\n        upgradeSubtabs: ['Upgrades', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones'],\n        inflationSubtabs: ['Researches', 'Milestones']\n    } as globalType['tabList'],\n    debug: {\n        offlineSpeed: 0.2,\n        offlineUpdate: null,\n        errorID: true, //Notify about missing ID\n        errorQuery: true, //About incorect Query\n        errorGain: true, //About NaN or Infinity\n        timeLimit: false, //About reaching time limit\n        rankUpdated: null, //Rank number\n        historyStage: null, //Stage resets\n        historyVacuum: null //Vacuum resets\n    },\n    trueActive: 1,\n    lastSave: 0,\n    paused: true,\n    footer: true,\n    hotkeys: {\n        disabled: true,\n        shift: false,\n        ctrl: false\n    },\n    automatization: { //Sorted cheapest first\n        autoU: [ //Upgrades\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [ //Researches\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [ //Researches Extra\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    dischargeInfo: {\n        energyType: [[]],\n        energyStage: [0],\n        energyTrue: 0,\n        tritium: new Overlimit('0'),\n        miltiplier: 1,\n        selfBoost: 1,\n        base: 4,\n        total: 0,\n        next: 1,\n        scaling: 10\n    },\n    vaporizationInfo: {\n        trueResearch0: 0,\n        trueResearch1: 0,\n        trueResearchRain: 0,\n        get: new Overlimit('0'),\n        tension: 1,\n        stress: 1\n    },\n    accretionInfo: {\n        unlockA: [2, 4, 8, 11], //Quick look up for required Upgrades\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5], //Upgrades\n        rankR: [1, 1, 2, 2, 3, 3, 3, 4, 5], //Researches\n        rankE: [2, 3, 4, 5, 3], //Researches Extra\n        rankCost: [5.9722e27, 1e-7, 1e10, 1e24, 5e29, 2.45576045e31, 1.98847e40],\n        rankColor: ['blue', 'cyan', 'gray', 'gray', 'gray', 'darkviolet', 'orange', 'gray'],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar', 'Protogalaxy'],\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png', 'Protogalaxy.png'],\n        maxRank: 4,\n        effective: 1,\n        multiplier: 1,\n        satellites: new Overlimit('1'),\n        disableAuto: false,\n        dustSoft: 1\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000], //Buildings\n        unlockU: [0.01235, 0.076, 1.3, 10, 40], //Upgrades\n        unlockR: [0.18, 0.3, 0.8, 1.3, 40, 1000], //Researches\n        newMass: 0,\n        starCheck: [0, 0, 0],\n        multiplier: 1,\n        massEffect: 1,\n        neutronEffect: 1,\n        trueStars: 0,\n        pointsLoop: 0 //Micro optimization\n    },\n    mergeInfo: {\n        checkReward: [0],\n        galaxyBase: 0,\n        multiplier: new Overlimit('1')\n    },\n    inflationInfo: {\n        globalSpeed: 1,\n        preonCap: new Overlimit('1e14'),\n        dustCap: new Overlimit('1e48'),\n        microworld: 1,\n        accretion: 1,\n        massCap: 0.01235\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined,\n        mouseRepeat: undefined\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Abyss'],\n        textColor: ['', 'cyan', 'blue', 'gray', 'orange', 'darkorchid', 'darkviolet'],\n        buttonBorder: ['', 'darkcyan', '#386cc7', '#424242', '#a35700', '#8f004c', '#6c1ad1'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        costName: ['', 'Energy', 'Drops', 'Mass', 'Elements', 'Elements', 'Dark matter'],\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4, 2], //Need to also count index [0]\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Elements', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi-stars'],\n            ['Stars', 'Nebulas', 'Star clusters', 'Galaxies'],\n            ['Dark matter', 'Universes']\n        ],\n        hoverText: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms'],\n            ['Tritium', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas'],\n            ['Preons hardcap', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites'],\n            ['Elements', 'Elements', 'Elements', 'Elements', 'Elements'],\n            ['Interstellar Stars', 'Interstellar Stars', 'Nebulas and Star clusters'],\n            ['Dark matter']\n        ],\n        type: [ //Visual only\n            [],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'producing', 'improving', 'improving', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'improving', 'improving'],\n            ['producing']\n        ],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 2.7753108348135e-3, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e15, 1e27, 1e50],\n            [0, 1e50, 1e54, 1e5],\n            [0, 1]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.15, 1.2, 1.25, 1.35, 1.4, 4],\n            [0, 1.15, 1.25, 1.35, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 2, 2, 1.11],\n            [0, 2]\n        ],\n        producing: []\n    },\n    strangeInfo: {\n        name: ['Strange quarks', 'Strangelets'],\n        stageBoost: [1, 1, 1, 1, 1, 1],\n        strangeletsInfo: [0, 1], //[Producing, Improving]\n        quarksGain: 0 //Interstellar only\n    },\n    upgradesInfo: [\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Electrons',\n                'Protons',\n                'Neutrons',\n                'Superposition',\n                'Protium',\n                'Deuterium',\n                'Tritium',\n                'Nuclear fusion'\n            ],\n            effectText: [\n                () => 'Particles will produce 8 times more Quarks.',\n                () => 'Gluons will be able to bind Quarks into Particles, which will make Particles 16 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particles'} will be 8 times cheaper.`,\n                () => `Atoms will produce ${player.inflation.vacuum ? 6 : 4} times more Particles.${player.upgrades[1][3] !== 1 && player.upgrades[1][5] !== 1 && player.buildings[1][player.inflation.vacuum ? 4 : 2].total.lessOrEqual('0') ? \"\\n(Can't be created due to not having any Atoms)\" : ''}`,\n                () => `Molecules will produce 4 times more Atoms.${player.upgrades[1][4] !== 1 && player.upgrades[1][5] !== 1 && player.buildings[1][player.inflation.vacuum ? 5 : 3].total.lessOrEqual('0') ? \"\\n(Can't be created due to not having any Molecules)\" : ''}`,\n                () => `Ability to regain spent Energy and if had enough Energy will also boost production for all ${player.inflation.vacuum ? 'Microworld ' : ''}Structures by ${format(global.dischargeInfo.base, { padding: true })}.${player.inflation.vacuum ? `\\n(In true Vacuum it will also reset resources and all non-self made Structures from all Stages${player.stage.true >= 7 ? ' before Abyss' : ''}, and enough self-made Structures to fully regain spent Energy)` : ''}`,\n                () => `Decrease Structures cost scaling by -${format(calculateEffects.S1Upgrade6() / 100)}.`,\n                () => { //[7]\n                    const selfPreons = calculateEffects.S1Upgrade7(true);\n                    return `Make self-made Structures boost themselves by ${format(global.dischargeInfo.selfBoost)}.${player.inflation.vacuum ? `\\n(Self-made Preons boost themselves by ${format(player.buildings[1][1].true >= 1001 ? global.dischargeInfo.selfBoost : (global.dischargeInfo.selfBoost / selfPreons) ** ((player.buildings[1][1].true - 1) / 1000) * selfPreons, { padding: true })} instead, softcaps instantly and completely disabled after ${format(1001)} Preons)` : ''}`;\n                },\n                () => `Molecules will produce Molecules. At a reduced rate.\\n(${format(global.dischargeInfo.tritium, { padding: true })} Molecules per second)`,\n                () => `Unspent Energy ^${format(0.5)} will boost 'Tritium' production of Molecules.\\n(Boost: ${format(calculateEffects.effectiveEnergy() ** 0.5, { padding: true })})`\n            ],\n            startCost: [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Water spread',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} ${format(player.inflation.vacuum ? 1.02 : 1.04)} times ${player.inflation.vacuum ? 'more' : 'faster'} for every self-made Drop.${player.upgrades[2][0] !== 1 && player.buildings[2][1].true < 1 && player.buildings[2][2].current.lessThan('1') ? \"\\n(Can't be created due to not having any self-made Drops)\" : ''}`,\n                () => `Spread water faster with every Puddle, current formula is ${format(1.02)} ^ effective Puddles.\\nPuddles after 200 and non self-made ones are raised to the power of ${format(0.7)}.\\n(Total effect: ${format(calculateEffects.S2Upgrade1(), { padding: true })})`,\n                () => `Gain ability to convert Drops into Clouds. Cloud gain formula is '(Clouds ^ (1 / softcap) + (Drops / ${format(calculateEffects.S2Upgrade2())})) ^ softcap - Clouds', softcap is ${format(player.challenges.active === 0 ? 0.4 : player.inflation.vacuum ? 0.5 : 0.6)}.`,\n                () => { //[3]\n                    const power = calculateEffects.S2Upgrade3();\n                    return `Puddles will get a boost based on Moles ^${format(power)}.\\n(Boost: ${format(new Overlimit(player.buildings[2][0].current).max('1').power(power), { padding: true })})`;\n                },\n                () => { //[4]\n                    const power = calculateEffects.S2Upgrade4();\n                    return `Puddles will get a boost based on Drops ^${format(power)}.\\n(Boost: ${format(new Overlimit(player.buildings[2][1].current).max('1').power(power), { padding: true })})`;\n                },\n                () => `Ponds will increase current Puddle amount. (${format(calculateEffects.S2Upgrade5())} extra Puddles per Pond)`,\n                () => `Lakes will increase current Pond amount. (${format(calculateEffects.S2Upgrade6())} extra Ponds per Lake)`,\n                () => 'Spreads enough water to make Seas increase current Lake amount. (1 extra Lakes per Sea)',\n                () => 'Spreads water too fast. 1 extra Seas per Ocean.\\nAlso will improve Oceans effect scaling.'\n            ],\n            startCost: [10, 1e6, 1e10, 1e3, 1e4, 2e9, 5e20, 1e28, 2e48],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Satellite system',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Cosmic dust will ${player.inflation.vacuum ? 'delay Preons hardcap even more' : 'produce even more Mass'}.\\n(By ${format(calculateEffects.S3Upgrade0())} per self-made Cosmic dust)`,\n                () => `New substance for Accretion, will provide boost to Cosmic dust based on its current quantity, weaker for non self-made ones.\\n(Boost: ${format(calculateEffects.S3Upgrade1(), { padding: true })})`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come.\\n(Unlock a new Structure and get 2x boost to Cosmic dust)',\n                () => `Small bodies will spontaneously concentrate into clumps.\\n(Self-made Planetesimals will boost each other by ${format(calculateEffects.S3Upgrade3())})`,\n                () => 'Bodies will become massive enough to affect each other with gravity.\\n(Unlock a new Structure and get 3x boost to Planetesimals)',\n                () => `Shattered pieces will fall back together. ${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => `Melt the core to increase Accretion speed.\\n(Cosmic dust strength will be increased by ${format(2 * 1.5 ** player.researches[3][7])})`,\n                () => `After reaching equilibrium self-made Protoplanets will boost each other by ${format(1.02)}.`,\n                () => 'Unlock yet another Structure.',\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased again (because of drag and escape velocity), by 2.`,\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be greatly increased by ${8 * 2 ** player.researches[3][8]}.`,\n                () => `Satellites cost scaling will be 2 times smaller.${player.inflation.vacuum ? '\\nAlso unlock a new Structure.' : ''}`,\n                () => 'Satellites effect will scale better.'\n            ],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e10, 1e22, 1e22, 1e23, 1e9, 1e26, 1e29],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational Collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion',\n                'Nucleosynthesis'\n            ],\n            effectText: [\n                () => `As fuel runs out, every Star will boost production in its own special way.\\nSolar mass ${player.inflation.vacuum ? `on Collapse is Accretion Mass / ${format(1.98847e33)} and ` : ''}will not decrease if to reset below current. (Hover over Remnants effects to see what they boosts)`,\n                () => \"Fuse with Protium instead of Deuterium. Unlock 5 first Elements. ('Elements' subtab)\",\n                () => 'Unlock CNO cycle which is a better source of Helium and Energy. Unlock 5 more Elements.',\n                () => 'Through Triple-alpha and then Alpha process unlock 2 more Elements.',\n                () => `Create new Atomic nuclei with Neutron capture (s-process and p-process).\\nUnlock 1 more Element and +1 for every self-made ${player.stage.true >= 7 || player.event ? 'Universe' : '(not unlocked)'}.`\n            ],\n            startCost: [100, 1000, 1e9, 1e48, 1e128],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Molecular cloud',\n                'Super Star cluster',\n                'Quasar',\n                'Galactic Merger'\n            ],\n            effectText: [\n                () => `Nebula that is dense enough to block the light, it will boost Nebulas by ${format(calculateEffects.S5Upgrade0())}.`,\n                () => `A very massive Star cluster that will boost Star clusters by ${format(calculateEffects.S5Upgrade1())}.`,\n                () => `Boost per Galaxy will be increased by +${format(calculateEffects.S5Upgrade2(false, 1), { padding: true })}.\\n(Effect will be stronger with more Solar mass past ${format(1e5)}, maxed at +1)`,\n                () => `Unlock a new reset type that will bring Galaxies closer for potential Merging.${player.inflation.vacuum ? ' That reset behaves like a Galaxy reset, while also converting self-made Galaxies into non self-made through new and even bigger Structures. Can only be done once per Stage reset.' : ''}`\n            ],\n            startCost: [1e56, 1e60, 1e120, 1e160],\n            maxActive: 4\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            startCost: [],\n            maxActive: 0\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling will be -${format(0.03)} smaller with each level.`,\n                () => `Self-made Structures will boost each other by additional +${format(0.01)}.`,\n                () => `Molecules will produce themselves ${format(calculateEffects.S1Research2())} times quicker.`,\n                () => `Discharge goals requirement will scale slower. (-2)\\n(Creating this Research will make next Discharge goal to be ${format((global.dischargeInfo.scaling - 2) ** player.discharge.current)} Energy)`,\n                () => { //[4]\n                    const newBase = calculateEffects.goalsBase(player.researches[1][4] + 1);\n                    return `Discharge production boost from reached goals will be increased by +${format(newBase - global.dischargeInfo.base)}.\\n(This is equal to ${format((newBase / global.dischargeInfo.base) ** global.dischargeInfo.total, { padding: true })}x boost improvement)`;\n                },\n                () => `Discharge goals will be able to boost 'Tritium'.\\n(Current effect: ${format(calculateEffects.S1Research5())} ^ level)`\n            ],\n            cost: [],\n            startCost: [1600, 4800, 16000, 32000, 16000, 24000],\n            scaling: [400, 1200, 8000, 40000, 16000, 16000],\n            max: [5, 4, 8, 2, 4, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Better Drop production',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} 3 times more.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.trueResearch0 !== player.researches[2][0] ? `is ${format(global.vaporizationInfo.trueResearch0, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any Reset'}.` : ''}`,\n                () => `Puddles will produce 2 times more Drops.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.trueResearch1 !== player.researches[2][1] ? `is ${format(global.vaporizationInfo.trueResearch1, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any Reset'}.` : ''}`,\n                () => `'Surface tension' base will be +${format(0.005)} stronger.\\n(This is equal to ${format(new Overlimit(player.buildings[2][0].current).max('1').power(calculateEffects.S2Upgrade3(player.researches[2][2] + 1) - calculateEffects.S2Upgrade3()).toNumber(), { padding: true })}x boost improvement)`,\n                () => `'Surface stress' base will be +${format(0.005)} stronger.\\n(This is equal to ${format(new Overlimit(player.buildings[2][1].current).max('1').power(calculateEffects.S2Upgrade4(player.researches[2][3] + 1) - calculateEffects.S2Upgrade4()).toNumber(), { padding: true })}x boost improvement)`,\n                () => 'With more streams, will be able to have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers will be able to split, which will allow even more Ponds per Lake. (+1 per)'\n            ],\n            cost: [],\n            startCost: [10, 400, 1e4, 1e5, 1e14, 1e22],\n            scaling: [1.366, 5, 1e3, 1e2, 1e3, 1e4],\n            max: [8, 8, 4, 4, 2, 1],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Destructive collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Increase strength of Cosmic dust by 3.',\n                () => `Cosmic dust particles will cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals will produce more Cosmic dust. (3 times more)',\n                () => `Slow encounter velocities will result in a more efficient growth.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 2.`,\n                () => `Planetesimals when shatter will replenish small grains quantity.\\n'Streaming instability' effect will be increased by +${format(0.005)}.`,\n                () => `Some Planetesimals instead of shattering will form a contact binary or even trinary.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => { //[6]\n                    const effect = calculateEffects.S3Research6(); //Remove 1 / result, if Overlimit.log() will allow base to be a bigger number\n                    return `Planetesimals will attract other bodies and get a boost to own production based on unspent Mass ^${format(effect > 1 ? 1 / new Overlimit(player.buildings[3][0].current).log(effect).toNumber() : 0, { padding: true })}.\\n(Boost: ${format(effect, { padding: true })} \u27F6 ${format(calculateEffects.S3Research6(player.researches[3][6] + 1), { padding: true })}, weaker after ${format(1e21)} Mass)`;\n                },\n                () => `'Magma Ocean' will become stronger, by ${format(1.5)}.`,\n                () => `Improve 'Pebble accretion' Accretion speed even more.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will increased by 2.`\n            ],\n            cost: [],\n            startCost: [1e-16, 1e-15, 1e-5, 1e2, 1e10, 1e11, 1e15, 1e14, 1e12],\n            scaling: [11, 111, 22, 10, 100, 100, 10, 1e4, 1e3],\n            max: [9, 3, 8, 8, 2, 2, 6, 4, 4],\n            maxActive: 9\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula',\n                'Gamma-ray burst',\n                'Inner Black hole'\n            ],\n            effectText: [\n                () => { //[0]\n                    const base = calculateEffects.S4Research0_base();\n                    return `From Planetesimals to Planets, will get ${format(base)}x boost to all Stars per level.\\n(Total boost: ${format(calculateEffects.S4Research0(base), { padding: true })})`;\n                },\n                () => { //[1]\n                    const base = calculateEffects.S4Research1();\n                    return `All self-made Stars will boost each other by ${format(base)}.\\n(Total boost: ${format(new Overlimit(base).power(global.collapseInfo.trueStars), { padding: true })} \u27F6 ${format(new Overlimit(calculateEffects.S4Research1(player.researches[4][1] + 1)).power(global.collapseInfo.trueStars), { padding: true })})`;\n                },\n                () => `Improve effect scaling of 'Planetary system', as well increase its max level by +3.\\n(Total boost from 'Planetary system' will be increased by ${format(calculateEffects.S4Research0(calculateEffects.S4Research0_base(player.researches[4][2] + 1) / calculateEffects.S4Research0_base()), { padding: true })})`,\n                () => \"Matter will be expelled from Red giants, this will boost Main-sequence Stars by 2, as well increase 'Planetary system' max level by +3.\",\n                () => `An immensely energetic explosion that will boost all Stars by ${format(calculateEffects.S4Research4(), { padding: true })}${player.researches[4][4] < 2 ? ` \u27F6 ${format(calculateEffects.S4Research4(false, player.researches[4][4] + 1), { padding: true })}` : ''}.\\n(Effect will be stronger with more Black holes${player.elements[23] >= 1 ? ' and Solar mass' : ''})`,\n                () => 'Quasi-stars will Collapse into Intermediate-mass Black holes that are equivalent to +1 (Stellar) Black holes per level.'\n            ],\n            cost: [],\n            startCost: [1e3, 5e4, 1e8, 1e11, 1e28, 1e154],\n            scaling: [10, 200, 1e12, 1, 2e8, 1],\n            max: [3, 2, 1, 1, 2, 1],\n            maxActive: 5\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency'\n            ],\n            effectText: [\n                () => `Higher density of Nebulas, will allow them to produce higher tier of Stars, but each tier is 4 times slower than previous one. Also will boost Nebulas by 2.\\nNext tier will be ${global.buildingsInfo.name[4][Math.min(player.researches[5][0] + 2, player.inflation.vacuum ? 5 : 4)]}.`,\n                () => `More of same Star type will be found within Star cluster. Star clusters and their minimum strength will be improved by 2 and will also boost lower tier of Stars, but 2 times less than previous one.\\nNext tier will be ${global.buildingsInfo.name[4][Math.max((player.inflation.vacuum ? 4 : 3) - player.researches[5][1], 1)]}.`\n            ],\n            cost: [],\n            startCost: [1e54, 1e58],\n            scaling: [1e8, 1e8],\n            max: [4, 4],\n            maxActive: 2\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Improved formula',\n                'Accretion',\n                'Later Preons',\n                'Impulse'\n            ],\n            effectText: [\n                () => \"Mesons will be able to bind Particles to form Atoms, which will make Atoms to be affected by 'Strong force'.\\n(Atoms will be 16 times cheaper)\",\n                () => { //[1]\n                    const now = calculateEffects.S1Extra1();\n                    const after = calculateEffects.S1Extra1(player.researchesExtra[1][1] + 1);\n                    return `Improve 'Tritium' formula, current formula is log${format(now)}${player.researchesExtra[1][1] < 4 ? ` \u27F6 log${format(after)}.\\n(Which is equal to ${format(logAny(now, after), { padding: true })}x improvement)` : '.'}`;\n                },\n                () => `First level is to begin the Accretion, second level is to Submerge it.\\nAll Structures produce Energy on creation and all resets affect all lower Stages, while also doing Discharge reset.\\nAccretion Mass is Microworld Mass * ${format(1.78266192e-33)} and Moles are Molecules / ${format(6.02214076e23)}.`,\n                () => { //[3]\n                    const power = calculateEffects.S1Extra3();\n                    const energy = calculateEffects.effectiveEnergy();\n                    return `Boost Preons and delay hardcap by current Energy ^${format(power)}.\\n(Effect: ${format(energy ** power, { padding: true })} \u27F6 ${format(energy ** calculateEffects.S1Extra3(player.researchesExtra[1][3] + 1), { padding: true })})`;\n                },\n                () => { //[4]\n                    const base = calculateEffects.S1Extra4();\n                    return `Discharge goals will be able to boost all Interstellar Stars, strength is based on Energy and Discharge base.\\nCurrent base is ${format(base, { padding: true })}, total boost is ${format(new Overlimit(base).power(global.dischargeInfo.total), { padding: true })}.`;\n                }\n            ],\n            cost: [],\n            startCost: [2000, 40000, 12000, 16000, 160000],\n            scaling: [0, 16000, 68000, 16000, 0],\n            max: [1, 4, 2, 4, 1],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Water Accretion'\n            ],\n            effectText: [\n                () => 'When formed Clouds will use Drops produced this reset instead of current ones.',\n                () => { //[1]\n                    const maxLevel = player.researchesExtra[2][1];\n                    const trueLevel = global.vaporizationInfo.trueResearchRain;\n                    const penalty = player.buildings[2][2].current.lessThan('1');\n                    const effect = calculateEffects.S2Extra1;\n                    return `Some Clouds will start pouring Drops themselves. This will boost Puddles, even if there are none, based on current Clouds.${player.researchesExtra[2][2] < 1 ? `\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Drops, this doesn't` : 'will be set to 0 after any Reset, this will not'} affect pre Puddles boost.` : ''}\\n(Effect: ${format(penalty ? (effect(maxLevel) - 1) : effect(trueLevel), { padding: true })} \u27F6 ${format(penalty ? (effect(maxLevel + 1) - 1) : effect(maxLevel + (trueLevel === maxLevel ? 1 : 0)), { padding: true })}, weaker after ${format(1e6)} Clouds)`;\n                },\n                () => `Make 'Rain Clouds' boost Seas at a reduced rate and also prevent its effective level from resetting.\\n(Effect: ${format(calculateEffects.S2Extra2(calculateEffects.S2Extra1(global.vaporizationInfo.trueResearchRain), 1), { padding: true })})`,\n                () => { //[3]\n                    const level = player.researchesExtra[2][3];\n                    const tension = player.upgrades[2][3] === 1 ? new Overlimit(player.buildings[2][0].current).max('1').power(calculateEffects.S2Upgrade3()).toNumber() : 1;\n                    const stress = player.upgrades[2][4] === 1 ? new Overlimit(player.buildings[2][1].current).max('1').power(calculateEffects.S2Upgrade4()).toNumber() : 1;\n                    return `Submerge and boost Stars with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Stars: ${level < 3 ? `${format(level < 1 ? 1 : tension * (level > 1 ? stress ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(tension * (level < 1 ? 1 : stress ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                }\n            ],\n            cost: [],\n            startCost: [1e18, 1e12, 1e26, 1e14],\n            scaling: [1, 1e3, 1, 1e8],\n            max: [1, 3, 1, 3],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by another ${format(1.11)} per level. Max level is based on current Rank.\\n(Total increase: ${format(1.11 ** player.researchesExtra[3][0], { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S3Extra1();\n                    return `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be even bigger, current formula is ${format(base)} ^ current Rank.\\n(Total boost: ${format(base ** global.accretionInfo.effective, { padding: true })} \u27F6 ${format(calculateEffects.S3Extra1(player.researchesExtra[3][1] + 1) ** global.accretionInfo.effective, { padding: true })})`;\n                },\n                () => \"'Gravitational field' will be able to boost Protoplanets, but at reduced strength. (2x boost)\",\n                () => `'Gas' will be ${format(calculateEffects.S3Upgrade1(player.researchesExtra[3][3] + 1) / calculateEffects.S3Upgrade1(), { padding: true })}x stronger per level.`,\n                () => `Submerge quicker by boosting Puddles, improved by current Rank.\\n(Current boost: ${format(calculateEffects.S3Extra4())} \u27F6 ${format(calculateEffects.S3Extra4(player.researchesExtra[3][4] + 1))})`\n            ],\n            cost: [],\n            startCost: [1e-18, 1e-7, 1e26, 1e9, 1e-10],\n            scaling: [10, 100, 1, 1e5, 1e12],\n            max: [14, 6, 1, 5, 1],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'Mass transfer',\n                'White dwarfs',\n                'Quark-nova'\n            ],\n            effectText: [\n                () => `This violent stellar explosion is main source of Elements, but also starts new Star formation.\\nUnlock a new Star and even more, after Collapse of that Star.\\n(Will require at least ${format(global.collapseInfo.unlockB[Math.min(player.researchesExtra[4][0] + 2, 4)])} Solar mass to create that new Star)`,\n                () => `Star material will transfer from one Star to another, improving Solar mass gain${player.inflation.vacuum ? ' (also delaying Preons hardcap)' : ''} by ${format(calculateEffects.S4Extra1())}.\\nImproved by 'Star system' levels and also improves its scaling (effect increase for 'Star system' is ${format(new Overlimit(calculateEffects.S4Research1(undefined, 1) / calculateEffects.S4Research1(undefined, 0)).power(global.collapseInfo.trueStars), { padding: true })}).`,\n                () => `After matter were dispeled from Red giant, White dwarf was all that remained.\\nImproves effect of '[6] Carbon' by +${format(0.5)} and increases max level of 'Star system' by +1.`,\n                () => \"As Neutron stars spins down, some of them may be converted into Quark stars.\\nThis will add new effect to Neutron stars \u2012 all Stars are cheaper, also will increase max level of 'Star system' by +1.\"\n            ],\n            cost: [],\n            startCost: [4e4, 2e9, 1e50, 1e136],\n            scaling: [1e10, 1, 1, 1],\n            max: [3, 1, 1, 1],\n            maxActive: 3\n        }, { //Stage 5\n            name: [\n                'Hypercompact stellar system'\n            ],\n            effectText: [\n                () => `Super dense core which will allow creation of a new Structure. That Structure will increase Stage reset reward, boost Nebulas and Star clusters, but creating it fully resets ${player.inflation.vacuum ? 'all' : 'Interstellar and Intergalactic'} Stages${player.inflation.vacuum ? \", Energy from creating it won't reset on this or any lower Reset tiers\" : player.strangeness[5][3] < 1 ? \", can't be created because 'Gravitational bound' is missing\" : ''}.\\nThis Research also removes Solar mass and other Remnants requirement from everything in Interstellar.`\n            ],\n            cost: [],\n            startCost: [1e80],\n            scaling: [1],\n            max: [1],\n            maxActive: 1\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        name: [\n            'Upgrade automatization',\n            'Element automatization',\n            'Reset automatization'\n        ],\n        effectText: [\n            () => `Automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.researchesAuto[0], 2)]} from any Stage.`,\n            () => 'Elements will no longer require Collapse for activation.\\nSecond level will unlock auto creation of Elements.',\n            () => { //[2]\n                const index = player.inflation.vacuum ? Math.min(player.researchesAuto[2], 3) : Math.min(player.stage.current - 1, 3);\n                return `Unlock auto ${['Discharge', 'Vaporization', 'Rank', 'Collapse'][player.inflation.vacuum ? (index === 1 ? 2 : index === 2 ? 1 : index) : index]} level 1.`;\n            }\n        ],\n        costRange: [\n            [1e13, 2e34, 1e30],\n            [136000, 272000],\n            [1200, 1800, 3600, 9000]\n        ],\n        autoStage: [ //Stage to buy from (1 per level)\n            [2, 3, 4],\n            [1, 1],\n            [6, 6, 6, 6]\n        ],\n        max: [3, 2, 1]\n    },\n    ASRInfo: { //Auto Structures Research\n        name: 'Auto Structures',\n        effectText: () => {\n            const stageIndex = player.stage.active;\n            const index = Math.min(player.ASR[stageIndex] + 1, Math.max(global.ASRInfo.max[stageIndex], 1));\n            let unlocked = true;\n            if (player.stage.true < 6) {\n                if (stageIndex === 3 && player.stage.resets < 5) {\n                    if (index === 2) {\n                        unlocked = player.upgrades[3][2] === 1 || player.buildings[3][2].trueTotal.moreThan('0');\n                    } else if (index === 3) {\n                        unlocked = player.upgrades[3][4] === 1 || player.buildings[3][3].trueTotal.moreThan('0');\n                    }\n                } else if (stageIndex === 5) {\n                    if (index === 1) {\n                        unlocked = player.milestones[2][0] >= 7;\n                    } else if (index === 2) {\n                        unlocked = player.milestones[3][0] >= 7;\n                    } else if (index === 3) {\n                        unlocked = player.milestones[4][1] >= 8;\n                    }\n                }\n            } else if (player.stage.true < 7) {\n                if (player.stage.resets < 2 && index === 5) {\n                    if (stageIndex === 3) {\n                        unlocked = player.upgrades[3][11] === 1 || player.buildings[3][5].trueTotal.moreThan('0');\n                    } else if (stageIndex === 4) {\n                        unlocked = player.elements[26] >= 1;\n                    }\n                }\n            }\n            return `Automatically make ${unlocked ? global.buildingsInfo.name[stageIndex][index] : '(not unlocked)'} (counts as self-made).\\n(Auto ${(stageIndex === 5 && index === 3) || stageIndex >= 6 ? \"for this Structure doesn't wait and ignores related settings\" : `will wait until ${format(player.stage.true >= 3 ? player.toggles.shop.wait[stageIndex] : 2)} times of the Structure cost`})`;\n        },\n        costRange: [ //Random scaling\n            [],\n            [2000, 8000, 16000, 32000, 56000],\n            [1e10, 1e14, 1e18, 1e23, 1e28, 1e30],\n            [1e-7, 1e10, 5e29, 2e30, 2e36],\n            [1e6, 1e17, 1e28, 1e39, 1e52],\n            [1e56, 1e60, 1e100],\n            [Infinity]\n        ],\n        max: [0, 3, 5, 4, 4, 3, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel',\n            '[29] Copper',\n            '[30] Zinc',\n            '[31] Gallium'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron, wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => `Most basic Element, increases Brown dwarf${player.inflation.vacuum ? ' and Puddles' : ''} production by 2.`,\n            () => `Fusion reaction byproduct, makes Interstellar Stars cost scale -${format(0.1)} less.`,\n            () => `First metal, Solar mass gain${player.inflation.vacuum ? ' and hardcap delay for Cosmic dust' : ''} per Brown dwarf will be lightly increased.`,\n            () => `Brittle earth metal and so is brittle increase to production.\\n(${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''})`,\n            () => `A new color, and a new boost to Solar mass gain${player.inflation.vacuum ? ' and delay to Cosmic dust hardcap' : ''} that is based on current Dwarf Stars.`,\n            () => `Base for organics, boost from Red giants will be increased by ^${format(calculateEffects.element6())}.`,\n            () => \"Most abundant Element in atmosphere of some Planets that will allow to have 2 extra levels of 'Star system'.\",\n            () => `An oxidizing agent that will make Interstellar Stars cost scale even slower. (-${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x boost to Solar mass gain${player.inflation.vacuum ? ' and delay to Preons hardcap' : ''}.`,\n            () => \"Through leaching will get 1 extra level of 'Protoplanetary disk'.\",\n            () => 'Stars are inside you, as well Neutron stars strength will be increased by log4.',\n            () => 'Has a great affinity towards Oxygen and to decrease cost for all Stars by 100.',\n            () => `Just another tetravalent metalloid, and so is another ${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''}.`,\n            () => `One of the Fundamentals for Life and to make all Stars boost Solar mass gain${player.inflation.vacuum ? ' and also delay Cosmic dust hardcap' : ''}.`,\n            () => \"From hot area to increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system' by another 24 levels.\",\n            () => 'Less noble, but Black holes effect will be a little stronger.',\n            () => \"Don't forget about it and will get 1 free level of 'Planetary system'.\\n(Also will make Solar mass effect apply twice to Brown dwarfs)\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to Solar mass effect.`,\n            () => 'New alloy that allows Red giants to be added into effective amount of Neutron stars.',\n            () => `Catalyst for production of Elements. 'Gamma-ray burst' effect will be increased by Solar mass ^${format(0.1)}.\\n(Effect increase: ${format(player.collapse.mass ** 0.1, { padding: true })})`,\n            () => { //[24]\n                const power = calculateEffects.element24();\n                return `No corrosion, only boost to all Stars that is based on unspent Elements ^${format(power)}.\\n(Boost to Stars: ${format(new Overlimit(player.buildings[4][0].current).power(power), { padding: true })})`;\n            },\n            () => \"Brittle Element, but not the bonus \u2012 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. ${player.inflation.vacuum ? `Unlock a new Star type${player.strangeness[5][3] >= 1 ? ' and Intergalactic Stage' : ''}` : 'Enter Intergalactic space'}.\\n(${player.stage.true >= 6 || player.strange[0].total >= 1 ? `Current base for Stage reset reward is ${format(calculateEffects.element26(), { padding: true })}, improve it further by producing more Elements this Stage` : 'Can change active Stage from footer, new effect will be added after another Stage reset'})`,\n            () => `Combined and ready to make all self-made Red supergiants count as Red giants and improve '[24] Chromium' Element by +^${format(0.01)}.`,\n            () => \"Slow to react, but will increase max level of 'Star system' by +1.\",\n            () => `Does not need to be prepared to increase Stage reset reward base by Arithmetic progression with step of ${format(0.01)}.`,\n            () => 'First of new Elements to come, increases max allowed Merge resets by current self-made Universes.',\n            () => `Will melt in palm of your hand to make all Galaxies scale slower. (${format(-0.01)})`\n        ],\n        startCost: [ //New Element cost must be higher than previous one\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 8e12, 6e13,\n            1e15, 1e20, 1e22, 1e24, 1.4e26, 1e28, 1e30, 1e32, 2e36, 1e38,\n            1e39, 1e41, 2e42, 3e43, 4e44, 5e45, 1e48, 1e54, 1e58, 1e140,\n            1e200, 1e220\n        ]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Fundamental boost',\n                'Better improvement',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discharge',\n                'Auto Structures',\n                'Strange boost',\n                'Energy increase',\n                'Conservation of Mass',\n                'Conservation of Energy'\n            ],\n            effectText: [\n                () => `Boost all Microworld Structures by ${format(player.inflation.vacuum ? 2 : 1.8)}.`,\n                () => `Base for 'Improved Tritium' Research will be bigger by +${format(player.inflation.vacuum ? 1.5 : 1)}.\\n(Boost from it at current Research level is ${format((calculateEffects.S1Research2(player.strangeness[1][1] + 1) / calculateEffects.S1Research2()) ** player.researches[1][2], { padding: true })})`,\n                () => `Discharge goals requirement will scale slower. (-${format(0.5)})\\n(Creating this Strangeness will make next Discharge goal to be ${format((global.dischargeInfo.scaling - 0.5) ** player.discharge.current)} Energy)`,\n                () => `Obtain +${format(0.5)} bonus Discharge goals.`,\n                () => `Automatically Discharge upon reaching next goal or spending Energy. (Need to be enabled in Settings)${global.strangenessInfo[1].max[4] > 1 ? '\\nSecond level will allow to gain Discharge goals based on current Energy instead of needing to reset.' : ''}`,\n                () => 'Make auto for all Microworld Structures permanent.',\n                () => `Unspent Strange quarks will boost Microworld by improving its Structures.\\n(Current effect: ${format(global.strangeInfo.stageBoost[1], { padding: true })})`,\n                () => 'Increase Energy gain from creating Preons by +2.',\n                () => { //[8]\n                    const improved = player.challenges.superVoid[1] >= 2 && (player.inflation.tree[3] >= 1 || player.challenges.active === 0);\n                    return `No Mass will be lost when creating Preons${improved ? '' : ', only works when Accretion Stage is unlocked'}.\\nSecond level will disable auto Accretion Structures if Cosmic dust is hardcapped until will have enough Mass for the highest Solar mass conversion${improved ? \" or to increase current Rank (if current Rank is below 'Protostar' and 'Automatic Rank' level is below 2)\" : ', only works if Interstellar Stage is unlocked'}.`;\n                },\n                () => 'No Energy will be lost when creating Upgrades or Researches, only works when Interstellar Stage is unlocked.'\n            ],\n            cost: [],\n            startCost: [1, 1, 1, 2, 12, 2, 24, 2, 12, 15600],\n            scaling: [2.46, 2, 6, 6, 400, 1, 1, 6, 10, 1],\n            max: [6, 4, 4, 2, 1, 1, 1, 2, 2, 1],\n            maxActive: 7\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Auto Structures',\n                'Strange boost',\n                'Improved flow',\n                'Mechanical spread',\n                'Ocean world'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce'} 2 times more${player.inflation.vacuum ? '' : ' Moles'}.`,\n                () => `Puddles will produce ${format(player.inflation.vacuum ? 1.8 : 1.6)} times more Drops.`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[2][2] >= 1) { extraText = \"max level increased for 'More streams' (+1)\"; }\n                    if (player.strangeness[2][2] >= 2) { extraText += \" and 'Distributary channel' (+1)\"; }\n                    if (player.strangeness[2][2] >= 3) { extraText += \", a new Upgrade \u2012 'Tsunami'\"; }\n                    return `Increase max level for one of Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Decrease amount of Drops required to get a Cloud by ${format(player.inflation.vacuum ? 2.5 : 2)}.`,\n                () => `Automatically Vaporize when reached enough boost from new Clouds. (Need to be enabled in Settings)${global.strangenessInfo[2].max[4] > 1 ? `\\nSecond level will allow to automatically gain ${format(2.5)}% of Clouds per second.${player.stage.true >= 7 ? ' (Not affected by global speed)' : ''}` : ''}`,\n                () => 'Make auto for all Submerged Structures permanent.',\n                () => `Unspent Strange quarks will boost Submerged by improving Puddles.\\n(Current effect: ${format(global.strangeInfo.stageBoost[2], { padding: true })})`,\n                () => `Submerged Structures that improve other Submerged Structures will do it ${format(1.24)} times stonger.\\n(Affected Structures are Ponds, Lakes, Seas and Oceans)`,\n                () => { //[8]\n                    let extraText = 'none';\n                    if (player.strangeness[2][8] >= 1) { extraText = \"max level increased for 'Stronger surface tension' (+3)\"; }\n                    if (player.strangeness[2][8] >= 2) { extraText += \" and 'Stronger surface stress' (+1)\"; }\n                    if (player.strangeness[2][8] >= 3) { extraText += \", a new Upgrade \u2012 'Tide'\"; }\n                    return `Increase max level for one of Researches. Final level will instead unlock an even better new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Increase Stage reset reward based on current Cloud amount.\\n(Current effect: ${format(calculateEffects.S2Strange9(), { padding: true })})`\n            ],\n            cost: [],\n            startCost: [1, 1, 2, 2, 12, 4, 24, 36, 1200, 9600],\n            scaling: [2.46, 2, 3, 3.4, 800, 1, 1, 3.4, 3, 1],\n            max: [4, 8, 3, 2, 1, 1, 1, 6, 3, 1],\n            maxActive: 7\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Auto Structures',\n                'Upgrade automatization',\n                'Strange boost',\n                'Mass delay',\n                'Rank raise'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by ${format(1.8)}.`,\n                () => `Accretion Structures that produce other Accretion Structures will do it ${format(player.inflation.vacuum ? 1.48 : 1.6)} times faster.\\n(Affected Structures are Planetesimals and Protoplanets)`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[3][2] >= 1) { extraText = \"max level increased for 'Rank boost' (+6)\"; }\n                    if (player.strangeness[3][2] >= 2) { extraText += \" and 'Efficient growth' (+2)\"; }\n                    if (player.strangeness[3][2] >= 3) { extraText += \", a new Upgrade \u2012 'Hydrostatic equilibrium'\"; }\n                    return `Increase max level for one of the Rank Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Satellites will be able to improve remaining ${player.inflation.vacuum ? 'Accretion ' : ''} Structures, but at reduced strength (^${format(player.inflation.vacuum ? 0.1 : 0.2)}).\\n(Affected Structures are Cosmic dust and Planetesimals, boost is equal to ${format(global.accretionInfo.satellites, { padding: true })})`,\n                () => `Automatically increase Rank when possible. (Need to be enabled in Settings)${global.strangenessInfo[3].max[4] > 1 ? '\\nSecond level will make Rank increase use Mass produced this reset instead of current.' : ''}`,\n                () => 'Make auto for all Accretion Structures permanent.',\n                () => `Always automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.strangeness[3][6], 2)]} from any Stage${!player.inflation.vacuum && player.strangeness[5][3] < 1 && !global.milestonesInfoS6.active[2] ? ' before Intergalactic' : ''}. (Need to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Accretion by making its Structures cheaper.\\n(Current effect: ${format(global.strangeInfo.stageBoost[3], { padding: true })})`,\n                () => `Delay Cosmic dust hardcap by ${format(1.4)} per level.`,\n                () => 'Unlock a new Accretion Rank to achieve.'\n            ],\n            cost: [],\n            startCost: [1, 2, 2, 24, 12, 4, 4, 24, 9600, 1.8e6],\n            scaling: [2, 3.4, 3, 1, 100, 1, 1.74, 1, 2.46, 1],\n            max: [8, 4, 3, 1, 1, 1, 3, 1, 6, 1],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Automatic Collapse',\n                'Auto Structures',\n                'Element automatization',\n                'Strange boost',\n                'Neutronium',\n                'Newer Upgrade'\n            ],\n            effectText: [\n                () => `All Stars will produce ${format(1.6)} times more Elements.`,\n                () => 'Stars will be 2 times cheaper.',\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[4][2] >= 1) { extraText = \"'Planetary nebula' (Stage Research)\"; }\n                    if (player.strangeness[4][2] >= 2) { extraText += \", 'White dwarfs' (Collapse Research)\"; }\n                    if (player.strangeness[4][2] >= 3) { extraText += \", 'Helium fusion' (Upgrade)\"; }\n                    return `Unlock a new Upgrade, its pretty good.\\n(Current unlocks: ${extraText})`;\n                },\n                () => '10% of Brown dwarfs will be able to turn into Red giants after Collapse.',\n                () => `Automatically Collapse once reached enough boost. (Need to be enabled in Settings)${global.strangenessInfo[4].max[4] > 1 ? '\\nSecond level will allow to automatically gain Star remnants without needing to reset.' : ''}`,\n                () => 'Make auto for all Interstellar Structures permanent.',\n                () => `Elements will no longer require Collapse for activation${player.inflation.vacuum ? ' and related automatization Research will cost as if its level is 1 less' : ''}.\\nSecond level will unlock auto creation of Elements. (${global.strangenessInfo[4].max[6] > 1 ? 'Need to be enabled in settings' : 'Not yet unlocked for Interstellar space'})`,\n                () => `Unspent Strange quarks will boost Interstellar by improving all Stars, stronger if '[26] Iron' is created.\\n(Current effect: ${format(global.strangeInfo.stageBoost[4], { padding: true })})`,\n                () => `Increase effective amount of Neutron stars (doesn't include ones from '[22] Titanium') by 1 + level and improve Neutron stars strength by +^${format(0.125)}.`,\n                () => { //[9]\n                    let extraText = 'none';\n                    if (player.strangeness[4][9] >= 1) { extraText = \"'Nucleosynthesis' (Upgrade)\"; }\n                    if (player.strangeness[4][9] >= 2) { extraText += \", 'Quark-nova' (Collapse Research)\"; }\n                    if (player.strangeness[4][9] >= 3) { extraText += \", 'Inner Black hole' (Stage Research)\"; }\n                    return `Unlock yet another an even better new Upgrade.\\n(Current unlocks: ${extraText})`;\n                }\n            ],\n            cost: [],\n            startCost: [1, 2, 4, 2, 12, 6, 6, 24, 6400, 2e5],\n            scaling: [2, 3.4, 3, 6, 1900, 1, 1.74, 1, 2, 3],\n            max: [8, 4, 3, 2, 1, 1, 1, 1, 8, 3],\n            maxActive: 8\n        }, { //Stage 5\n            name: [\n                'Bigger Structures',\n                'Higher density',\n                'Strange gain',\n                'Gravitational bound',\n                'Automatic Galaxy',\n                'Auto Structures',\n                'Automatic Stage',\n                'Strange boost',\n                'Strange growth'\n            ],\n            effectText: [\n                () => `More matter for Accretion (flavor text), first two Intergalactic Structures will be ${format(player.inflation.vacuum ? 1.4 : 1.6)} times stronger.`,\n                () => `With higher density first two Intergalactic upgrades will be even stronger. Effects will be increased by ${format(player.inflation.vacuum ? 1.6 : 1.8)}.`,\n                () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset.`,\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage and increase Strange quarks from Stage resets by +1.' : `Will make Intergalactic Stage immune to Collapse reset${!global.milestonesInfoS6.active[2] ? \" and allow 'Upgrade automatization' to work within Intergalactic Stage\" : ''}.`,\n                () => 'Automatically Collapse if will be able to afford new Galaxy and auto Galaxy is enabled.\\n(Also unlocks permanent auto Galaxies for free and removes Mass limit for Collapse points)',\n                () => `Make auto for ${player.strangeness[5][4] >= 1 ? 'all' : 'the first two'} Intergalactic Structures permanent${player.strangeness[5][4] < 1 ? ' and prevent rest from resetting' : ''}.`,\n                () => `Automatically trigger Stage reset${!player.inflation.vacuum ? \", doesn't work for Interstellar Stage until second level\" : ''}. (Need to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Intergalactic by increasing Solar mass gain.\\n(Current effect: ${format(global.strangeInfo.stageBoost[5], { padding: true })})`,\n                () => 'Unlock another Strange Structure.\\n(Click on that Structure to see its effects)'\n            ],\n            cost: [],\n            startCost: [24, 36, 6, 24, 15600, 24, 240, 120, 6000],\n            scaling: [2, 2, 3.4, 1, 1, 1, 1, 1, 1],\n            max: [8, 8, 2, 1, 1, 1, 1, 1, 1],\n            maxActive: 8\n        }\n    ],\n    inflationTreeInfo: {\n        name: [\n            'Overboost',\n            'Global boost',\n            'Strange gain',\n            'Instability',\n            'More Milestones'\n        ],\n        effectText: [\n            () => `Boost global speed by 2, but reduce time limit on everything that has it by 4 if level is below 2.\\nSecond level in true Vacuum outside of any Challenge will also boost global speed by ${format(calculateEffects.inflation0(), { padding: true })}, strength decreases over ${format(1800, { type: 'time', padding: false })} of real Stage time.`,\n            () => `Unspent Dark matter boost global speed by ${format(calculateEffects.inflation1(), { padding: true })} \u27F6 ${format(calculateEffects.inflation1(player.inflation.tree[1] + 1), { padding: true })}.`,\n            () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset per level.`,\n            () => `This Inflation strength is based on Super Void progress.\\nFirst level will allow to use Super Void rewards outside of Void including in the false Vacuum, also it will allow to create Quasi-stars inside the Void.\\nFor other levels it boost global speed by ${format(1, { padding: true })} at level 2, Strange quarks by ${format(1, { padding: true })} at level 3 and Strangelets by ${format(1, { padding: true })} at level 4.`,\n            () => 'Add more levels for false Vacuum Milestones and unlock Void Milestones for true Vacuum.\\nRefunding this Inflation will disable all new Milestones effects when outside Void.'\n        ],\n        cost: [],\n        startCost: [0, 1, 1, 1, 4],\n        scaling: [2, 0.75, 0.5, 1.75, 0],\n        max: [2, 4, 6, 1, 0]\n    },\n    lastUpgrade: [[null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades']],\n    lastElement: null,\n    lastStrangeness: [null, 0],\n    lastInflation: null,\n    lastMilestone: [null, 0],\n    lastChallenge: [0, null],\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Fundamental Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[1].need[0])} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} this reset.`,\n                () => `Have current Energy reach ${format(global.milestonesInfo[1].need[1])}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures strength increased by ${format(global.milestonesInfo[1].reward[0], { padding: true })}.` : 'Increase Strange quarks from any Stage reset by +1.',\n                () => player.inflation.vacuum ? `Effective Energy increased by ${format(global.milestonesInfo[1].reward[1], { padding: true })}.` : 'Permanent Microworld Stage.'\n            ],\n            need: [],\n            time: [14400, 14400],\n            reward: [1, 1],\n            scaling: [\n                [1e152, 1e158, 1e164, 1e170, 1e178, 1e190],\n                [23800, 24600, 25800, 27000, 28200, 29600]\n            ],\n            max: [6, 6]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `${player.inflation.vacuum ? 'Vaporize to' : 'Produce'} at least ${format(global.milestonesInfo[2].need[0])} ${player.inflation.vacuum ? 'Clouds' : 'Drops this reset'}.`,\n                () => `${player.inflation.vacuum ? 'Produce' : 'Have'} at least ${format(global.milestonesInfo[2].need[1])} ${player.inflation.vacuum ? 'Drops this reset' : 'Puddles at same time'}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Decrease Drops requirement to get a Cloud by ${format(global.milestonesInfo[2].reward[0], { padding: true })}.` : 'A new Intergalactic Structure. (Nebula)',\n                () => player.inflation.vacuum ? `Puddles strength increased by ${format(global.milestonesInfo[2].reward[1], { padding: true })}.` : 'Permanent Submerged Stage.'\n            ],\n            need: [],\n            time: [28800, 28800],\n            reward: [1, 1],\n            scaling: [\n                [1e30, 1e32, 1e34, 1e36, 1e38, 1e40, 1e44],\n                [1500, 2300, 3100, 3900, 4700, 5500, 6400]\n            ],\n            max: [7, 7]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[3].need[0])} Mass this reset.`,\n                () => `Have more or equal to ${format(global.milestonesInfo[3].need[1])} Satellites${player.inflation.vacuum ? ' and Subsatellites' : ''}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Cosmic dust strength increased by ${format(global.milestonesInfo[3].reward[0], { padding: true })}.` : 'A new Intergalactic Structure. (Star cluster)',\n                () => player.inflation.vacuum ? `Increase effective Rank by +${format(global.milestonesInfo[3].reward[1])}.` : 'Permanent Accretion Stage.'\n            ],\n            need: [],\n            time: [43200, 43200],\n            reward: [1, 0],\n            scaling: [\n                [1e32, 1e34, 1e36, 1e38, 1e40, 1e42, 1e45],\n                [24, 28, 32, 36, 40, 44, 50]\n            ],\n            max: [7, 7]\n        }, { //Stage 4\n            name: [\n                'Remnants of past',\n                'Supermassive'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[4].need[0])} Elements this reset.`,\n                () => `Have ${player.inflation.vacuum ? 'current Black holes' : 'Solar mass after Collapse'} reach ${format(global.milestonesInfo[4].need[1])} or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Stars strength increased by ${format(global.milestonesInfo[4].reward[0], { padding: true })}.` : \"New Intergalactic themed Strangeness, Milestone and second level of 'Element automatization'.\",\n                () => player.inflation.vacuum ? `Black holes effect increased by ${format(global.milestonesInfo[4].reward[1], { padding: true })}.` : 'A new Intergalactic Structure and the final Milestone. (Galaxy)'\n            ],\n            need: [],\n            time: [57600, 57600],\n            reward: [1, 1],\n            scaling: [\n                [1e48, 1e49, 1e50, 1e52, 1e54, 1e56, 1e58, 1e60],\n                [9000, 12000, 16000, 22000, 30000, 42000, 60000, 84000]\n            ],\n            max: [8, 8]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'End of Greatness'\n            ],\n            needText: [\n                () => `Have ${player.inflation.vacuum ? 'total produced' : 'self-made'} Stars ${player.inflation.vacuum ? 'this Reset' : 'count'} reach at least ${format(global.milestonesInfo[5].need[0])}.`,\n                () => `Have ${format(global.milestonesInfo[5].need[1])} self-made Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `First two Intergalactic Structures strength increased by ${format(global.milestonesInfo[5].reward[0], { padding: true })}.` : \"Unlock a new Intergalactic Strangeness 'Strange gain' and second level of 'Automatic Stage'.\",\n                () => player.inflation.vacuum ? `Boost per Galaxy is increased by +${format(global.milestonesInfo[5].reward[1])}.` : \"Unlock a new Intergalactic Upgrade 'Galactic Merger'.\"\n            ],\n            need: [],\n            time: [3600, 1200],\n            reward: [1, 0],\n            scaling: [\n                [1460, 1540, 1620, 1700, 1780, 1860, 1940, 2020],\n                [1, 2, 4, 6, 10, 14, 18, 22]\n            ],\n            max: [8, 8]\n        }\n    ],\n    milestonesInfoS6: {\n        requirement: [1, 2, 3],\n        active: []\n    },\n    challengesInfo: {\n        name: [\n            'Void'\n        ],\n        description: [\n            () => `Result of Vacuum Instability, investigate at your own will\\n(${player.inflation.vacuum || player.challenges.super ? `Entering will force a ${player.challenges.super ? 'Vacuum' : 'Stage'} reset, will be reverted after exiting` : 'No reason to enter from false Vacuum'})`\n        ],\n        effectText: [\n            () => {\n                const progress = player.challenges.voidCheck;\n                let text = `<span class=\"orangeText\">\u2012 Microworld Structures are 4 times weaker${progress[1] >= 1 ? `\\n\u2012 Discharge base is raised to the root of 2 (^${format(0.5)})` : ''}${progress[1] >= 2 ? '\\n\u2012 Energy gain from creating non Microworld Structures is decreased by 50%' : ''}</span>`;\n                if (progress[1] >= 3) { text += `\\n\\n<span class=\"blueText\">\u2012 Effective Drops amount is hardcapped at 1\\n\u2012 Puddles are ${format(8000)} times weaker${progress[2] >= 1 ? `\\n\u2012 Clouds gain is decreased by ^${format(0.8)}</span>` : ''}`; }\n                if (progress[1] >= 2) { text += `\\n\\n<span class=\"grayText\">\u2012 Cosmic dust is softcapped (^${format(0.9)})${progress[3] >= 4 ? `\\n\u2012 Softcap is stronger after reaching 'Jovian planet' Rank (^${format(0.8)})` : ''}</span>`; }\n                if (progress[3] >= 5) { text += `\\n\\n<span class=\"orchidText\">\u2012 Intestellar Structures are ${format(8000)} times weaker\\n\u2012 Solar mass gain from Stars is decreased by 2\\n\u2012 Solar mass effect is softcapped ^${format(0.2)} after 1</span>`; }\n                if (progress[5] >= 1) { text += `\\n\\n<span class=\"cyanText\">\u2012 ${player.inflation.tree[3] < 1 ? \"Can't create or gain Quasi-stars\" : 'Quasi-stars do not produce anything'}${progress[5] >= 2 ? '\\n\u2012 Higher Ranks use self-made Galaxies instead, based on total cost' : ''}</span>`; }\n                const left = progress[1] < 2 ? 'orange' : progress[3] < 5 ? 'gray' : progress[5] < 1 ? 'orchid' : progress[5] < 2 ? 'cyan' : null;\n                if (left !== null) { text += `\\n<span class=\"${left}Text\">More will be shown after getting further into the Void</span>`; }\n                return text;\n            }\n        ],\n        needText: [\n            [\n                [], [\n                    () => 'Perform Discharge',\n                    () => \"Get first level of 'Accretion'\",\n                    () => \"Get second level of 'Accretion'\"\n                ], [\n                    () => 'Have more than 0 Clouds',\n                    () => `Have more than ${format(1e4)} Clouds`,\n                    () => `Reach ${format(1e8)} Clouds without increasing Rank`\n                ], [\n                    () => \"Reach 'Meteoroid' Rank\",\n                    () => \"Reach 'Asteroid' Rank\",\n                    () => \"Reach 'Planet' Rank\",\n                    () => \"Reach 'Jovian planet' Rank\",\n                    () => \"Reach 'Protostar' Rank\",\n                    () => player.stage.true >= 7 || player.strangeness[3][9] >= 1 ? \"Reach 'Protogalaxy' Rank\" : 'Requirements are unknown'\n                ], [\n                    () => 'Cause the Collapse',\n                    () => 'Get first Red giant',\n                    () => 'Get first Neutron star',\n                    () => 'Get first Black hole'\n                ], [\n                    () => 'Unlock Intergalactic',\n                    () => 'Create a Galaxy',\n                    () => player.stage.true >= 7 || player.strangeness[3][9] >= 1 ? 'Create a Galaxy group' : 'Requirements are unknown'\n                ]\n            ]\n        ],\n        rewardText: [\n            []\n        ],\n        reset: ['stage'],\n        time: [3600],\n        color: [\n            'darkviolet'\n        ]\n    },\n    voidRewards: [\n        [\n            [],\n            [\"'Energy increase' (Microworld)\", \"'Conservation of Mass' (Microworld)\", \"'Improved flow' (Submerged)\"],\n            [\"'Mechanical spread' (Submerged)\", \"'Ocean world' (Submerged)\", 'Missing'],\n            ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\", 'Missing'],\n            ['Max level increased for Auto resets', \"'Conservation of Energy' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass delay' (Accretion)\"],\n            [\"'Newer Upgrade' (Interstellar)\", \"'Rank raise' (Accretion)\", 'Missing']\n        ], [\n            [],\n            ['Dicharge requirement is decreased by -1', \"Improve 'Conservation of Mass' Strangeness\", 'Missing'],\n            ['Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing', 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing']\n        ]\n    ],\n    historyStorage: {\n        stage: [],\n        vacuum: []\n    }\n};\n\n//Math.log extension for any base\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n/** Not for deep copy, works on Overlimit, but not prefered */\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone;\n//Actual type is any[], it's because TS is dumb; [...array] will be better after ~>10000 keys\n\n/** For non deep clone use { ...object } or cloneArray when possible */\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        if (toClone instanceof Overlimit) { return new Overlimit(toClone) as CloneType; }\n\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\n/** Does not clone given value */\nexport const createArray = <startValue extends number | string | boolean | null | undefined>(length: number, value: startValue) => {\n    const array = [];\n    for (let i = 0; i < length; i++) {\n        array.push(value);\n    }\n    return array as startValue[];\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.producing[s] = [];\n    for (let i = 0; i < global.buildingsInfo.startCost[s].length; i++) {\n        global.buildingsInfo.producing[s].push(new Overlimit('0'));\n    }\n}\nfor (const upgradeType of ['researches', 'researchesExtra', 'strangeness'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    for (let s = 1; s < pointer.length; s++) {\n        pointer[s].cost = cloneArray(pointer[s].startCost);\n    }\n}\nfor (let s = 1; s < global.milestonesInfo.length; s++) {\n    for (let i = 0; i < global.milestonesInfo[s].needText.length; i++) {\n        global.milestonesInfo[s].need.push(new Overlimit('Infinity'));\n    }\n}\nglobal.inflationTreeInfo.cost = cloneArray(global.inflationTreeInfo.startCost);\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 0),\n        createArray(global.upgradesInfo[2].startCost.length, 0),\n        createArray(global.upgradesInfo[3].startCost.length, 0),\n        createArray(global.upgradesInfo[4].startCost.length, 0),\n        createArray(global.upgradesInfo[5].startCost.length, 0),\n        createArray(global.upgradesInfo[6].startCost.length, 0)\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 0),\n        createArray(global.researchesInfo[2].startCost.length, 0),\n        createArray(global.researchesInfo[3].startCost.length, 0),\n        createArray(global.researchesInfo[4].startCost.length, 0),\n        createArray(global.researchesInfo[5].startCost.length, 0),\n        createArray(global.researchesInfo[6].startCost.length, 0)\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 0),\n        createArray(global.researchesExtraInfo[2].startCost.length, 0),\n        createArray(global.researchesExtraInfo[3].startCost.length, 0),\n        createArray(global.researchesExtraInfo[4].startCost.length, 0),\n        createArray(global.researchesExtraInfo[5].startCost.length, 0),\n        createArray(global.researchesExtraInfo[6].startCost.length, 0)\n    ],\n    researchesAuto: createArray(global.researchesAutoInfo.costRange.length, 0),\n    ASR: createArray(global.ASRInfo.costRange.length, 0),\n    maxASR: createArray(global.ASRInfo.costRange.length, 0),\n    elements: createArray(global.elementsInfo.startCost.length, 0),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 0),\n        createArray(global.strangenessInfo[2].startCost.length, 0),\n        createArray(global.strangenessInfo[3].startCost.length, 0),\n        createArray(global.strangenessInfo[4].startCost.length, 0),\n        createArray(global.strangenessInfo[5].startCost.length, 0)\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 0),\n        createArray(global.milestonesInfo[2].need.length, 0),\n        createArray(global.milestonesInfo[3].need.length, 0),\n        createArray(global.milestonesInfo[4].need.length, 0),\n        createArray(global.milestonesInfo[5].need.length, 0)\n    ]\n});\nObject.assign(player.toggles, {\n    normal: createArray(document.getElementsByClassName('toggleNormal').length, false),\n    confirm: createArray(document.getElementsByClassName('toggleConfirm').length, 'Safe'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, false),\n        createArray(player.buildings[2].length, false),\n        createArray(player.buildings[3].length, false),\n        createArray(player.buildings[4].length, false),\n        createArray(player.buildings[5].length, false),\n        createArray(player.buildings[6].length, false)\n    ],\n    hover: createArray(document.getElementsByClassName('toggleHover').length, false),\n    max: createArray(document.getElementsByClassName('toggleMax').length, false),\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, false)\n});\nplayer.inflation.tree = createArray(global.inflationTreeInfo.startCost.length, 0);\nplayer.toggles.normal[1] = true;\nplayer.toggles.normal[4] = true;\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    if (load['player' as keyof unknown] !== undefined) { load = load['player' as keyof unknown]; }\n    if (load.vaporization === undefined) { throw new ReferenceError('This save file is not from this game or too old'); }\n    if (load.version === undefined) { load.version = '0.0.0'; }\n    prepareVacuum(Boolean(load.inflation?.vacuum)); //Only to set starting buildings values\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === '0.0.0') {\n            load.version = 'v0.0.1';\n            load.researchesExtra = []; //Required for v0.0.9\n        }\n        if (load.version === 'v0.0.1') {\n            load.version = 'v0.0.2';\n            load.stage.resets = load.stage.current - 1;\n        }\n        if (load.version === 'v0.0.2') {\n            load.version = 'v0.0.3';\n            load.accretion = deepClone(playerStart.accretion);\n        }\n        if (load.version === 'v0.0.3' || load.version === 'v0.0.4') {\n            load.version = 'v0.0.5';\n            load.elements = cloneArray(playerStart.elements);\n            load.collapse = deepClone(playerStart.collapse);\n            delete load['energy' as keyof unknown];\n            delete load['buyToggle' as keyof unknown];\n        }\n        if (load.version === 'v0.0.5' || load.version === 'v0.0.6') {\n            load.version = 'v0.0.7';\n            load.strange = deepClone(playerStart.strange);\n            load.strangeness = deepClone(playerStart.strangeness);\n        }\n        if (load.version === 'v0.0.7' || load.version === 'v0.0.8') {\n            load.version = 'v0.0.9';\n            load.stage.active = Math.min(load.stage.current, 4);\n            const a = load.stage.active;\n            const oldB = load.buildings as unknown as playerType['buildings'][0];\n            load.buildings = deepClone(playerStart.buildings);\n            load.buildings[a] = oldB;\n            const oldU = load.upgrades as unknown as playerType['upgrades'][0];\n            load.upgrades = deepClone(playerStart.upgrades);\n            load.upgrades[a] = oldU;\n            const oldR = load.researches as unknown as playerType['researches'][0];\n            load.researches = deepClone(playerStart.researches);\n            load.researches[a] = oldR;\n            const oldE = load.researchesExtra as unknown as playerType['researchesExtra'][0];\n            load.researchesExtra = deepClone(playerStart.researchesExtra);\n            load.researchesExtra[a] = oldE;\n            if (load.strangeness.length < 5) { load.strangeness.unshift([]); }\n            load.ASR = cloneArray(playerStart.ASR);\n        }\n        if (load.version === 'v0.0.9' || load.version === 'v0.1.0') {\n            load.version = 'v0.1.1';\n            load.discharge.energy = 0;\n            load.collapse.massMax = load.collapse.mass;\n            delete load.discharge['energyCur' as keyof unknown];\n        }\n        if (load.version === 'v0.1.1') {\n            load.version = 'v0.1.2';\n            for (let s = 1; s <= 5; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    const building = load.buildings[s][i];\n                    building.current = new Overlimit(building.current);\n                    building.total = new Overlimit(building.total);\n                    building.trueTotal = new Overlimit(building.total); //Intentional\n                }\n            }\n            if (load.strange[0]['true' as keyof unknown] !== undefined) { load.strange[0].current = load.strange[0]['true' as 'current']; }\n            load.strange[0].total = load.strange[0].current;\n            load.inflation = deepClone(playerStart.inflation);\n            delete load.vaporization['current' as keyof unknown];\n            delete load.strange[0]['true' as keyof unknown];\n        }\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.time = 0;\n            load.inflation.age = 0;\n            load.discharge.energyMax = load.discharge.energy;\n            load.vaporization.cloudsMax = new Overlimit(load.vaporization.clouds);\n        }\n        if (load.version === 'v0.1.3' || load.version === 'v0.1.4' || load.version === 'v0.1.5') {\n            load.version = 'v0.1.6';\n            load.collapse.show = 0;\n            load.challenges = deepClone(playerStart.challenges);\n            delete load.time['disabled' as keyof unknown];\n            delete load.discharge['unlock' as keyof unknown];\n            delete load.collapse['disabled' as keyof unknown];\n            delete load.collapse['inputM' as keyof unknown];\n            delete load.collapse['inputS' as keyof unknown];\n        }\n        if (load.version === 'v0.1.6' || load.version === 'v0.1.7') {\n            load.version = 'v0.1.8';\n            load.time.online = load.inflation.age;\n            load.time.universe = load.inflation.age;\n            load.time.stage = load.stage.time;\n            if (load.buildings[5].length > 4) { load.buildings[5].length = 4; }\n            delete load['saveUpdate016' as keyof unknown];\n            delete load.accretion['input' as keyof unknown];\n            delete load.collapse['elementsMax' as keyof unknown];\n        }\n        if (load.version === 'v0.1.8') {\n            load.version = 'v0.1.9';\n            load.researchesAuto = cloneArray(playerStart.researchesAuto);\n            delete load.discharge['bonus' as keyof unknown];\n        }\n        if (load.version === 'v0.1.9') {\n            load.version = 'v0.2.0';\n            load.stage.peak = 0;\n            load.milestones = deepClone(playerStart.milestones);\n            load.vaporization.input = cloneArray(playerStart.vaporization.input);\n            load.time.export = cloneArray(playerStart.time.export);\n            load.toggles = deepClone(playerStart.toggles);\n            load.history = deepClone(playerStart.history);\n            load.fileName = playerStart.fileName;\n            delete load['separator' as keyof unknown];\n            delete load['intervals' as keyof unknown];\n            delete load.stage['best' as keyof unknown];\n            delete load.stage['export' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.strangeness[1].splice(1, 0, load.strangeness[1].splice(5, 1)[0]);\n            load.strangeness[1].splice(7, 1);\n            load.strangeness[1].splice(4, 1);\n            load.strangeness[2].splice(8, 1);\n            load.strangeness[2].splice(6, 1);\n            load.strangeness[3].splice(10, 1);\n            load.strangeness[3].splice(8, 1);\n            load.strangeness[4].splice(6, 0, load.strangeness[4].splice(4, 1)[0]);\n            load.strangeness[4].splice(9, 1);\n            load.strangeness[4].splice(7, 1);\n            load.strangeness[5].splice(8, 1);\n            load.strangeness[5].splice(6, 1);\n        }\n        if (load.version === 'v0.2.0') {\n            load.version = 'v0.2.1';\n            load.time.offline = 0;\n            load.stage.input = cloneArray(playerStart.stage.input);\n            load.merge = deepClone(playerStart.merge);\n            load.cosmon = deepClone(playerStart.cosmon);\n            load.inflation.resets = load.inflation.vacuum ? 1 : 0;\n            load.buildings[6] = deepClone(playerStart.buildings[6]);\n            load.upgrades[6] = cloneArray(playerStart.upgrades[6]);\n            load.researches[6] = cloneArray(playerStart.researches[6]);\n            load.researchesExtra[6] = cloneArray(playerStart.researchesExtra[6]);\n            load.collapse.input = cloneArray(playerStart.collapse.input);\n            load.challenges.voidCheck = cloneArray(load.challenges.void);\n            load.history.vacuum = deepClone(playerStart.history.vacuum);\n            for (let s = 1; s <= 5; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    delete load.buildings[s][i]['highest' as keyof unknown];\n                }\n            }\n\n            /* Can be removed eventually */\n            load.toggles.normal = cloneArray(playerStart.toggles.normal);\n            load.toggles.buildings[6] = cloneArray(playerStart.toggles.buildings[6]);\n            load.strangeness[5].splice(6, 0, load.strangeness[5].splice(2, 1)[0]);\n            load.strangeness[5].splice(3, 0, load.strangeness[5].splice(1, 1)[0]);\n            load.strangeness[5].splice(0, 1);\n            load.strangeness[5].splice(4, 0, 0);\n        }\n        if (load.version === 'v0.2.1' || load.version === 'v0.2.2') {\n            load.version = 'v0.2.2t';\n            load.event = load.stage.true >= 7;\n            load.challenges.active = null;\n            load.challenges.super = false;\n            load.challenges.superVoid = cloneArray(playerStart.challenges.superVoid);\n            load.merge.reward = cloneArray(playerStart.merge.reward);\n            load.inflation.tree = cloneArray(playerStart.inflation.tree);\n            load.clone = {};\n            delete load['events' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.cosmon.current = load.cosmon.total;\n            if (load.collapse.show === 0) { load.collapse.show = load.elements.findLastIndex((e) => e > 0); } //Shorten and remove from v0.1.6\n            if (load.collapse.points === undefined) { load.collapse.points = []; } //Shorten\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError('Save file version is higher than game version');\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (let i = Math.min(load.buildings[s].length, global.buildingsInfo.maxActive[s]); i < playerStart.buildings[s].length; i++) {\n            load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n        }\n        for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n            load.toggles.buildings[s][i] = false;\n        }\n        if (isNaN(load.toggles.shop.wait[s])) {\n            load.toggles.shop.wait[s] = 2;\n        }\n\n        for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n            load.upgrades[s][i] = 0;\n        }\n        for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n            load.researches[s][i] = 0;\n        }\n        for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n            load.researchesExtra[s][i] = 0;\n        }\n        if (load.ASR[s] === undefined) {\n            load.ASR[s] = 0;\n        }\n\n        if (s >= 6) { continue; }\n        for (let i = Math.min(load.strangeness[s].length, global.strangenessInfo[s].maxActive); i < playerStart.strangeness[s].length; i++) {\n            load.strangeness[s][i] = 0;\n        }\n        for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n            load.milestones[s][i] = 0;\n        }\n    }\n    for (let i = load.strange.length; i < playerStart.strange.length; i++) {\n        load.strange[i] = deepClone(playerStart.strange[i]);\n    }\n\n    for (let i = load.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n        load.researchesAuto[i] = 0;\n    }\n    for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n        load.elements[i] = 0;\n    }\n    for (let i = load.inflation.tree.length; i < playerStart.inflation.tree.length; i++) {\n        load.inflation.tree[i] = 0;\n    }\n    if (load.clone.depth !== undefined) {\n        const { clone } = load;\n        for (let s = 1; s <= 6; s++) {\n            for (let i = clone.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                clone.upgrades[s][i] = 0;\n            }\n            for (let i = clone.researches[s].length; i < playerStart.researches[s].length; i++) {\n                clone.researches[s][i] = 0;\n            }\n            for (let i = clone.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                clone.researchesExtra[s][i] = 0;\n            }\n\n            if (s >= 6) { continue; }\n            if (clone.depth !== 'stage') {\n                for (let i = clone.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                    clone.strangeness[s][i] = 0;\n                }\n                for (let i = clone.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                    clone.milestones[s][i] = 0;\n                }\n            }\n        }\n        for (let i = clone.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n            clone.researchesAuto[i] = 0;\n        }\n        for (let i = clone.elements.length; i < playerStart.elements.length; i++) {\n            clone.elements[i] = 0;\n        }\n    }\n\n    for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n        load.toggles.normal[i] = playerStart.toggles.normal[i];\n    }\n    for (let i = load.toggles.confirm.length; i < playerStart.toggles.confirm.length; i++) {\n        load.toggles.confirm[i] = 'Safe';\n    }\n    for (let i = load.toggles.hover.length; i < playerStart.toggles.hover.length; i++) {\n        load.toggles.hover[i] = false;\n    }\n    for (let i = load.toggles.max.length; i < playerStart.toggles.max.length; i++) {\n        load.toggles.max[i] = false;\n    }\n    for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n        load.toggles.auto[i] = false;\n    }\n\n    /* Restore data post JSON parse */\n    load.fileName = new TextDecoder().decode(Uint8Array.from(load.fileName, (c) => c.codePointAt(0) as number));\n    load.vaporization.clouds = new Overlimit(load.vaporization.clouds);\n    load.vaporization.cloudsMax = new Overlimit(load.vaporization.cloudsMax);\n    for (let s = 1; s < load.buildings.length; s++) {\n        for (let i = 0; i < load.buildings[s].length; i++) {\n            const building = load.buildings[s][i];\n            building.current = new Overlimit(building.current);\n            building.total = new Overlimit(building.total);\n            building.trueTotal = new Overlimit(building.trueTotal);\n        }\n    }\n    Object.assign(player, load);\n\n    /* Final preparations and fixes */\n    global.trueActive = player.stage.active;\n    global.debug.errorID = true;\n    global.debug.errorQuery = true;\n    global.debug.errorGain = true;\n    global.debug.historyStage = null;\n    global.debug.historyVacuum = null;\n    global.debug.timeLimit = false;\n    const { buildings } = player;\n\n    const universes = buildings[6][1].current;\n    for (let i = 0; i < global.milestonesInfoS6.requirement.length; i++) {\n        global.milestonesInfoS6.active[i] = universes.moreOrEqual(global.milestonesInfoS6.requirement[i]);\n    }\n\n    global.collapseInfo.trueStars = buildings[4][1].true + buildings[4][2].true + buildings[4][3].true + buildings[4][4].true + buildings[4][5].true;\n    global.collapseInfo.pointsLoop = 0;\n    global.historyStorage.stage = player.history.stage.list;\n    global.historyStorage.vacuum = player.history.vacuum.list;\n    if (player.elements[26] >= 1 && player.stage.current < 5) { player.elements[26] = 0; }\n    if (!player.inflation.vacuum) {\n        if (buildings[2][1].current.lessOrEqual('0')) { buildings[2][0].current.max('2.7753108348135e-3'); }\n        if (player.accretion.rank === 0) { buildings[3][0].current.setValue('5.9722e27'); }\n    }\n\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s <= 6; s++) {\n        if (s < 6) {\n            const strangeness = player.strangeness[s];\n            const strangenessMax = global.strangenessInfo[s].max;\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                calculateMaxLevel(i, s, 'strangeness');\n                if (strangeness[i] > strangenessMax[i]) {\n                    strangeness[i] = strangenessMax[i];\n                    visualUpdateResearches(i, s, 'strangeness');\n                }\n            }\n        }\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) {\n                extra[i] = extraMax[i];\n            }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) {\n                researches[i] = researchesMax[i];\n            }\n        }\n        calculateMaxLevel(0, s, 'ASR');\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n\n        getId(`stageSwitch${s}`).style.textDecoration = global.trueActive === s ? 'underline' : '';\n        global.lastUpgrade[s][0] = null;\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let i = 0; i < playerStart.inflation.tree.length; i++) { calculateResearchCost(i, 0, 'inflation'); }\n    autoElementsSet();\n\n    toggleSuperVoid();\n    global.lastElement = null;\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    global.lastChallenge = [player.challenges.active ?? 0, null];\n    global.lastInflation = null;\n\n    assignSubmergedLevels();\n    assignStrangeInfo[1]();\n    assignStrangeInfo[0]();\n    assignPuddles();\n    assignMaxRank();\n    assignTrueEnergy();\n\n    switchTab(global.tab); //Update subtab list\n    visualUpdateInflation();\n    visualTrueStageUnlocks();\n    for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input[0], { type: 'input' });\n    (getId('stageInputTime') as HTMLInputElement).value = format(player.stage.input[1], { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input[0], { type: 'input' });\n    (getId('vaporizationInputMax') as HTMLInputElement).value = format(player.vaporization.input[1], { type: 'input' });\n    (getId('collapseInput') as HTMLInputElement).value = format(player.collapse.input[0], { type: 'input' });\n    (getId('collapseInputWait') as HTMLInputElement).value = format(player.collapse.input[1], { type: 'input' });\n    (getId('stageHistorySave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageHistoryShow') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    (getId('vacuumHistorySave') as HTMLInputElement).value = `${player.history.vacuum.input[0]}`;\n    (getId('vacuumHistoryShow') as HTMLInputElement).value = `${player.history.vacuum.input[1]}`;\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) { toggleConfirm(i); }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) { toggleSwap(i, 'hover'); }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) { toggleSwap(i, 'max'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    (getId('buyAnyInput') as HTMLInputElement).value = format(player.toggles.shop.input, { type: 'input' });\n    updateCollapsePointsText();\n\n    return oldVersion;\n};\n", "import { player, global, playerStart, updatePlayer, deepClone, cloneArray } from './Player';\nimport { getUpgradeDescription, switchTab, numbersUpdate, visualUpdate, format, getChallengeDescription, getChallengeReward, stageUpdate, getStrangenessDescription, visualUpdateResearches, visualUpdateInflation, visualUpdateUpgrades } from './Update';\nimport { assignStrangeInfo, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyStrangeness, buyUpgrades, collapseResetUser, dischargeResetUser, enterExitChallengeUser, inflationRefund, mergeResetUser, rankResetUser, stageResetUser, switchStage, timeUpdate, toggleConfirm, toggleSuperVoid, toggleSwap, vaporizationResetUser } from './Stage';\nimport { Alert, hideFooter, Prompt, setTheme, changeFontSize, changeFormat, specialHTML, replayEvent, Confirm, preventImageUnload, Notify, MDStrangenessPage, globalSave, toggleSpecial, saveGlobalSettings, getHotkeysHTML, getVersionInfoHTML } from './Special';\nimport { assignHotkeys, detectHotkey, handleTouchHotkeys } from './Hotkeys';\nimport { prepareVacuum } from './Vacuum';\nimport { checkUpgrade } from './Check';\nimport type { hotkeysList } from './Types';\n\n/** Only for static HTML, by default (false) throws error if id is null */\nexport const getId = (id: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.idMap.get(id);\n    if (test !== undefined) { return test; }\n\n    const store = document.getElementById(id);\n    if (store !== null) {\n        specialHTML.cache.idMap.set(id, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    if (global.debug.errorID) {\n        global.debug.errorID = false;\n        Notify(`Error encountered, ID \u2012 '${id}' doesn't exist`);\n        setTimeout(() => { global.debug.errorID = true; }, 6e4);\n    }\n    throw new ReferenceError(`ID \u2012 '${id}' doesn't exist`);\n};\n\n/** Id collection will be auto updated by browser */\nexport const getClass = (idCollection: string): HTMLCollectionOf<HTMLElement> => {\n    const test = specialHTML.cache.classMap.get(idCollection);\n    if (test !== undefined) { return test; }\n    const store = document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n    specialHTML.cache.classMap.set(idCollection, store);\n    return store;\n};\n\n/** Only for static HTML */\nexport const getQuery = (query: string): HTMLElement => {\n    const test = specialHTML.cache.queryMap.get(query);\n    if (test !== undefined) { return test; }\n\n    const store = document.querySelector(query) as HTMLElement; //Can't add null type due to eslint being buggy\n    if (store !== null) {\n        specialHTML.cache.queryMap.set(query, store);\n        return store;\n    }\n\n    if (global.debug.errorQuery) {\n        global.debug.errorQuery = false;\n        Notify(`Error encountered, Query \u2012 '${query}' failed to find anything`);\n        setTimeout(() => { global.debug.errorQuery = true; }, 6e4);\n    }\n    throw new ReferenceError(`Query \u2012 '${query}' failed`);\n};\n\nconst handleOfflineTime = (): number => {\n    const time = player.time;\n    const timeNow = Date.now();\n    const offlineTime = (timeNow - time.updated) / 1000;\n    time.updated = timeNow;\n    time.export[0] += offlineTime;\n    return offlineTime;\n};\nexport const simulateOffline = async(offline: number, autoAccept = player.toggles.normal[4] && !globalSave.developerMode) => {\n    if (!global.paused) { pauseGame(); }\n    if (player.time.offline < 0) {\n        offline += player.time.offline;\n        player.time.offline = 0;\n    }\n    if (offline > 43200) {\n        offline = 43200;\n    } else if (offline <= 0) {\n        player.time.offline += offline;\n        return pauseGame(false);\n    }\n    if (!autoAccept && !await Confirm(`Claim ${format(offline, { type: 'time', padding: false })} worth of Offline time?`, 2) &&\n        (globalSave.developerMode || !await Confirm(\"Press 'Cancel' again to confirm losing Offline time, 'Confirm' to keep it\"))) {\n        global.lastSave += handleOfflineTime();\n        return pauseGame(false);\n    }\n    global.debug.offlineUpdate = null;\n    global.debug.offlineSpeed = globalSave.intervals.offline / 1000;\n\n    const accelerate = getId('offlineAccelerate');\n    accelerate.addEventListener('click', offlineAccelerate);\n    getId('offlineCancel').addEventListener('click', offlineCancel);\n    document.body.addEventListener('keydown', offlineKey);\n    getId('offlineMain').style.display = '';\n    accelerate.focus();\n    calculateOffline(offline);\n};\nconst calculateOffline = (warpTime: number, start = warpTime) => {\n    const rate = global.debug.offlineSpeed;\n    const time = rate <= 0 ? warpTime : Math.min(600 * rate, warpTime);\n    warpTime -= time;\n    try {\n        timeUpdate(time, Math.max(time / 600, rate));\n    } catch (error) {\n        offlineEnd();\n        void Alert(`Offline calculation failed due to error:\\n${error}`, 1);\n        throw error;\n    }\n    if (warpTime > 0) {\n        setTimeout(calculateOffline, 0, warpTime, start);\n        getId('offlineTick').textContent = format(rate);\n        getId('offlineRemains').textContent = format(warpTime, { type: 'time' });\n        getId('offlinePercentage').textContent = format(100 - warpTime / start * 100, { padding: true });\n        if (globalSave.SRSettings[0]) { getQuery('#offlineMain > div').ariaValueText = `${format(100 - warpTime / start * 100)}% done`; }\n    } else { offlineEnd(); }\n};\nconst offlineEnd = () => {\n    if (global.debug.offlineUpdate !== null) {\n        stageUpdate(global.debug.offlineUpdate);\n    } else {\n        visualUpdate();\n        numbersUpdate();\n    }\n    pauseGame(false);\n    getId('offlineMain').style.display = 'none';\n\n    getId('offlineAccelerate').removeEventListener('click', offlineAccelerate);\n    getId('offlineCancel').removeEventListener('click', offlineCancel);\n    document.body.removeEventListener('keydown', offlineKey);\n};\nconst offlineKey = (event: KeyboardEvent) => {\n    if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n    const code = event.code;\n    if (code === 'Escape') {\n        if (event.shiftKey) { return; }\n        event.preventDefault();\n        offlineCancel();\n    } else if (code === 'Enter' || code === 'Space') {\n        if (event.shiftKey || document.activeElement === getId('offlineCancel')) { return; }\n        event.preventDefault();\n        offlineAccelerate();\n    } else if (code === 'Tab') {\n        event.preventDefault();\n        const cancel = getId('offlineCancel');\n        (document.activeElement === cancel ? getId('offlineAccelerate') : cancel).focus();\n    }\n};\nconst offlineCancel = () => (global.debug.offlineSpeed = 0);\nconst offlineAccelerate = () => (global.debug.offlineSpeed *= 2);\n\nconst changeIntervals = () => {\n    const intervalsId = global.intervalsId;\n    const intervals = globalSave.intervals;\n    const paused = global.paused;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = paused ? undefined : setInterval(timeUpdate, intervals.main);\n    intervalsId.numbers = paused ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = paused ? undefined : setInterval(visualUpdate, intervals.visual);\n    intervalsId.autoSave = paused ? undefined : setInterval(saveGame, intervals.autoSave);\n};\n/** Pauses and unpauses game based on 'pause' value */\nexport const pauseGame = (pause = true) => {\n    global.hotkeys.disabled = pause;\n    global.paused = pause;\n    changeIntervals();\n};\nexport const pauseGameUser = async() => {\n    if (global.paused) { return; }\n    pauseGame();\n    const claim = await Confirm(\"Game is currently paused. Any button below will unpause, press 'Confirm' to keep Offline time\") ||\n        (!globalSave.developerMode && await Confirm(\"Press 'Cancel' again to confirm losing Offline time, 'Confirm' to keep it\"));\n    const offline = handleOfflineTime();\n    global.lastSave += offline;\n    if (claim) {\n        void simulateOffline(offline, true);\n    } else {\n        pauseGame(false);\n    }\n};\n\nconst saveGame = (noSaving = false): string | null => {\n    if (global.paused) {\n        Notify('No saving while game is paused');\n        return null;\n    }\n    try {\n        player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n        player.history.vacuum.list = global.historyStorage.vacuum.slice(0, player.history.vacuum.input[0]);\n\n        const clone = { ...player };\n        clone.fileName = String.fromCharCode(...new TextEncoder().encode(clone.fileName));\n        const save = btoa(JSON.stringify(clone));\n        if (!noSaving) {\n            localStorage.setItem('testing_save', save);\n            clearInterval(global.intervalsId.autoSave);\n            global.intervalsId.autoSave = setInterval(saveGame, globalSave.intervals.autoSave);\n            getId('isSaved').textContent = 'Saved';\n            global.lastSave = 0;\n        }\n        return save;\n    } catch (error) {\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Failed to save game\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n};\nconst loadGame = (save: string) => {\n    if (global.paused) { return Notify('No loading while game is paused'); }\n    pauseGame();\n    try {\n        const versionCheck = updatePlayer(JSON.parse(atob(save)));\n\n        global.lastSave = handleOfflineTime();\n        Notify(`This save is ${format(global.lastSave, { type: 'time', padding: false })} old${versionCheck !== player.version ? `\\nSave file version is ${versionCheck}` : ''}`);\n        stageUpdate();\n\n        void simulateOffline(global.lastSave);\n    } catch (error) {\n        prepareVacuum(Boolean(player.inflation.vacuum)); //Fix vacuum state\n        pauseGame(false);\n\n        void Alert(`Incorrect save file format\\n${error}`);\n        throw error;\n    }\n};\nconst exportFileGame = () => {\n    if (player.stage.true >= 7 || player.strange[0].total > 0) {\n        awardExport();\n    }\n\n    const save = saveGame(globalSave.developerMode);\n    if (save === null) { return; }\n    const a = document.createElement('a');\n    a.href = `data:text/plain,${save}`;\n    a.download = replaceSaveFileSpecials();\n    a.click();\n};\nconst awardExport = () => {\n    const exportReward = player.time.export;\n    if (exportReward[0] < 0) { return; }\n    const { strange } = player;\n    const conversion = Math.min(exportReward[0] / 86400, 1);\n    const quarks = (exportReward[1] / 2.5 + 1) * conversion;\n\n    strange[0].current += quarks;\n    strange[0].total += quarks;\n    exportReward[1] = Math.max(exportReward[1] - quarks, 0);\n    if (player.strangeness[5][8] >= 1) {\n        const strangelets = exportReward[2] / 2.5 * conversion;\n        strange[1].current += strangelets;\n        strange[1].total += strangelets;\n        exportReward[2] -= strangelets;\n        assignStrangeInfo[1]();\n    }\n    assignStrangeInfo[0]();\n    exportReward[0] = 0;\n};\n\nconst saveConsole = async() => {\n    let value = await Prompt(\"Available options:\\n'Copy' \u2012 copy save file to clipboard\\n'Delete' \u2012 delete your save file\\n'Clear' \u2012 clear all domain data\\n'Global' \u2012 open options for global settings\\n(Adding '_' will skip options menu)\\nOr insert save file string here to load it\");\n    if (value === null || value === '') { return; }\n    let lower = value.toLowerCase();\n    if (lower === 'global') {\n        value = await Prompt(\"Available options:\\n'Reset' \u2012 reset global settings\\n'Copy' \u2012 copy global settings to clipboard\\nOr insert global settings string here to load it\\n(this will overwrite current ones and require page reload)\");\n        if (value === null || value === '') { return; }\n        lower = `global_${value.toLowerCase()}`;\n    }\n\n    if (lower === 'copy' || lower === 'global_copy') {\n        const save = lower === 'global_copy' ? saveGlobalSettings(true) : saveGame(true);\n        if (save !== null) { void navigator.clipboard.writeText(save); }\n    } else if (lower === 'delete' || lower === 'clear' || lower === 'global_reset') {\n        pauseGame();\n        if (lower === 'delete') {\n            localStorage.removeItem('testing_save');\n        } else if (lower === 'global_reset') {\n            localStorage.removeItem('fundamentalSettings');\n        } else { localStorage.clear(); }\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    } else if (value === 'devMode') {\n        globalSave.developerMode = !globalSave.developerMode;\n        Notify(`Developer mode is ${globalSave.developerMode ? 'now' : 'no longer'} active`);\n        saveGlobalSettings();\n    } else if (lower === 'achievement') {\n        Notify('Unlocked a new Achievement! (If there were any)');\n    } else if (lower === 'slow' || lower === 'free' || lower === 'boost') {\n        Notify('Game speed was increased by 1x');\n    } else if (lower === 'secret' || lower === 'global_secret' || lower === 'secret_secret') {\n        Notify(`Found a ${lower === 'secret_secret' ? \"ultra rare secret, but it doesn't proof anything\" : `${lower === 'global_secret' ? 'global' : 'rare'} secret, don't share it with anybody`}`);\n    } else if (lower === 'secret_proof') {\n        Notify('Found a proof that you were looking for!');\n    } else {\n        if (value.length < 20) { return void Alert(`Input '${value}' doesn't match anything`); }\n        if (lower.includes('global_')) {\n            if (!await Confirm(\"Press 'Confirm' to load input as a new global settings, this will reload page\\n(Input is too long to be displayed)\")) { return; }\n            localStorage.setItem('fundamentalSettings', value[6] === '_' ? value.substring(7) : value);\n            window.location.reload();\n            void Alert('Awaiting game reload');\n        } else {\n            if (!await Confirm(\"Press 'Confirm' to load input as a save file\\n(Input is too long to be displayed)\")) { return; }\n            loadGame(value);\n        }\n    }\n};\n\nconst replaceSaveFileSpecials = (): string => {\n    let realName = player.fileName;\n\n    const date = new Date();\n    const dateIndex = realName.indexOf('[date');\n    if (dateIndex >= 0) {\n        const endIndex = realName.indexOf(']', dateIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = realName.substring(dateIndex + 5, endIndex);\n            const special = [\n                'Y',\n                'M',\n                'D'\n            ];\n            const replaceWith = [\n                `${date.getFullYear()}`,\n                `${date.getMonth() + 1}`.padStart(2, '0'),\n                `${date.getDate()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            realName = realName.replace(realName.substring(dateIndex, endIndex + 1), replaced);\n        }\n    }\n    const timeIndex = realName.indexOf('[time');\n    if (timeIndex >= 0) {\n        const endIndex = realName.indexOf(']', timeIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = realName.substring(timeIndex + 5, endIndex);\n            const special = [\n                'H',\n                'M',\n                'S'\n            ];\n            const replaceWith = [\n                `${date.getHours()}`.padStart(2, '0'),\n                `${date.getMinutes()}`.padStart(2, '0'),\n                `${date.getSeconds()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            realName = realName.replace(realName.substring(timeIndex, endIndex + 1), replaced);\n        }\n    }\n\n    const special = [\n        '[version]',\n        '[stage]',\n        '[strange]',\n        '[cosmon]',\n        '[vacuum]',\n        '[galaxy]',\n        '[universe]'\n    ];\n    const replaceWith = [\n        player.version,\n        global.stageInfo.word[player.stage.active],\n        `${player.strange[0].total}`,\n        `${player.cosmon.total}`,\n        `${player.inflation.vacuum}`,\n        `${player.buildings[5][3].true}`,\n        `${player.buildings[6][1].true}`\n    ];\n    for (let i = 0; i < special.length; i++) {\n        realName = realName.replace(special[i], replaceWith[i]);\n    }\n    return `${realName}.txt`;\n};\n\n/* Arguments are not done as '(...data: any) => any, ...data: any' because TS won't do type safety */\n/** If onceInstanly is true, then it will instanly call function once and then try to repeat it after delay */\nconst repeatFunction = (repeat: () => any, onceInstanly = false) => {\n    if (onceInstanly) { repeat(); }\n    if (global.intervalsId.mouseRepeat !== undefined) { return; }\n    global.intervalsId.mouseRepeat = setTimeout(() => {\n        global.intervalsId.mouseRepeat = setInterval(repeat, 50);\n    }, 200);\n};\nconst cancelRepeat = () => {\n    clearInterval(global.intervalsId.mouseRepeat);\n    global.intervalsId.mouseRepeat = undefined;\n};\n\nconst hoverUpgrades = (index: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'inflation') => {\n    if (type === 'inflation') {\n        global.lastInflation = index;\n    } else {\n        if (player.toggles.hover[0] && player.stage.true >= 2) {\n            buyUpgrades(index, player.stage.active, type);\n        }\n        if (type === 'elements') {\n            global.lastElement = index;\n        } else { global.lastUpgrade[player.stage.active] = [index, type]; }\n    }\n    getUpgradeDescription(index, type);\n};\nconst hoverStrangeness = (index: number, stageIndex: number, type: 'strangeness' | 'milestones') => {\n    if (type === 'strangeness') {\n        global.lastStrangeness = [index, stageIndex];\n    } else { global.lastMilestone = [index, stageIndex]; }\n    getStrangenessDescription(index, stageIndex, type);\n};\nconst hoverChallenge = (index: number) => {\n    global.lastChallenge[0] = index;\n    getChallengeDescription(index);\n    visualUpdate(); //Lazy way to update unlocked buttons\n};\n/** Handles requirement to switch Stage, returns true if can safely return early */\nconst handleAutoSwitch = (index: number, type = 'researchesAuto'): boolean => {\n    const stageIndex = player.stage.active;\n    if (type === 'researchesAuto' && !checkUpgrade(index, stageIndex, type)) {\n        const autoStage = global.researchesAutoInfo.autoStage[index][player.researchesAuto[index]];\n        if (autoStage !== undefined && !(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { switchStage(autoStage, stageIndex); }\n        return true;\n    }\n    return false;\n};\n\nexport const buyAll = () => {\n    const active = player.stage.active;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        buyBuilding(i, active, 0);\n    }\n};\n\nexport const updateCollapsePointsText = () => {\n    let pointsText = '';\n    const points = player.collapse.points;\n    for (let i = 0; i < points.length; i++) {\n        pointsText += `${i > 0 ? ', ' : ''}${format(points[i], { type: 'input' })}`;\n    }\n    getId('collapsePoints').textContent = pointsText !== '' ? `${pointsText} or ` : '';\n};\n\nexport const globalSaveStart = deepClone(globalSave);\ntry { //Start everything\n    preventImageUnload();\n    const body = document.body;\n\n    const globalSettings = localStorage.getItem('fundamentalSettings');\n    if (globalSettings !== null) {\n        try {\n            Object.assign(globalSave, JSON.parse(atob(globalSettings)));\n            const decoder = new TextDecoder();\n            for (const key in globalSave.hotkeys) { //Restore decoded data\n                const array = globalSave.hotkeys[key as hotkeysList] as string[];\n                for (let i = 0; i < array.length; i++) {\n                    array[i] = decoder.decode(Uint8Array.from(array[i], (c) => c.codePointAt(0) as number));\n                }\n            }\n            if (!(globalSave.intervals.offline >= globalSave.intervals.main * 2)) {\n                globalSave.intervals.offline = globalSave.intervals.main * 2;\n            }\n            for (let i = globalSave.toggles.length; i < globalSaveStart.toggles.length; i++) {\n                globalSave.toggles[i] = false;\n            }\n            for (let i = globalSave.MDSettings.length; i < globalSaveStart.MDSettings.length; i++) {\n                globalSave.MDSettings[i] = false;\n            }\n            for (let i = globalSave.SRSettings.length; i < globalSaveStart.SRSettings.length; i++) {\n                globalSave.SRSettings[i] = false;\n            }\n            for (const key in globalSaveStart.hotkeys) {\n                if (globalSave.hotkeys[key as hotkeysList] === undefined) {\n                    globalSave.hotkeys[key as hotkeysList] = cloneArray(globalSaveStart.hotkeys[key as hotkeysList]);\n                }\n            }\n        } catch (error) {\n            Notify('Global settings failed to parse, default ones will be used instead');\n            console.log(`(Full parse error) ${error}`);\n        }\n        (getId('decimalPoint') as HTMLInputElement).value = globalSave.format[0];\n        (getId('thousandSeparator') as HTMLInputElement).value = globalSave.format[1];\n        (getId('mainInterval') as HTMLInputElement).value = `${globalSave.intervals.main}`;\n        (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n        (getId('numbersInterval') as HTMLInputElement).value = `${globalSave.intervals.numbers}`;\n        (getId('visualInterval') as HTMLInputElement).value = `${globalSave.intervals.visual}`;\n        (getId('autoSaveInterval') as HTMLInputElement).value = `${globalSave.intervals.autoSave / 1000}`;\n        for (let i = 0; i < globalSaveStart.toggles.length; i++) { toggleSpecial(i, 'global'); }\n        if (globalSave.fontSize !== 16) { changeFontSize(true); } //Also sets breakpoints for screen size\n        if (globalSave.toggles[3]) {\n            getId('hideToggle').style.display = 'none';\n            getId('currentSwitch').style.display = 'none';\n            getQuery('#footer > div:first-child').style.display = 'none';\n            getId('body').prepend(getId('footer'));\n            getId('fakeFooter').after(getId('phoneHotkeys'));\n            getId('footerMain').append(getId('subtabs'), getId('stageSelect'));\n            specialHTML.styleSheet.textContent += `.insideTab { margin-top: 0.6rem; } #footer { position: unset; } #footerMain { padding: 0.6em; row-gap: 0.6em; }\n            #footerMain button, #phoneHotkeys button { width: min-content; min-width: 4em; height: 2em; border-radius: 10px; font-size: 0.92em; } #footerMain > * { margin: 0 auto; gap: 0.4em; } #footerStats { gap: 0.6em; }\n            #stageSelect { position: unset; justify-content: unset; pointer-events: unset; } #stageSelect > div { position: unset; justify-content: unset; flex-wrap: unset; gap: 0.4em; margin: 0 auto; max-width: unset; } #subtabs { flex-direction: row; }\n            #phoneHotkeys { flex-direction: row-reverse; gap: 0.4em; justify-content: center; position: fixed; width: 100%; bottom: 0.6em; margin: 0; } #fakeFooter { height: 3.04em; }`;\n        }\n        if (globalSave.toggles[2]) { body.classList.remove('noTextSelection'); }\n        if (globalSave.toggles[1]) {\n            const elementsArea = getId('upgradeSubtabElements');\n            elementsArea.id = 'ElementsTab';\n            getId('upgradeTab').after(elementsArea);\n            specialHTML.cache.idMap.delete('upgradeSubtabElements');\n\n            const elementsButton = getId('upgradeSubtabBtnElements');\n            elementsButton.id = 'ElementsTabBtn';\n            elementsButton.classList.add('stage4Include');\n            getId('upgradeTabBtn').after(elementsButton);\n            specialHTML.cache.idMap.delete('upgradeSubtabBtnElements');\n\n            const tabList = global.tabList;\n            tabList.ElementsSubtabs = [];\n            tabList.upgradeSubtabs.splice(tabList.upgradeSubtabs.indexOf('Elements'), 1);\n            tabList.tabs.splice(tabList.tabs.indexOf('upgrade') + 1, 0, 'Elements');\n        }\n\n        if (globalSave.MDSettings[0]) {\n            (document.getElementById('MDMessage1') as HTMLElement).remove();\n            specialHTML.styleSheet.textContent += 'body.noTextSelection, img, input[type = \"image\"], button, #load, a, #notifications > p, #hideToggle { -webkit-user-select: none; -webkit-touch-callout: none; }'; //Safari junk to disable image hold menu and text selection\n            specialHTML.styleSheet.textContent += '#themeArea.windowOpen > div > div { display: flex; } #themeArea.windowOpen > div > button { clip-path: circle(0); }'; //More Safari junk to make windows work without focus\n            (getId('file') as HTMLInputElement).accept = ''; //Accept for unknown reason not properly supported on phones\n\n            const arrowStage = document.createElement('button');\n            arrowStage.append(document.createElement('div'));\n            arrowStage.type = 'button';\n            const arrowReset1 = document.createElement('button');\n            arrowReset1.append(document.createElement('div'));\n            arrowReset1.type = 'button';\n            getId('resetStage').append(arrowStage);\n            arrowStage.addEventListener('click', () => getId('resetStage').classList.toggle('open'));\n            arrowStage.addEventListener('blur', () => getId('resetStage').classList.remove('open'));\n            getId('reset1Main').append(arrowReset1);\n            arrowReset1.addEventListener('click', () => getId('reset1Main').classList.toggle('open'));\n            arrowReset1.addEventListener('blur', () => getId('reset1Main').classList.remove('open'));\n            specialHTML.styleSheet.textContent += '#resets { row-gap: 1em; } #resets > section { position: relative; flex-direction: row; justify-content: center; width: unset; padding: unset; row-gap: unset; background-color: unset; border: unset; } #resets > section:not(.open) > p { display: none !important; }';\n            specialHTML.styleSheet.textContent += '#resets > section > button:last-of-type { width: 2.2em !important; margin-left: -2px; } #resets button > div { clip-path: polygon(0 0, 50% 100%, 100% 0, 50% 25%); width: 1.24em; height: 1.24em; background-color: var(--main-text); pointer-events: none; margin: auto; } #resets p { position: absolute; width: 17.4em; padding: 0.5em 0.6em 0.6em; background-color: var(--window-color); border: 2px solid var(--window-border); top: calc(100% - 2px); z-index: 1; box-sizing: content-box; }';\n\n            const structuresButton = document.createElement('button');\n            structuresButton.textContent = 'Structures';\n            structuresButton.id = 'structuresFooter';\n            structuresButton.type = 'button';\n            const stageButton = document.createElement('button');\n            stageButton.textContent = 'Stage';\n            stageButton.id = 'stageFooter';\n            stageButton.type = 'button';\n            const reset1Button = document.createElement('button');\n            reset1Button.id = 'reset1Footer';\n            reset1Button.type = 'button';\n            const resetCollapse = document.createElement('button');\n            resetCollapse.textContent = 'Collapse';\n            resetCollapse.id = 'resetCollapseFooter';\n            resetCollapse.type = 'button';\n            resetCollapse.className = 'stage5Only';\n            const resetGalaxy = document.createElement('button');\n            resetGalaxy.textContent = 'Galaxy';\n            resetGalaxy.id = 'resetGalaxyFooter';\n            resetGalaxy.type = 'button';\n            resetGalaxy.className = 'stage4Only';\n            getId('phoneHotkeys').prepend(resetGalaxy, reset1Button, resetCollapse, stageButton, structuresButton);\n\n            const createUpgButton = document.createElement('button');\n            createUpgButton.className = 'hollowButton';\n            createUpgButton.textContent = 'Create';\n            createUpgButton.id = 'upgradeCreate';\n            createUpgButton.type = 'button';\n            getId('toggleHover0').after(createUpgButton);\n\n            const createInfButton = document.createElement('button');\n            createInfButton.className = 'hollowButton';\n            createInfButton.textContent = 'Activate';\n            createInfButton.id = 'inflationActivate';\n            createInfButton.type = 'button';\n            getId('inflationRefund').before(createInfButton);\n\n            const pages = document.createElement('div');\n            pages.id = 'strangenessPages';\n            pages.innerHTML = '<button type=\"button\" id=\"strangenessPage1\" class=\"stage1borderImage hollowButton\">1</button><button type=\"button\" id=\"strangenessPage2\" class=\"stage2borderImage hollowButton\">2</button><button type=\"button\" id=\"strangenessPage3\" class=\"stage3borderImage hollowButton\">3</button><button type=\"button\" id=\"strangenessPage4\" class=\"stage4borderImage hollowButton\">4</button><button type=\"button\" id=\"strangenessPage5\" class=\"stage5borderImage hollowButton\">5</button><button type=\"button\" id=\"strangenessCreate\" class=\"hollowButton\">Create</button>';\n            specialHTML.styleSheet.textContent += '#strangenessPages { display: flex; justify-content: center; column-gap: 0.3em; } #strangenessPages button { width: 2.08em; height: calc(2.08em - 2px); border-top: none; border-radius: 0 0 4px 4px; } #strangenessCreate { width: unset !important; padding: 0 0.4em; }';\n            getId('strangenessResearch').append(pages);\n\n            const mainLi = getId('MDLi');\n            const MDToggle1 = document.createElement('li');\n            MDToggle1.innerHTML = '<label>Keep mouse events<button type=\"button\" id=\"MDToggle1\" class=\"specialToggle\">OFF</button></label>';\n            mainLi.after(MDToggle1);\n            const refreshButton = document.createElement('button');\n            refreshButton.className = 'hollowButton';\n            refreshButton.textContent = 'Reload';\n            refreshButton.type = 'button';\n            mainLi.append(refreshButton);\n            refreshButton.addEventListener('click', async() => {\n                if (await Confirm('Reload page?\\n(Game will not autosave)')) { window.location.reload(); }\n            });\n\n            getId('MDToggle1').addEventListener('click', () => toggleSpecial(1, 'mobile', true, true));\n            for (let i = 0; i < globalSaveStart.MDSettings.length; i++) { toggleSpecial(i, 'mobile'); }\n        }\n        if (globalSave.SRSettings[0]) {\n            const message = getId('SRMessage1');\n            message.textContent = 'Screen reader support is enabled, disable it if its not required';\n            message.className = 'greenText';\n            message.ariaHidden = 'true';\n            for (let i = 0; i <= 3; i++) {\n                const effectID = getQuery(`#${i === 0 ? 'solarMass' : `star${i}`}Effect > span:last-of-type`);\n                effectID.textContent = ` (${effectID.textContent})`;\n                effectID.classList.remove('greenText');\n            }\n            for (let i = 1; i <= 1; i++) {\n                const effectID = getQuery(`#merge${i}Effect > span:last-of-type`);\n                effectID.textContent = ` (${effectID.textContent})`;\n                effectID.classList.remove('greenText');\n            }\n\n            const SRMainDiv = document.createElement('article');\n            SRMainDiv.innerHTML = '<h5>Information for Screen reader</h5><p id=\"SRTab\" aria-live=\"polite\"></p><p id=\"SRStage\" aria-live=\"polite\"></p><p id=\"SRMain\" aria-live=\"assertive\"></p>';\n            SRMainDiv.className = 'reader';\n            getId('fakeFooter').before(SRMainDiv);\n\n            const SRToggle1 = document.createElement('li');\n            SRToggle1.innerHTML = '<label>Keep tab index on created Upgrades<button type=\"button\" id=\"SRToggle1\" class=\"specialToggle\">OFF</button></label>';\n            const SRToggle2 = document.createElement('li');\n            SRToggle2.innerHTML = '<label>Keep tab index on primary buttons<button type=\"button\" id=\"SRToggle2\" class=\"specialToggle\">OFF</button></label>';\n            getId('SRLi').after(SRToggle1, SRToggle2);\n\n            getId('SRToggle1').addEventListener('click', () => {\n                toggleSpecial(1, 'reader', true);\n                const active = player.stage.active;\n                for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n                for (let i = 0; i < global.researchesInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researches'); }\n                for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researchesExtra'); }\n                for (let i = 0; i < playerStart.researchesAuto.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n                visualUpdateResearches(0, active, 'ASR');\n                for (let i = 0; i < playerStart.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n                for (let s = 1; s < playerStart.strangeness.length; s++) {\n                    for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                        visualUpdateResearches(i, s, 'strangeness');\n                    }\n                }\n                visualUpdateInflation();\n            });\n\n            const primaryIndex = (reload = false) => {\n                if (!reload) { toggleSpecial(2, 'reader', true); }\n                const newTab = globalSave.SRSettings[2] ? 0 : -1;\n                getId('stageReset').tabIndex = newTab;\n                getId('reset1Button').tabIndex = newTab;\n                for (let i = 1; i < specialHTML.longestBuilding; i++) {\n                    getId(`building${i}Btn`).tabIndex = newTab;\n                    getId(`toggleBuilding${i}`).tabIndex = newTab;\n                }\n                getId('toggleBuilding0').tabIndex = newTab;\n                for (const tabText of global.tabList.tabs) {\n                    getId(`${tabText}TabBtn`).tabIndex = newTab;\n                    for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n                        getId(`${tabText}SubtabBtn${subtabText}`).tabIndex = newTab;\n                    }\n                }\n                for (let i = 1; i < global.stageInfo.word.length; i++) {\n                    getId(`stageSwitch${i}`).tabIndex = newTab;\n                }\n            };\n            getId('SRToggle2').addEventListener('click', () => { primaryIndex(); });\n\n            if (globalSave.SRSettings[2]) { primaryIndex(true); }\n            for (let i = 0; i < globalSaveStart.SRSettings.length; i++) { toggleSpecial(i, 'reader'); }\n            specialHTML.styleSheet.textContent += '#starEffects > p > span, #mergeEffects > p > span { display: unset !important; }';\n        } else {\n            const index = globalSave.toggles[0] ? 0 : 1;\n            const list = [globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index], globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index]];\n            for (let i = 0; i < list.length; i++) {\n                if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n            }\n            getQuery('#SRMessage1 span').textContent = `${list[0]} and ${list[1]}`;\n            getQuery('#SRMessage1 span:last-of-type').textContent = `${list[2]} and ${list[3]}`;\n        }\n    }\n\n    let oldVersion = player.version;\n    const save = localStorage.getItem('testing_save');\n    if (save !== null) {\n        oldVersion = updatePlayer(JSON.parse(atob(save)));\n    } else {\n        prepareVacuum(false); //Set buildings values\n        updatePlayer(deepClone(playerStart));\n    }\n\n    /* Global */\n    assignHotkeys();\n    const MD = globalSave.MDSettings[0];\n    const SR = globalSave.SRSettings[0];\n    const PC = !MD || globalSave.MDSettings[1];\n    body.addEventListener('keydown', (key: KeyboardEvent) => detectHotkey(key));\n    const releaseHotkey = (event: KeyboardEvent | MouseEvent) => {\n        if (global.hotkeys.shift && !event.shiftKey) { global.hotkeys.shift = false; }\n        if (global.hotkeys.ctrl && !event.ctrlKey) { global.hotkeys.ctrl = false; }\n    };\n    body.addEventListener('keyup', releaseHotkey, { passive: true });\n    body.addEventListener('contextmenu', (event) => {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType !== 'text' && activeType !== 'number' && !globalSave.developerMode) { event.preventDefault(); }\n    });\n    if (PC) {\n        body.addEventListener('mouseup', (event) => {\n            cancelRepeat();\n            releaseHotkey(event);\n        }, { passive: true });\n        body.addEventListener('mouseleave', cancelRepeat, { passive: true });\n    }\n    if (MD) {\n        body.addEventListener('touchstart', (event) => {\n            specialHTML.mobileDevice.start = [event.touches[0].clientX, event.touches[0].clientY];\n        }, { passive: true });\n        body.addEventListener('touchend', (event) => {\n            cancelRepeat();\n            handleTouchHotkeys(event);\n        }, { passive: true });\n        body.addEventListener('touchcancel', cancelRepeat, { passive: true });\n    }\n\n    /* Toggles */\n    for (let i = 0; i < globalSaveStart.toggles.length; i++) {\n        getId(`globalToggle${i}`).addEventListener('click', () => {\n            toggleSpecial(i, 'global', true, i === 1 || i === 3);\n            if (i === 0) {\n                assignHotkeys();\n                const index = globalSave.toggles[0] ? 0 : 1;\n                for (const key in globalSaveStart.hotkeys) {\n                    const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n                    getQuery(`#${key}Hotkey > button`).textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n                }\n            } else if (i === 2) {\n                body.classList[globalSave.toggles[2] ? 'remove' : 'add']('noTextSelection');\n            }\n        });\n    }\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggleNormal${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) {\n        getId(`toggleConfirm${i}`).addEventListener('click', () => toggleConfirm(i, true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) {\n        getId(`toggleHover${i}`).addEventListener('click', () => toggleSwap(i, 'hover', true));\n    }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) {\n        getId(`toggleMax${i}`).addEventListener('click', () => toggleSwap(i, 'max', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => {\n            toggleSwap(i, 'auto', true);\n            if (i === 5) {\n                for (let s = 1; s <= 6; s++) { autoUpgradesSet(s); }\n            } else if (i === 6) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researches', s); }\n            } else if (i === 7) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researchesExtra', s); }\n            } else if (i === 8) {\n                autoElementsSet();\n            }\n        });\n    }\n\n    /* Stage tab */\n    {\n        const clickHoldFunc = () => {\n            if (player.inflation.vacuum || player.stage.active >= 4) { return; }\n            void stageResetUser();\n        };\n        const stageButton = getId('stageReset');\n        stageButton.addEventListener('click', stageResetUser);\n        if (PC) { stageButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            stageButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('stageFooter');\n            footerButton.addEventListener('click', stageResetUser);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        }\n    }\n    {\n        const clickFunc = () => {\n            const active = player.stage.active;\n            if (active === 1) {\n                void dischargeResetUser();\n            } else if (active === 2) {\n                void vaporizationResetUser();\n            } else if (active === 3) {\n                void rankResetUser();\n            } else if (active === 4) {\n                void collapseResetUser();\n            } else if (active === 5) {\n                void mergeResetUser();\n            }\n        };\n        const clickHoldFunc = () => {\n            if (player.stage.active !== 1 && player.stage.active !== 3) { return; }\n            clickFunc();\n        };\n        const resetButton = getId('reset1Button');\n        resetButton.addEventListener('click', clickFunc);\n        if (PC) { resetButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            resetButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('reset1Footer');\n            footerButton.addEventListener('click', clickFunc);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n            getId('resetCollapseFooter').addEventListener('click', collapseResetUser);\n\n            const clickGalaxy = () => buyBuilding(3, 5);\n            const galaxyButton = getId('resetGalaxyFooter');\n            galaxyButton.addEventListener('click', clickGalaxy);\n            galaxyButton.addEventListener('touchstart', () => repeatFunction(clickGalaxy));\n            if (PC) { galaxyButton.addEventListener('mousedown', () => repeatFunction(clickGalaxy)); }\n        }\n    }\n    const getMakeCount = () => global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : undefined;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        const button = getId(`building${i}Btn`);\n        const clickFunc = () => buyBuilding(i, player.stage.active, getMakeCount());\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n        if (MD) { button.addEventListener('touchstart', () => repeatFunction(clickFunc)); }\n    }\n    {\n        const button = getId('makeAllStructures');\n        button.addEventListener('click', buyAll);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        if (MD) {\n            button.addEventListener('touchstart', () => repeatFunction(buyAll));\n            const footer = getId('structuresFooter');\n            footer.addEventListener('click', buyAll);\n            footer.addEventListener('touchstart', () => repeatFunction(buyAll));\n            if (PC) { footer.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        }\n    }\n    getId('buyAnyInput').addEventListener('change', () => {\n        const input = getId('buyAnyInput') as HTMLInputElement;\n        player.toggles.shop.input = Math.max(Math.trunc(Number(input.value)), 0);\n        input.value = format(player.toggles.shop.input, { type: 'input' });\n        numbersUpdate();\n    });\n    getId('autoWaitInput').addEventListener('change', () => {\n        const input = getId('autoWaitInput') as HTMLInputElement;\n        let value = Math.max(Number(input.value), 1);\n        if (isNaN(value)) { value = 2; }\n        player.toggles.shop.wait[player.stage.active] = value;\n        input.value = format(value, { type: 'input' });\n    });\n\n    for (let i = 0; i < global.challengesInfo.name.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (PC) { image.addEventListener('mouseover', () => hoverChallenge(i)); }\n        if (MD) { image.addEventListener('touchstart', () => hoverChallenge(i)); }\n        if (SR) { image.addEventListener('focus', () => hoverChallenge(i)); }\n        image.addEventListener('click', () => { enterExitChallengeUser(i); });\n    }\n    getId('superVoidToggle').addEventListener('click', () => { toggleSuperVoid(true); });\n    {\n        const close = () => {\n            getId('voidRewardsDiv').style.display = '';\n            global.lastChallenge[1] = null;\n        };\n        for (let i = 1; i < global.challengesInfo.rewardText[0].length; i++) {\n            const image = getId(`voidReward${i}`);\n            image.addEventListener('click', () => {\n                global.lastChallenge[1] = i;\n                getChallengeReward(i);\n                getId('voidRewardsDiv').style.display = 'block';\n            });\n            image.addEventListener('blur', close);\n        }\n        if (MD) { getId('voidRewardsDiv').addEventListener('click', close); }\n    }\n\n    /* Upgrade tab */\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        const hoverFunc = () => hoverUpgrades(i, 'upgrades');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'upgrades');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researches');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researches');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesExtra');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesExtra');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) {\n        const image = getId(`researchAuto${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesAuto');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesAuto');\n            image.addEventListener('click', () => {\n                if (handleAutoSwitch(i)) { return; }\n                clickFunc();\n            });\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    {\n        const image = getId('ASRImage');\n        const hoverFunc = () => hoverUpgrades(0, 'ASR');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(0, player.stage.active, 'ASR');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    if (MD) {\n        const button = getId('upgradeCreate');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            const last = global.lastUpgrade[active];\n            if (last[0] !== null) {\n                if (handleAutoSwitch(last[0], last[1])) { return; }\n                buyUpgrades(last[0], active, last[1]);\n            }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    {\n        const button = getId('element0');\n        const dblclickFunc = () => {\n            global.lastElement = 0;\n            getUpgradeDescription(0, 'elements');\n        };\n        if (SR) {\n            getId('element1').addEventListener('keydown', (event) => {\n                if (event.code !== 'Tab' || !event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) { return; }\n                const element = getId('element0');\n                element.tabIndex = 0;\n                element.ariaHidden = 'false';\n            });\n            button.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter' && !event.metaKey && !event.ctrlKey && !event.shiftKey && !event.altKey) { dblclickFunc(); }\n            });\n            button.addEventListener('blur', () => {\n                const element = getId('element0');\n                element.tabIndex = -1;\n                element.ariaHidden = 'true';\n            });\n        }\n        if (PC) { button.addEventListener('dblclick', dblclickFunc); }\n        if (MD) {\n            button.addEventListener('touchstart', () => {\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(dblclickFunc, 3000);\n            });\n        }\n    }\n    for (let i = 1; i < playerStart.elements.length; i++) {\n        const image = getId(`element${i}`);\n        const clickFunc = () => buyUpgrades(i, 4, 'elements');\n        if (PC) {\n            image.addEventListener('mouseover', () => hoverUpgrades(i, 'elements'));\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (MD) {\n            image.addEventListener('touchstart', () => {\n                hoverUpgrades(i, 'elements');\n                repeatFunction(clickFunc);\n            });\n        }\n        if (SR) { image.addEventListener('focus', () => hoverUpgrades(i, 'elements')); }\n        if (!MD || SR) { image.addEventListener('click', clickFunc); }\n    }\n\n    /* Strangeness tab */\n    for (let i = 0; i < 2; i++) {\n        const strange = getId(`strange${i}`);\n        const openFunction = () => {\n            if (i === 0 && !player.inflation.vacuum && player.milestones[4][0] < 8) { return; }\n            getId(`strange${i}EffectsMain`).style.display = '';\n            numbersUpdate();\n        };\n        const closeFunc = () => (getId(`strange${i}EffectsMain`).style.display = 'none');\n        strange.addEventListener('click', openFunction, { capture: true }); //Clicking on window does unnessary call, before closing\n        if (SR) { strange.addEventListener('focus', openFunction); }\n        strange.addEventListener('blur', closeFunc);\n        getId(`strange${i}EffectsMain`).addEventListener('click', closeFunc);\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        if (MD) { getId(`strangenessPage${s}`).addEventListener('click', () => MDStrangenessPage(s)); }\n        for (let i = 0; i < playerStart.strangeness[s].length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'strangeness');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) {\n                image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n            } else {\n                const clickFunc = () => buyStrangeness(i, s, 'strangeness');\n                image.addEventListener('click', clickFunc);\n                image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            }\n            if (SR) { image.addEventListener('focus', hoverFunc); }\n        }\n    }\n    if (MD) {\n        const button = getId('strangenessCreate');\n        const clickFunc = () => {\n            const last = global.lastStrangeness;\n            if (last[0] !== null) { buyStrangeness(last[0], last[1], 'strangeness'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > img`);\n            if (PC) { image.addEventListener('mouseover', () => hoverStrangeness(i, s, 'milestones')); }\n            if (MD) { image.addEventListener('touchstart', () => hoverStrangeness(i, s, 'milestones')); }\n            if (SR) {\n                image.tabIndex = 0;\n                image.classList.add('noFocusOutline');\n                image.addEventListener('focus', () => hoverStrangeness(i, s, 'milestones'));\n            }\n        }\n    }\n\n    /* Inflation tab */\n    for (let i = 0; i < playerStart.inflation.tree.length; i++) {\n        const image = getId(`inflation${i + 1}`);\n        const hoverFunc = () => hoverUpgrades(i, 'inflation');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n        } else {\n            const clickFunc = () => buyStrangeness(i, 0, 'inflation');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (SR) { image.addEventListener('focus', hoverFunc); }\n    }\n    getId('inflationRefund').addEventListener('click', inflationRefund);\n    if (MD) {\n        const button = getId('inflationActivate');\n        const clickFunc = () => {\n            if (global.lastInflation !== null) { buyStrangeness(global.lastInflation, 0, 'inflation'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('change', () => {\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        player.vaporization.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[0], { type: 'input' });\n    });\n    getId('vaporizationInputMax').addEventListener('change', () => {\n        const input = getId('vaporizationInputMax') as HTMLInputElement;\n        player.vaporization.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[1], { type: 'input' });\n    });\n    getId('collapseInput').addEventListener('change', () => {\n        const input = getId('collapseInput') as HTMLInputElement;\n        player.collapse.input[0] = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input[0], { type: 'input' });\n    });\n    getId('collapseInputWait').addEventListener('change', () => {\n        const input = getId('collapseInputWait') as HTMLInputElement;\n        player.collapse.input[1] = Number(input.value);\n        input.value = format(player.collapse.input[1], { type: 'input' });\n    });\n    getId('collapseAddNewPoint').addEventListener('change', () => {\n        const input = getId('collapseAddNewPoint') as HTMLInputElement;\n        const value = Number(input.value);\n        const points = player.collapse.points;\n        if (isFinite(value)) {\n            if (value === 0) {\n                points.length = 0;\n            } else if (value > 0) {\n                if (!points.includes(value)) {\n                    points.push(value);\n                    points.sort((a, b) => a - b);\n                }\n            } else {\n                const index = points.indexOf(Math.abs(value));\n                if (index >= 0) {\n                    points.splice(index, 1);\n                    points.sort((a, b) => a - b);\n                }\n            }\n        }\n        input.value = '';\n        global.collapseInfo.pointsLoop = 0;\n        updateCollapsePointsText();\n    });\n    getId('stageInput').addEventListener('change', () => {\n        const input = getId('stageInput') as HTMLInputElement;\n        player.stage.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[0], { type: 'input' });\n    });\n    getId('stageInputTime').addEventListener('change', () => {\n        const input = getId('stageInputTime') as HTMLInputElement;\n        player.stage.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[1], { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', getVersionInfoHTML);\n    getId('hotkeysButton').addEventListener('click', getHotkeysHTML);\n    getId('save').addEventListener('click', () => { saveGame(); });\n    getId('file').addEventListener('change', async() => {\n        const id = getId('file') as HTMLInputElement;\n        try {\n            loadGame(await (id.files as FileList)[0].text());\n        } finally { id.value = ''; }\n    });\n    getId('export').addEventListener('click', exportFileGame);\n    getId('saveConsole').addEventListener('click', saveConsole);\n    if (MD) {\n        getId('currentTheme').addEventListener('click', () => getId('themeArea').classList.add('windowOpen'));\n        getId('themeArea').addEventListener('mouseleave', () => getId('themeArea').classList.remove('windowOpen'));\n    }\n    getId('switchTheme0').addEventListener('click', () => setTheme(null));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('saveFileNameInput').addEventListener('change', () => {\n        const input = getId('saveFileNameInput') as HTMLInputElement;\n        const testValue = input.value;\n        if (testValue.length < 1) { return void (input.value = playerStart.fileName); }\n\n        try {\n            btoa(String.fromCharCode(...new TextEncoder().encode(testValue))); //Test for any illegal characters\n            player.fileName = testValue;\n        } catch (error) {\n            void Alert(`Save file name is not allowed\\n${error}`);\n        }\n    });\n    {\n        const button = getId('saveFileHoverButton');\n        const hoverFunc = () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials());\n        button.addEventListener('mouseover', hoverFunc);\n        if (SR) { button.addEventListener('focus', hoverFunc); }\n    }\n    getId('mainInterval').addEventListener('change', () => {\n        const input = getId('mainInterval') as HTMLInputElement;\n        globalSave.intervals.main = Math.min(Math.max(Math.trunc(Number(input.value)), 20), 200);\n        if (globalSave.intervals.offline < globalSave.intervals.main * 2) {\n            globalSave.intervals.offline = globalSave.intervals.main * 2;\n            (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n        }\n        input.value = `${globalSave.intervals.main}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('offlineInterval').addEventListener('change', () => {\n        const input = getId('offlineInterval') as HTMLInputElement;\n        globalSave.intervals.offline = Math.min(Math.max(Math.trunc(Number(input.value)), globalSave.intervals.main * 2), 6000);\n        input.value = `${globalSave.intervals.offline}`;\n        saveGlobalSettings();\n    });\n    getId('numbersInterval').addEventListener('change', () => {\n        const input = getId('numbersInterval') as HTMLInputElement;\n        globalSave.intervals.numbers = Math.min(Math.max(Math.trunc(Number(input.value)), 40), 200);\n        input.value = `${globalSave.intervals.numbers}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('change', () => {\n        const input = getId('visualInterval') as HTMLInputElement;\n        globalSave.intervals.visual = Math.min(Math.max(Math.trunc(Number(input.value)), 200), 2000);\n        input.value = `${globalSave.intervals.visual}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('change', () => {\n        const input = getId('autoSaveInterval') as HTMLInputElement;\n        globalSave.intervals.autoSave = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 1800) * 1000;\n        input.value = `${globalSave.intervals.autoSave / 1000}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('change', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('change', () => changeFormat(true));\n    getId('MDToggle0').addEventListener('click', () => toggleSpecial(0, 'mobile', true, true));\n    getId('SRToggle0').addEventListener('click', () => toggleSpecial(0, 'reader', true, true));\n    getId('pauseButton').addEventListener('click', pauseGameUser);\n    getId('reviewEvents').addEventListener('click', replayEvent);\n    getId('customFontSize').addEventListener('change', () => changeFontSize());\n\n    getId('stageHistorySave').addEventListener('change', () => {\n        const inputID = getId('stageHistorySave') as HTMLInputElement;\n        player.history.stage.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.stage.input[0]}`;\n    });\n    getId('stageHistoryShow').addEventListener('change', () => {\n        const input = getId('stageHistoryShow') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 100);\n        input.value = `${player.history.stage.input[1]}`;\n        global.debug.historyStage = null;\n        visualUpdate();\n    });\n    getId('vacuumHistorySave').addEventListener('change', () => {\n        const inputID = getId('vacuumHistorySave') as HTMLInputElement;\n        player.history.vacuum.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.vacuum.input[0]}`;\n    });\n    getId('vacuumHistoryShow').addEventListener('change', () => {\n        const input = getId('vacuumHistoryShow') as HTMLInputElement;\n        player.history.vacuum.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 100);\n        input.value = `${player.history.vacuum.input[1]}`;\n        global.debug.historyVacuum = null;\n        visualUpdate();\n    });\n\n    /* Footer */\n    if (!globalSave.toggles[3]) {\n        const toggle = getId('hideToggle');\n        if (MD) {\n            const timeoutFunc = () => {\n                if (!global.footer) { return hideFooter(); }\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(hideFooter, 400);\n            };\n            toggle.addEventListener('touchstart', timeoutFunc);\n            if (PC) { toggle.addEventListener('mousedown', timeoutFunc); }\n        } else { toggle.addEventListener('click', hideFooter); }\n    }\n    for (const tabText of global.tabList.tabs) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`stageSwitch${i}`).addEventListener('click', () => switchStage(i));\n    }\n\n    /* Post */\n    document.head.append(specialHTML.styleSheet);\n    stageUpdate();\n    if (globalSave.theme !== null) { setTheme(); }\n    getId('currentTheme').textContent = globalSave.theme === null ? 'Default' : global.stageInfo.word[globalSave.theme];\n    if (save !== null) {\n        global.lastSave = handleOfflineTime();\n        Notify(`Welcome back, you were away for ${format(global.lastSave, { type: 'time', padding: false })}${oldVersion !== player.version ? `\\nGame has been updated from ${oldVersion} to ${player.version}` : ''}${globalSave.developerMode ?\n            `\\nGame loaded after ${format((Date.now() - playerStart.time.started) / 1000, { type: 'time', padding: false })}` : ''}\n        `);\n        void simulateOffline(global.lastSave);\n    } else {\n        pauseGame(false);\n    }\n    getId('body').style.display = '';\n    getId('loading').style.display = 'none';\n    document.title = `Fundamental ${playerStart.version}`;\n} catch (error) {\n    const stack = (error as { stack: string }).stack;\n    void Alert(`Game failed to load\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 2);\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerHTML = '<button type=\"button\" id=\"exportError\" style=\"width: 7em;\">Export save</button><button type=\"button\" id=\"deleteError\" style=\"width: 7em;\">Delete save</button>';\n    buttonDiv.style.cssText = 'display: flex; column-gap: 0.6em; margin-top: 0.4em;';\n    getId('loading').append(buttonDiv);\n    let exported = false;\n    getId('exportError').addEventListener('click', () => {\n        exported = true;\n        const save = localStorage.getItem('testing_save');\n        if (save === null) { return void Alert('No save file detected'); }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = 'Fundamental post error export';\n        a.click();\n    });\n    getId('deleteError').addEventListener('click', async() => {\n        if (!exported && !await Confirm(\"Recommended to export save file first\\nPress 'Confirm' to confirm and delete your save file\")) { return; }\n        localStorage.removeItem('testing_save');\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    });\n    throw error;\n}\n"],
  "mappings": "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",
  "names": ["checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "autoStage", "allowedToBeReset", "check", "milestoneGetValue", "stars", "Overlimit", "milestoneCheck", "pointer", "reset", "type", "stageIndex", "dischargeInfo", "global", "energyStage", "energyType", "buildings", "discharge", "player", "elements", "i", "playerStart", "allowedToBeReset", "visualUpdateUpgrades", "autoElementsSet", "energyRefund", "s", "assignSubmergedLevels", "building", "energy", "upgrades", "autoUpgradesSet", "researches", "visualUpdateResearches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "setRemnants", "deficit", "max", "assignPuddles", "assignBuildingsProduction", "resetStage", "update", "full", "buildingResetValue", "cloneArray", "strangeness", "researchesAuto", "calculateMaxLevel", "switchTab", "checkTab", "stageUpdate", "active", "resetVacuum", "activeMilestone", "assignMilestoneInformation", "start", "assignStrangeInfo", "assignMaxRank", "assignTrueEnergy", "cloneBeforeReset", "depth", "clone", "loadFromClone", "buildingsClone", "trueStars", "prepareVacuum", "state", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "star3ExpId", "getQuery", "buildingsActive", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "getId", "specialHTML", "milestone1S1", "milestone1S2", "milestone2S2", "milestone1S4", "s", "i", "stateId", "color", "globalSave", "newValue", "switchVacuum", "player", "income", "playEvent", "history", "storage", "realTime", "setActiveStage", "visualUpdateInflation", "visualTrueStageUnlocks", "resetVacuum", "timeUpdate", "timeWarp", "tick", "globalSave", "time", "ASR", "player", "auto", "autoBuy", "maxActive", "global", "autoU", "autoR", "autoE", "activeAll", "vacuum", "passedSeconds", "extraTime", "currentTime", "simulateOffline", "trueSeconds", "assignGlobalSpeed", "exitChallengeAuto", "stageResetCheck", "assignBuildingsProduction", "gainBuildings", "autoUpgradesBuy", "autoResearchesBuy", "i", "buyBuilding", "research", "autoElementsBuy", "awardMilestone", "collapseResetCheck", "rankResetCheck", "assignSharedHardcapDelays", "assignDustHardcap", "assignSolarMassHardcap", "vaporizationResetCheck", "dischargeResetCheck", "calculateEffects", "Overlimit", "multiplier", "noHardcap", "production", "structure", "multiplierList", "preonsExcess", "selfPreons", "laterPreons", "assignPreonsHardcap", "index", "b5", "excess", "productions", "structures", "info", "rain", "flow", "researchesS3", "upgradesS3", "clustersNumber", "level", "milestones", "galaxies", "base", "current", "calculateMassGain", "effect", "assignSubmergedLevels", "reset", "totalDrops", "logAny", "energy", "preons", "discharges", "post", "puddles", "maxTrue", "drops", "rank", "power", "mass", "stars", "blackHoles", "disc", "levels", "transfer", "effective", "interstellar", "type", "stageIndex", "howMany", "checkBuilding", "building", "currency", "free", "multi", "special", "budget", "total", "calculateBuildingsCost", "afford", "scaling", "addEnergy", "assignPuddles", "numbersUpdate", "getId", "format", "calculateMaxLevel", "awardVoidReward", "setActiveStage", "realTime", "income", "start", "prepareVacuum", "visualUpdateInflation", "visualTrueStageUnlocks", "resetVacuum", "history", "storage", "increase", "stage", "discharge", "dischargeInfo", "add", "firstCost", "buildings", "upgrades", "water5", "water4", "water3", "water2", "get", "stageGet", "Notify", "assignStrangeInfo", "stageBoost", "strangeQuarks", "information", "strangelets", "gainStrange", "strange", "speed", "buyUpgrades", "upgrade", "checkUpgrade", "pointer", "cost", "switchTab", "newLevels", "simplify", "update", "stageUpdate", "setRemnants", "playerStart", "old", "visualUpdateUpgrades", "calculateResearchCost", "visualUpdateResearches", "buyStrangeness", "assignTrueEnergy", "assignMaxRank", "assignChallengeInformation", "s", "assignMilestoneInformation", "inflationRefund", "tree", "cosmon", "challenge", "Confirm", "challengeReset", "stageFullReset", "addAuto", "max", "autoResearchesAddOne", "autoUpgradesSet", "which", "array", "a", "b", "autoResearchesSet", "newIndex", "sort", "bought", "autoElementsSet", "elements", "toggleSwap", "number", "change", "toggles", "maxLength", "anyOn", "extraText", "toggleHTML", "toggleConfirm", "assignQuarksGain", "quarks", "allowedChallenge", "peakCheck", "stageResetReward", "stageResetUser", "active", "errorText", "assignMergeReward", "universeCost", "calculateMergeMaxResets", "galaxyCost", "message", "fullReset", "resetThese", "playEvent", "check", "exportReward", "resetStage", "switchStage", "visualUpdate", "assignDischargeCost", "scale", "energyType", "energyTrue", "value", "goals", "dischargeReset", "dischargeResetUser", "noReset", "assignNewClouds", "softcap", "clouds", "vaporizationReset", "vaporization", "rainNow", "rainAfter", "storm", "vaporizationResetUser", "autoClouds", "rankReset", "rankResetUser", "massGain", "assignNewMass", "assignNewRemnants", "starCheck", "remnants", "collapse", "collapseReset", "timeUntil", "point", "massBoost", "calculateStar", "starProd", "restProd", "collapseResetUser", "unlockedG", "cantAffordG", "newStars", "newMass", "count", "collapseInfo", "mergeResetCheck", "mergeResetUser", "mergeReset", "checkReward", "switchVacuum", "percentage", "milestoneCheck", "toggleSuperVoid", "progress", "superVoid", "enterExitChallengeUser", "next", "resetType", "cloneBeforeReset", "loadFromClone", "switchTab", "tab", "subtab", "oldTab", "global", "getId", "inside", "subtabAmount", "checkTab", "globalSave", "oldSubtab", "active", "player", "setActiveStage", "stageUpdate", "switchStage", "visualUpdate", "numbersUpdate", "buildings", "vacuum", "challenge", "timeLimit", "s", "info", "i", "Notify", "format", "stars", "Overlimit", "buildingsInfo", "howMany", "trueCountID", "lockText", "costName", "currency", "free", "multi", "e", "extra", "buy", "cost", "calculateBuildingsCost", "scaling", "dischargeInfo", "getQuery", "assignBuildingsProduction", "calculateEffects", "rainNow", "rainAfter", "storm", "logAny", "collapseInfo", "starEffect", "total", "starProd", "restProd", "assignMergeReward", "mergeEffects", "remaining", "calculateMergeMaxResets", "stageResetCheck", "getChallengeDescription", "getChallengeReward", "trueSubtab", "getUpgradeDescription", "interstellar", "quarksGain", "information", "stageBoost", "strangeness", "getStrangenessDescription", "time", "milestoneGetValue", "exportReward", "conversion", "energyType", "clouds", "rain", "auto2", "mass", "star0", "star1", "star2", "gamma", "quasar", "base", "reward1", "highest", "playEvent", "showReset1", "ASR", "upgrades", "updateRankInfo", "nova", "progress", "superposition", "rank", "planetesimal", "galaxy", "nebula", "cluster", "neutron", "columns", "bound", "voidProgress", "milestones", "strange5", "firstTwo", "milestonesS4", "activated", "researchesAuto", "showAuto2", "showAuto4", "hotkeyTest", "updateStageHistory", "updateVacuumHistory", "anyUnlocked", "unlocked", "visualTrueStageUnlocks", "index", "type", "pointer", "stageIndex", "level", "newLevels", "simplify", "autoStage", "stageText", "text", "isActive", "multilineID", "container", "color", "need", "current", "best", "noTime", "textHTML", "visualUpdateUpgrades", "image", "visualUpdateResearches", "max", "upgradeHTML", "visualUpdateInflation", "check", "startCost", "tree", "keepIndex", "rankInfo", "name", "setRemnants", "whiteDwarf", "quarkStar", "text2", "list", "length", "input", "settings", "padding", "inputAbs", "minutes", "seconds", "hours", "days", "years", "digits", "result", "formated", "precision", "changed", "offline", "stageInfo", "activeAll", "element", "getClass", "stageWord", "currentID", "showAll", "specialHTML", "SRHotkeysInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "footerStatsHTML", "showU", "showR", "showRE", "showF", "buildingHTML", "buildingName", "buildingType", "buildingHoverText", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "body", "setTheme", "hotkeys", "hotkeyFunction", "buyAll", "event", "player", "stageResetUser", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "buyBuilding", "pauseGameUser", "toggleSwap", "mergeResetUser", "enterExitChallengeUser", "changeTab", "changeSubtab", "changeStage", "assignHotkeys", "key", "index", "globalSave", "hotkey", "SRHotkeysInfo", "removeHotkey", "remove", "test", "detectHotkey", "check", "activeType", "global", "code", "shiftKey", "specialHTML", "notification", "numberKey", "name", "functionTest", "direction", "tabs", "checkTab", "switchTab", "tab", "subtabs", "activeAll", "switchStage", "handleTouchHotkeys", "touches", "mainHTML", "change", "globalSave", "saveGlobalSettings", "noSaving", "hotkeysClone", "deepClone", "encoder", "key", "array", "i", "clone", "save", "toggleSpecial", "number", "type", "change", "reload", "toggles", "Confirm", "pauseGame", "Alert", "toggleHTML", "getId", "specialHTML", "preventImageUnload", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "setTheme", "theme", "player", "global", "upgradeTypes", "properties", "text", "body", "property", "priority", "resolve", "Notify", "blocker", "confirm", "oldFocus", "event", "code", "close", "cancel", "result", "yes", "Prompt", "placeholder", "input", "active", "notifications", "index", "count", "timeout", "html", "pointer", "instantClose", "remove", "hideFooter", "toggleData", "footerArea", "arrow", "animationReset", "getQuery", "visualUpdate", "numbersUpdate", "changeFontSize", "initial", "size", "adjustCSSRules", "styleSheet", "styleLength", "fontRatio", "rule1", "rule2", "changeFormat", "point", "htmlInput", "value", "SRHotkeysInfo", "short", "resetName", "resetHotkey", "list", "MDStrangenessPage", "stageIndex", "replayEvent", "last", "playEvent", "replay", "format", "assignMaxRank", "stageUpdate", "buildBigWindow", "getVersionInfoHTML", "mainHTML", "closeButton", "windowHMTL", "getHotkeysHTML", "toggle", "changeHotkey", "disableFirstUp", "prevent", "finish", "detect", "prefix", "globalSaveStart", "button", "hotkeyTest", "newHotkey", "removed", "removeHotkey", "assignHotkeys", "visualTrueStageUnlocks", "Overlimit", "_Overlimit", "number", "post", "technical", "newValue", "#privateSet", "numbers", "result", "i", "power", "root", "base", "replaceWith", "compare", "previous", "next", "after", "settings", "index", "digits", "left", "right", "check", "difference", "negative", "base10", "target", "tooSmall", "test", "type", "padding", "exponent", "mantissa", "powerMantissa", "formatedPower", "globalSave", "formatedBase", "formated", "player", "Overlimit", "global", "format", "calculateEffects", "selfPreons", "power", "newBase", "effect", "base", "now", "after", "logAny", "energy", "maxLevel", "trueLevel", "penalty", "level", "tension", "stress", "index", "stageIndex", "unlocked", "improved", "extraText", "progress", "text", "left", "number", "cloneArray", "array", "deepClone", "toClone", "value", "i", "check", "createArray", "length", "s", "upgradeType", "pointer", "playerStart", "updatePlayer", "load", "prepareVacuum", "oldVersion", "a", "oldB", "oldU", "oldR", "oldE", "building", "e", "clone", "c", "buildings", "universes", "assignMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "visualUpdateResearches", "extra", "extraMax", "researches", "researchesMax", "autoUpgradesSet", "autoResearchesSet", "getId", "calculateResearchCost", "autoElementsSet", "toggleSuperVoid", "assignSubmergedLevels", "assignStrangeInfo", "assignPuddles", "assignMaxRank", "assignTrueEnergy", "switchTab", "visualUpdateInflation", "visualTrueStageUnlocks", "visualUpdateUpgrades", "toggleSwap", "toggleConfirm", "updateCollapsePointsText", "getId", "id", "noError", "test", "specialHTML", "store", "global", "Notify", "getClass", "idCollection", "getQuery", "query", "handleOfflineTime", "time", "player", "timeNow", "offlineTime", "simulateOffline", "offline", "autoAccept", "globalSave", "pauseGame", "Confirm", "format", "accelerate", "offlineAccelerate", "offlineCancel", "offlineKey", "calculateOffline", "warpTime", "start", "rate", "timeUpdate", "error", "offlineEnd", "Alert", "stageUpdate", "visualUpdate", "numbersUpdate", "event", "code", "cancel", "changeIntervals", "intervalsId", "intervals", "paused", "saveGame", "pause", "pauseGameUser", "claim", "noSaving", "clone", "save", "stack", "loadGame", "versionCheck", "updatePlayer", "prepareVacuum", "exportFileGame", "awardExport", "a", "replaceSaveFileSpecials", "exportReward", "strange", "conversion", "quarks", "strangelets", "assignStrangeInfo", "saveConsole", "value", "Prompt", "lower", "saveGlobalSettings", "realName", "date", "dateIndex", "endIndex", "replaced", "special", "replaceWith", "i", "timeIndex", "repeatFunction", "repeat", "onceInstanly", "cancelRepeat", "hoverUpgrades", "index", "type", "buyUpgrades", "getUpgradeDescription", "hoverStrangeness", "stageIndex", "getStrangenessDescription", "hoverChallenge", "getChallengeDescription", "handleAutoSwitch", "checkUpgrade", "autoStage", "switchStage", "buyAll", "active", "buyBuilding", "updateCollapsePointsText", "pointsText", "points", "globalSaveStart", "deepClone", "preventImageUnload", "body", "globalSettings", "decoder", "key", "array", "c", "cloneArray", "toggleSpecial", "changeFontSize", "elementsArea", "elementsButton", "tabList", "arrowStage", "arrowReset1", "structuresButton", "stageButton", "reset1Button", "resetCollapse", "resetGalaxy", "createUpgButton", "createInfButton", "pages", "mainLi", "MDToggle1", "refreshButton", "message", "effectID", "SRMainDiv", "SRToggle1", "SRToggle2", "visualUpdateUpgrades", "visualUpdateResearches", "playerStart", "s", "visualUpdateInflation", "primaryIndex", "reload", "newTab", "tabText", "subtabText", "list", "oldVersion", "assignHotkeys", "MD", "SR", "PC", "detectHotkey", "releaseHotkey", "activeType", "handleTouchHotkeys", "hotkeyTest", "toggleSwap", "toggleConfirm", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "clickHoldFunc", "stageResetUser", "footerButton", "clickFunc", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "mergeResetUser", "resetButton", "clickGalaxy", "galaxyButton", "getMakeCount", "button", "footer", "input", "image", "enterExitChallengeUser", "toggleSuperVoid", "close", "getChallengeReward", "hoverFunc", "last", "dblclickFunc", "element", "openFunction", "closeFunc", "MDStrangenessPage", "buyStrangeness", "inflationRefund", "b", "getVersionInfoHTML", "getHotkeysHTML", "setTheme", "testValue", "changeFormat", "replayEvent", "inputID", "toggle", "timeoutFunc", "hideFooter", "switchTab", "buttonDiv", "exported"]
}
