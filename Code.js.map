{
  "version": 3,
  "sources": ["Source_TS/Limit.ts", "Source_TS/Check.ts", "Source_TS/Special.ts", "Source_TS/Vacuum.ts", "Source_TS/Update.ts", "Source_TS/Reset.ts", "Source_TS/Stage.ts", "Source_TS/Player.ts", "Source_TS/Hotkeys.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import { player } from './Player';\n\n/* This is version has all settings (and other stuff) removed (for better speed) */\nexport const overlimit = {\n    Limit: (number: string | number | [number, number]) => {\n        const { technical } = overlimit;\n        let result = technical.convert(number);\n\n        return {\n            plus: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.add(result, array[i]);\n                }\n\n                return this;\n            },\n            minus: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.sub(result, array[i]);\n                }\n\n                return this;\n            },\n            multiply: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.mult(result, array[i]);\n                }\n\n                return this;\n            },\n            divide: function(...numbers: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(numbers);\n\n                for (let i = 0; i < array.length; i++) {\n                    result = technical.div(result, array[i]);\n                }\n\n                return this;\n            },\n            power: function(power: number) {\n                result = technical.pow(result, power);\n                return this;\n            },\n            log: function(base = 2.718281828459045) {\n                result = technical.log(result, base);\n                return this;\n            },\n            abs: function() {\n                result[0] = Math.abs(result[0]);\n                return this;\n            },\n            trunc: function() {\n                result = technical.trunc(result);\n                return this;\n            },\n            floor: function() {\n                result = technical.floor(result);\n                return this;\n            },\n            ceil: function() {\n                result = technical.ceil(result);\n                return this;\n            },\n            round: function() {\n                result = technical.round(result);\n                return this;\n            },\n            isNaN: (): boolean => isNaN(result[0]) || isNaN(result[1]),\n            isFinite: (): boolean => isFinite(result[0]) && isFinite(result[1]),\n            lessThan: (compare: string | number | [number, number]): boolean => technical.less(result, technical.convert(compare)),\n            lessOrEqual: (compare: string | number | [number, number]): boolean => technical.lessOrEqual(result, technical.convert(compare)),\n            moreThan: (compare: string | number | [number, number]): boolean => technical.more(result, technical.convert(compare)),\n            moreOrEqual: (compare: string | number | [number, number]): boolean => technical.moreOrEqual(result, technical.convert(compare)),\n            notEqual: (compare: string | number | [number, number]): boolean => technical.notEqual(result, technical.convert(compare)),\n            equal: (...compare: Array<string | number | [number, number]>): boolean => {\n                const array = technical.convertAll(compare);\n\n                let allEqual = technical.equal(result, array[0]);\n                for (let i = 1; i < array.length; i++) {\n                    if (!allEqual) { return false; }\n                    allEqual = technical.equal(array[i - 1], array[i]);\n                }\n\n                return allEqual;\n            },\n            max: function(...compare: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.less(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            min: function(...compare: Array<string | number | [number, number]>) {\n                const array = technical.convertAll(compare);\n\n                for (let i = 0; i < array.length; i++) {\n                    if (isNaN(array[i][0])) {\n                        result = [NaN, NaN];\n                        break;\n                    }\n\n                    if (technical.more(result, array[i])) { result = array[i]; }\n                }\n\n                return this;\n            },\n            format: (settings = {} as { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => technical.format(result, settings),\n            toNumber: (): number => Number(technical.convertBack(result)),\n            toString: (): string => technical.convertBack(result),\n            toArray: (): [number, number] => technical.prepare(result)\n        };\n    },\n    LimitAlt: {\n        abs: (number: string): string => number[0] === '-' ? number.substring(1) : number,\n        isNaN: (number: string): boolean => number.includes('NaN'),\n        isFinite: (number: string): boolean => !number.includes('Infinity') && !number.includes('NaN'),\n        clone: (number: [number, number]): [number, number] => [number[0], number[1]],\n        /* Sort is WIP, need to figure out how to add easy to use return function instead of 'descend' (also maybe some optimization) */\n        sort: <sortType extends Array<string | number | [number, number]>>(toSort: sortType, descend = false) => {\n            if (toSort.length < 2) { return; }\n            const numbers = overlimit.technical.convertAll(toSort);\n            const compare = descend ? overlimit.technical.moreOrEqual : overlimit.technical.lessOrEqual;\n\n            let main: number[] | number[][] = [[0]];\n            initial:\n            for (let i = 1; i < numbers.length; i++) {\n                const target = main[main.length - 1];\n                if (compare(numbers[i - 1], numbers[i])) {\n                    do {\n                        target.push(i);\n                        i++;\n                        if (i >= numbers.length) { break initial; }\n                    } while (compare(numbers[i - 1], numbers[i]));\n                    main.push([i]);\n                } else {\n                    do {\n                        target.push(i);\n                        i++;\n                        if (i >= numbers.length) {\n                            target.reverse();\n                            break initial;\n                        }\n                    } while (compare(numbers[i], numbers[i - 1]));\n                    target.reverse();\n                    main.push([i]);\n                }\n            }\n\n            const merge = (array: number[][]): number[] | number[][] => {\n                if (array.length === 1) { return array[0]; }\n                let main: number[] | number[][] = [] as number[][];\n\n                let i;\n                for (i = 0; i < array.length - 1; i += 2) {\n                    main.push([]);\n                    const target = main[main.length - 1];\n                    const first = array[i];\n                    const second = array[i + 1];\n                    let f = 0;\n                    let s = 0;\n                    while (f < first.length || s < second.length) {\n                        if (s >= second.length || (f < first.length && compare(numbers[first[f]], numbers[second[s]]))) {\n                            target.push(first[f]);\n                            f++;\n                        } else {\n                            target.push(second[s]);\n                            s++;\n                        }\n                    }\n                }\n                if (i === array.length - 1) { main.push(array[i]); }\n\n                main = merge(main);\n                return main;\n            };\n            main = merge(main) as number[];\n\n            const clone = toSort.slice(0);\n            toSort.length = 0;\n            for (let i = 0; i < clone.length; i++) {\n                toSort.push(clone[main[i]]);\n            }\n        }\n    },\n    technical: {\n        add: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return left; }\n            if (left[0] === 0) { return right; }\n            if (!isFinite(left[0]) || !isFinite(right[0])) {\n                const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n                return isNaN(left[0]) || isNaN(right[0]) || isNaN(check) ? [NaN, NaN] : [check, Infinity];\n            }\n\n            const difference = left[1] - right[1];\n            if (Math.abs(difference) > 15) { return difference > 0 ? left : right; }\n\n            if (difference === 0) {\n                left[0] += right[0];\n            } else if (difference > 0) {\n                left[0] += right[0] / 10 ** difference;\n            } else {\n                right[0] += left[0] / 10 ** (-difference);\n                left = right;\n            }\n\n            const after = Math.abs(left[0]);\n            if (after === 0) {\n                left[1] = 0;\n            } else if (after >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            } else if (after < 1) {\n                const digits = -Math.floor(Math.log10(after));\n                left[0] *= 10 ** digits;\n                left[1] -= digits;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        sub: (left: [number, number], right: [number, number]): [number, number] => {\n            right[0] *= -1; //Easier this way\n            return overlimit.technical.add(left, right);\n        },\n        mult: (left: [number, number], right: [number, number]): [number, number] => {\n            if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n            left[1] += right[1];\n            left[0] *= right[0];\n\n            if (Math.abs(left[0]) >= 10) {\n                left[0] /= 10;\n                left[1]++;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        div: (left: [number, number], right: [number, number]): [number, number] => {\n            if (right[0] === 0) { return [NaN, NaN]; }\n            if (left[0] === 0) { return [0, 0]; }\n\n            left[1] -= right[1];\n            left[0] /= right[0];\n\n            if (Math.abs(left[0]) < 1) {\n                left[0] *= 10;\n                left[1]--;\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        pow: (left: [number, number], power: number): [number, number] => {\n            if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n            if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n            if (!isFinite(power)) {\n                if (left[1] === 0 && (left[0] === 1 || (left[0] === -1 && !isNaN(power)))) { return [1, 0]; }\n                if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n                return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n            if (negative !== null) { //Complex numbers are not supported\n                if (Math.floor(power) !== power) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const base10 = power * (Math.log10(left[0]) + left[1]);\n            if (!isFinite(base10)) {\n                if (isNaN(left[0])) { return [NaN, NaN]; }\n                if (base10 === -Infinity) { return [0, 0]; }\n                return [negative === 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const target = Math.floor(base10);\n            left[0] = 10 ** (base10 - target);\n            left[1] = target;\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (left[0] === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            if (negative === 1) { left[0] *= -1; }\n            return left;\n        },\n        log: (left: [number, number], base: number): [number, number] => {\n            if (Math.abs(base) === 1 || (left[0] === -1 && left[1] === 0)) { return [NaN, NaN]; }\n            if (left[0] === 1 && left[1] === 0) { return [0, 0]; }\n            if (base === 0) { return [NaN, NaN]; } //Order matters (0 ** 0 === 1)\n            if (left[0] === 0) { return isNaN(base) ? [NaN, NaN] : [Math.abs(base) > 1 ? -Infinity : Infinity, Infinity]; }\n            if (!isFinite(base)) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n            if (!isFinite(left[0])) {\n                if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n                return [Math.abs(base) < 1 ? -Infinity : Infinity, Infinity];\n            }\n\n            const negative = left[0] < 0;\n            if (negative) { //Complex numbers are not supported\n                if (base > 0) { return [NaN, NaN]; }\n                left[0] *= -1;\n            }\n\n            const tooSmall = left[1] < 0; //Minor issue with negative power\n            const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n            const target = Math.floor(base10);\n            left[0] = (10 ** (base10 - target));\n            left[1] = target;\n\n            if (tooSmall) { left[0] *= -1; } //Already can be negative\n            if (base !== 10) {\n                left[0] /= Math.log10(Math.abs(base));\n\n                const after = Math.abs(left[0]);\n                if (after < 1 || after >= 10) {\n                    const digits = Math.floor(Math.log10(after));\n                    left[0] /= 10 ** digits;\n                    left[1] += digits;\n                }\n            }\n\n            if (base < 0 || negative) { //Special test for negative numbers\n                if (left[1] < 0) { return [NaN, NaN]; }\n                //Due to floats (1.1 * 100 !== 110), test is done in this way (also we assume that numbers are never uneven)\n                const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n                if (base < 0 && !negative) {\n                    if (test !== 0) { return [NaN, NaN]; } //Result must be even\n                } else { //base < 0 && negative\n                    if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n                }\n            }\n\n            left[0] = Math.round(left[0] * 1e14) / 1e14;\n            if (Math.abs(left[0]) === 10) {\n                left[0] = 1;\n                left[1]++;\n            }\n\n            return left;\n        },\n        less: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        lessOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return true; }\n            if (right[0] < 0 && left[0] > 0) { return false; }\n            return left[1] > right[1];\n        },\n        more: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        moreOrEqual: (left: [number, number], right: [number, number]): boolean => {\n            if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n            if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n            if (left[0] < 0 && right[0] > 0) { return false; }\n            if (right[0] < 0 && left[0] > 0) { return true; }\n            return left[1] < right[1];\n        },\n        equal: (left: [number, number], right: [number, number]): boolean => {\n            return left[1] === right[1] ? left[0] === right[0] : false;\n        },\n        notEqual: (left: [number, number], right: [number, number]): boolean => {\n            return left[1] !== right[1] ? true : left[0] !== right[0];\n        },\n        trunc: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.trunc(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        floor: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[0] < 0 ? -1 : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.floor(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        ceil: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[0] < 0 ? 0 : 1, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.ceil(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        round: (left: [number, number]): [number, number] => {\n            if (left[1] < 0) {\n                return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n            } else if (left[1] === 0) {\n                left[0] = Math.round(left[0]);\n            } else if (left[1] <= 14) {\n                left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n            }\n\n            return left;\n        },\n        format: (left: [number, number], settings: { digits?: number, type?: 'number' | 'input', padding?: boolean }): string => {\n            const [base, power] = left;\n            if (!isFinite(base) || !isFinite(power)) { return overlimit.technical.convertBack(left); }\n\n            //Self added part\n            if (!player.inflation.vacuum && power >= 300) { return 'Infinity'; }\n\n            //1.23ee123 (-1.23e-e123)\n            if ((power >= 1e4 || power <= -1e4) && settings.type !== 'input') {\n                const digits = settings.digits !== undefined ? settings.digits : 2;\n                let exponent = Math.floor(Math.log10(Math.abs(power)));\n                let result = Math.abs(Math.round(power / 10 ** (exponent - digits)) / 10 ** digits);\n                if (result === 10) {\n                    result = 1;\n                    exponent++;\n                }\n                if (base < 0) { result *= -1; }\n\n                const formated = settings.padding === true ? result.toFixed(digits).replace('.', player.separator[1]) : `${result}`.replace('.', player.separator[1]);\n                return `${formated}e${power < 0 ? '-' : ''}e${exponent}`;\n            }\n\n            //1.23e123\n            if (power >= 6 || power < -3) {\n                const digits = settings.digits !== undefined ? settings.digits : 2;\n                let exponent = power;\n                let result: number | string = Math.round(base * 10 ** digits) / 10 ** digits;\n                if (Math.abs(result) === 10) {\n                    result = 1;\n                    exponent++;\n                }\n\n                result = settings.padding === true ? result.toFixed(digits) : `${result}`;\n                return settings.type !== 'input' ? `${result.replace('.', player.separator[1])}e${exponent}` : `${result}e${exponent}`;\n            }\n\n            //12345\n            const digits = power >= 3 ? 0 : settings.digits !== undefined ? settings.digits : (power < 0 ? 4 : 2);\n            const result = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n            const formated = digits > 0 && settings.padding === true ? result.toFixed(digits) : `${result}`;\n\n            if (settings.type === 'input') { return formated; }\n            return result >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) : formated.replace('.', player.separator[1]);\n        },\n        convert: (number: string | number | [number, number]): [number, number] => {\n            let result: [number, number];\n            if (typeof number !== 'object' || number === null) { //Not an Array\n                if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n                const index = number.indexOf('e'); //About 5+ times quicker than regex\n                result = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n            } else { result = [number[0], number[1]]; } //Not instant return, because might need a fix\n\n            if (!isFinite(result[0])) { return isNaN(result[0]) ? [NaN, NaN] : [result[0], Infinity]; }\n\n            const after = Math.abs(result[0]);\n            if (after === 0) {\n                return [0, 0];\n            } else if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                result[0] /= 10 ** digits;\n                result[1] += digits;\n\n                if (Math.abs(result[0]) < 1) { //Happens more often than you would think\n                    result[0] *= 10;\n                    result[1]--;\n                }\n            }\n\n            //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n            result[0] = Math.round(result[0] * 1e14) / 1e14;\n            if (Math.abs(result[0]) === 10) {\n                result[0] = 1;\n                result[1]++;\n            }\n\n            return result;\n        },\n        convertAll: (numbers: Array<string | number | [number, number]>): Array<[number, number]> => {\n            const result = [];\n            const { convert } = overlimit.technical;\n            for (let i = 0; i < numbers.length; i++) {\n                result[i] = convert(numbers[i]);\n            }\n            return result;\n        },\n        prepare: (number: [number, number]): [number, number] => {\n            if (isFinite(number[0]) && isFinite(number[1])) { return number; }\n            if (number[0] === 0 || number[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(number[0]) || isNaN(number[1])) { return [NaN, NaN]; }\n            return [number[0] < 0 ? -Infinity : Infinity, Infinity]; //Base can be non Infinity\n        },\n        convertBack: (number: [number, number]): string => {\n            number = overlimit.technical.prepare(number);\n            if (!isFinite(number[0])) { return `${number[0]}`; }\n            return number[1] === 0 ? `${number[0]}` : `${number[0]}e${number[1]}`;\n        }\n    }\n};\n\nexport const { Limit, LimitAlt } = overlimit;\nexport default Limit;\n", "import Limit from './Limit';\nimport { global, player } from './Player';\n\nexport const checkTab = (tab: string, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.inflation.vacuum || player.milestones[1][0] >= 5 || player.milestones[2][1] >= 4 || player.milestones[3][1] >= 5 || player.milestones[4][1] >= 5 || player.milestones[5][1] >= 8; }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'research':\n            if (player.stage.resets < 1 && player.discharge.current < 4) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return (global.stageInfo.activeAll.includes(4)) && player.upgrades[4][1] === 1; }\n            return subtab === 'Researches' || subtab === null;\n        case 'strangeness':\n            if (player.strange[0].total === 0) { return false; }\n            if (subtab === 'Milestones') { return player.strangeness[5][8] >= 1 || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n        case 'special':\n            return global.screenReader;\n    }\n\n    return false;\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        if (index === 6) { return player.strangeness[2][9] >= 1; }\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][6] === 1; }\n        if (index === 5) { return player.upgrades[3][6] === 1 && player.strangeness[3][8] >= 1 && player.accretion.rank >= 5; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index]) { return false; }\n        if (index === 1 || index === 4) { return true; }\n        if (index === 2) { return player.inflation.vacuum || player.upgrades[4][1] === 1; }\n        if (index === 3) { return player.inflation.vacuum || player.upgrades[4][2] === 1; }\n        if (index === 5) { return player.strangeness[4][10] >= 1; }\n    } else if (stageIndex === 5) {\n        if (player.challenges.active === 0) { return false; } //Remove when added balance\n        if (player.collapse.mass < global.collapseInfo.unlockG[index]) { return false; }\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 3; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 3; }\n        if (index === 3) { return player.strangeness[5][6] >= 1; }\n        if (index === 4) { return false; }\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness'): boolean => {\n    if (stageIndex === 3 && player.accretion.rank === 0 && type !== 'strangeness') { return false; }\n\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade > 5) { return player.discharge.current >= 3; }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 6) { return player.strangeness[2][2] >= 3; }\n                if (upgrade === 7) { return player.strangeness[2][9] >= 2; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (upgrade === 8 && player.strangeness[3][2] < 3) { return false; }\n                return player.accretion.rank >= global.accretionInfo.rankU[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 3 && player.strangeness[4][2] < 1) { return false; }\n                if (upgrade >= 2 && player.upgrades[4][upgrade - 1] !== 1) { return false; }\n                return player.collapse.mass >= global.collapseInfo.unlockU[upgrade];\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 3; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 3; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1; }\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 3 && player.strangeness[4][2] < 2) { return false; }\n                return player.collapse.mass >= global.collapseInfo.unlockR[upgrade];\n            } else if (stageIndex === 5) {\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 3; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 3; }\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (player.discharge.current < 5) { return false; }\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                return true;\n            } else if (stageIndex === 2) {\n                return Limit(player.vaporization.clouds).moreThan('1');\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankE[upgrade];\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.strangeness[4][2] >= 3; }\n                return player.buildings[4][2].trueTotal[0] > 0;\n            }\n            break;\n        case 'researchesAuto':\n            if (stageIndex === 1 && player.upgrades[1][5] < 1) { return false; }\n            return stageIndex === global.researchesAutoInfo.autoStage[upgrade];\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            return true;\n        case 'elements':\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.collapse.mass >= 10 || player.buildings[5][3].true > 0; }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 9) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 10) { return player.challenges.void[1] >= 4; }\n                    if (upgrade === 11) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 9) { return player.strangeness[2][5] >= 5; }\n                    if (upgrade === 10) { return player.challenges.void[2] >= 3 && player.strangeness[1][11] >= 1; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 8) { return player.strangeness[3][5] >= 4; }\n                    if (upgrade === 10) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 11) { return player.challenges.void[1] >= 3; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 8) { return player.strangeness[4][7] >= 3; }\n                    if (upgrade === 10) { return player.strangeness[4][6] >= 4; }\n                    if (upgrade === 11) { return player.challenges.void[4] >= 3; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 9) { return player.challenges.void[3] >= 5; }\n                }\n                return upgrade < 10;\n            }\n            if (((stageIndex === 1 || stageIndex === 4) && upgrade < 8) || ((stageIndex === 2 || stageIndex === 3) && upgrade < 7)) { return true; }\n            if (stageIndex === 4 && upgrade === 8 && player.stage.true >= 6 && player.strangeness[4][7] < 3) { return false; }\n            return player.milestones[4][0] >= 3;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 5 && check === 3) { return false; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) {\n                if (check === 5) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 1) { return false; }\n            } else if (stageIndex === 4) {\n                return false;\n            } else if (stageIndex === 5) {\n                if (check === 2) { return player.inflation.vacuum; }\n            }\n            break;\n        case 'researches':\n            if (stageIndex === 1) {\n                if (check === 3) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 1) { return false; }\n            }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) {\n                if (check === 2) { return false; }\n            } else if (stageIndex === 2) {\n                if (check === 0 || check === 3) { return false; }\n            } else if (stageIndex === 4) {\n                if (check === 0) { return false; }\n            }\n            break;\n        case 'elements':\n            if (check === 26 || check === 27 || check === 28) { return false; }\n    }\n\n    return true;\n};\n\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    if (player.inflation.vacuum) {\n        if (player.strangeness[5][8] < 1 || player.challenges.active !== 0) { return false; }\n    } else if (player.strange[0].total === 0 || (stageIndex === 5 && player.strangeness[5][8] < 1)) { return false; }\n    const need = global.milestonesInfo[stageIndex].need[index];\n    if (need[0] === 0) { return false; }\n\n    if (stageIndex === 1) {\n        if (index === 0) { return Limit(player.buildings[1][player.inflation.vacuum ? 1 : 0].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.discharge.energy).moreOrEqual(need); }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return Limit(player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[2][2].current).moreOrEqual(need); }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return Limit(player.buildings[3][0].current).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[3][4].true + player.buildings[3][5].true).moreThan(need); }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return Limit(player.inflation.vacuum ? player.buildings[4][0].current : player.collapse.mass).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.collapse.stars[2]).moreOrEqual(need); }\n    } else if (stageIndex === 5) {\n        if (index === 0) { return Limit(player.inflation.vacuum ? player.buildings[5][0].current : global.collapseInfo.trueStars).moreOrEqual(need); }\n        if (index === 1) { return Limit(player.buildings[5][player.inflation.vacuum ? 4 : 3].current).moreOrEqual(need); }\n    }\n    return false;\n};\n", "import { getId, getQuery } from './Main';\nimport { global, player } from './Player';\nimport { numbersUpdate, visualUpdate } from './Update';\n\n//Eventually might move more HTML into here\nexport const specialHTML = {\n    resetHTML: [ /* All new ID's need to be checked for being null */\n        '',\n        '<span class=\"bigWord orangeText\">Discharge</span>. Reset current Structures and Energy. Will also boost production by <span id=\"dischargeEffect\" class=\"orangeText\"></span>, if to reset with enough Energy.',\n        '<span class=\"bigWord grayText\">Vaporization</span>. Structures, upgrades, will be reset. But in return gain <span class=\"grayText\">Clouds</span>. It takes a lot to form more than one.',\n        '<img id=\"rankImage\" src=\"Used_art/Missing.png\" alt=\"Missing\">Current <span class=\"bigWord darkorchidText\">Rank</span> is: <span id=\"rankName\" class=\"blueText\"></span>. <span id=\"rankMessage\"></span>',\n        '<span class=\"bigWord orchidText\">Collapse</span> - Everything will be lost, but at same time gained. Each of the Stars will produce something unique and special.',\n        ''\n    ],\n    longestBuilding: 7, //Max +1; If max will increase then new HTML need to be added into index.html\n    buildingHTML: [ //outerHTML is slow\n        [],\n        [\n            ['Preon.png', 'Preon'], //[0] === image; [1] === alt\n            ['Quarks.png', 'Quarks'],\n            ['Particle.png', 'Particle'],\n            ['Atom.png', 'Atom'],\n            ['Molecule.png', 'Molecule']\n        ],\n        [\n            ['Drop.png', 'Drop of water'],\n            ['Puddle.png', 'Puddle'],\n            ['Pond.png', 'Pond'],\n            ['Lake.png', 'Lake'],\n            ['Sea.png', 'Sea'],\n            ['Ocean.png', 'Ocean']\n        ],\n        [\n            ['Cosmic%20dust.png', 'Cosmic dust'],\n            ['Planetesimal.png', 'Planetesimal'],\n            ['Protoplanet.png', 'Protoplanet'],\n            ['Natural%20satellite.png', 'Moon'],\n            ['Subsatellite.png', 'Submoon']\n        ],\n        [\n            ['Brown%20dwarf.png', 'Brown dwarf'],\n            ['Orange%20dwarf.png', 'Orange dwarf'],\n            ['Red%20supergiant.png', 'Red supergiant'],\n            ['Blue%20hypergiant.png', 'Blue hypergiant'],\n            ['Quasi%20star.png', 'Quasi star']\n        ],\n        [\n            ['Nebula.png', 'Nebula'],\n            ['Star%20cluster.png', 'Star cluster'],\n            ['Galaxy.png', 'Galaxy'],\n            ['Galaxy%20Filaments.png', 'Galaxy Filaments']\n        ]\n    ],\n    longestUpgrade: 13, //If max will increase then new HTML need to be added into index.html\n    upgradeHTML: [\n        [],\n        [\n            ['UpgradeQ1.png', 'Weak force'],\n            ['UpgradeQ2.png', 'Strong force'],\n            ['UpgradeQ3.png', 'Electron'],\n            ['UpgradeQ4.png', 'Proton'],\n            ['UpgradeQ5.png', 'Neutron'],\n            ['UpgradeQ6.png', 'Superposition'],\n            ['UpgradeQ7.png', 'Protium'],\n            ['UpgradeQ8.png', 'Deuterium'],\n            ['UpgradeQ9.png', 'Tritium'],\n            ['UpgradeQ10.png', 'Fusion']\n        ],\n        [\n            ['UpgradeW1.png', 'Mole'],\n            ['UpgradeW2.png', 'Vaporization'],\n            ['UpgradeW3.png', 'Tension'],\n            ['UpgradeW4.png', 'Stress'],\n            ['UpgradeW5.png', 'Stream'],\n            ['UpgradeW6.png', 'River'],\n            ['UpgradeW7.png', 'Tsunami'],\n            ['UpgradeW8.png', 'Tide']\n        ],\n        [\n            ['UpgradeA1.png', 'Motion'],\n            ['UpgradeA2.png', 'Gas'],\n            ['UpgradeA3.png', 'Micrometeoroid'],\n            ['UpgradeA4.png', 'Instability'],\n            ['UpgradeA5.png', 'Gravity'],\n            ['UpgradeA6.png', 'Pile'],\n            ['UpgradeA7.png', 'Orbit'],\n            ['UpgradeA8.png', 'Magma'],\n            ['UpgradeA9.png', 'Equilibrium'],\n            ['UpgradeA10.png', 'Atmosphere'],\n            ['UpgradeA11.png', 'Pebble'],\n            ['UpgradeA12.png', 'Tidal force'],\n            ['UpgradeA13.png', 'Ring']\n        ],\n        [\n            ['UpgradeS1.png', 'Collapse'],\n            ['UpgradeS2.png', 'Reaction'],\n            ['UpgradeS3.png', 'CNO'],\n            ['UpgradeS4.png', 'Helium fusion']\n        ],\n        [\n            ['UpgradeG1.png', 'Instability'],\n            ['UpgradeG2.png', 'Super cluster'],\n            ['UpgradeG3.png', 'Quasar']\n        ]\n    ],\n    longestResearch: 8, //If max will increase then new HTML need to be added into index.html\n    researchHTML: [\n        [],\n        [\n            ['ResearchQ1.png', 'Protium+', 'stage1borderImage'], //[2] === className\n            ['ResearchQ2.png', 'Deuterium+', 'stage1borderImage'],\n            ['ResearchQ3.png', 'Tritium+', 'stage1borderImage'],\n            ['ResearchQ4.png', 'Discharge-', 'stage4borderImage'],\n            ['ResearchQ5.png', 'Discharge+', 'stage4borderImage'],\n            ['ResearchQ6.png', 'Discharge++', 'stage4borderImage']\n        ],\n        [\n            ['ResearchW1.png', 'Moles+', 'stage2borderImage'],\n            ['ResearchW2.png', 'Moles++', 'stage2borderImage'],\n            ['ResearchW3.png', 'Tension+', 'stage2borderImage'],\n            ['ResearchW4.png', 'Stress+', 'stage2borderImage'],\n            ['ResearchW5.png', 'Streams+', 'stage2borderImage'],\n            ['ResearchW6.png', 'Channel', 'stage2borderImage']\n        ],\n        [\n            ['ResearchA1.png', 'Mass+', 'stage3borderImage'],\n            ['ResearchA2.png', 'Adhesion', 'stage2borderImage'],\n            ['ResearchA3.png', 'Weathering', 'stage3borderImage'],\n            ['ResearchA4.png', 'Collision', 'stage3borderImage'],\n            ['ResearchA5.png', 'Binary', 'stage3borderImage'],\n            ['ResearchA6.png', 'Gravity+', 'stage1borderImage'],\n            ['ResearchA7.png', 'Layers', 'stage7borderImage'],\n            ['ResearchA8.png', 'Drag', 'stage1borderImage']\n        ],\n        [\n            ['ResearchS1.png', 'Orbit', 'stage5borderImage'],\n            ['ResearchS2.png', '2 stars', 'stage5borderImage'],\n            ['ResearchS3.png', 'Protodisc', 'stage7borderImage'],\n            ['ResearchS4.png', 'Planetary nebula', 'stage5borderImage']\n        ],\n        [\n            ['ResearchG1.png', 'Density', 'stage1borderImage'],\n            ['ResearchG2.png', 'Frequency', 'stage6borderImage']\n        ]\n    ],\n    longestResearchExtra: 5, //If max will increase then new HTML need to be added into index.html\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'Energy researches', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'Cloud researches', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'Rank researches', 'stage6borderImage'],\n        ['Star%20Researches.png', 'Star researches', 'stage6borderImage'],\n        []\n    ],\n    researchExtraHTML: [\n        [],\n        [\n            ['ResearchEnergy1.png', 'Strong force+', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'Radiation+', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'Accretion', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'Preon Mass', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'Impulse', 'stage6borderImage']\n        ],\n        [\n            ['ResearchClouds1.png', 'Vaporization+', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'Rain', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'Storm', 'stage4borderImage'],\n            ['Ocean%20world.png', 'Ocean world', 'stage2borderImage']\n        ],\n        [\n            ['ResearchRank1.png', 'Ocean', 'stage3borderImage'],\n            ['ResearchRank2.png', 'Rank', 'stage3borderImage'],\n            ['ResearchRank3.png', 'Weight', 'stage3borderImage'],\n            ['ResearchRank4.png', 'Viscosity', 'stage2borderImage'],\n            ['ResearchRank5.png', 'Water rank', 'stage2borderImage']\n        ],\n        [\n            ['ResearchStar1.png', 'Supernova', 'stage6borderImage'],\n            ['ResearchStar2.png', 'White dwarf', 'stage1borderImage']\n        ],\n        []\n    ],\n    longestFooterStats: 3, //If max will increase then new HTML need to be added into index.html\n    footerStatsHTML: [\n        [],\n        [\n            ['Energy%20mass.png', 'Energy mass', 'stage1borderImage cyanText', 'Mass'], //[3] === textcontent\n            ['Energy.png', 'Energy', 'stage4borderImage orangeText', 'Energy']\n        ],\n        [\n            ['Clouds.png', 'Clouds', 'stage3borderImage grayText', 'Clouds'],\n            ['Water.png', 'H2O', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'Drop of water', 'stage2borderImage blueText', 'Drops']\n        ],\n        [\n            ['Mass.png', 'Mass', 'stage3borderImage grayText', 'Mass']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'Solar mass', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'Elements', 'stage4borderImage orangeText', 'Elements']\n        ],\n        [\n            ['Main_sequence%20mass.png', 'Solar mass', 'stage1borderImage cyanText', 'Mass'],\n            ['Elements.png', 'Elements', 'stage4borderImage orangeText', 'Elements'],\n            ['Stars.png', 'Stars', 'stage7borderImage redText', 'Stars']\n        ]\n    ],\n    imageCache: document.createElement('div')\n};\n\nexport const preventImageUnload = () => {\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n    //Duplicates are ignored, unless they are from Strangeness, because duplicates from there could become unique in future\n\n    let images = '';\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 2) { continue; }\n            } else if (s === 5 && i < 2) { continue; }\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            if (s === 2 && i === 3) { continue; }\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        if (extraDiv[s].length > 0) { images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`; }\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    specialHTML.imageCache.innerHTML = images; //Saved just in case\n};\n\nexport const setTheme = (themeNumber: number, initial = false) => {\n    if (!initial) {\n        if (player.stage.true < themeNumber) { initial = true; }\n    }\n\n    if (initial) {\n        global.theme.default = true;\n        localStorage.removeItem('theme');\n    } else {\n        global.theme.default = false;\n        global.theme.stage = themeNumber;\n        localStorage.setItem('theme', `${themeNumber}`);\n    }\n    switchTheme();\n};\n\nexport const switchTheme = () => {\n    const { theme } = global;\n    const body = document.body.style;\n\n    if (theme.default) {\n        theme.stage = player.stage.active;\n        getId('currentTheme').textContent = 'Default';\n    } else {\n        getId('currentTheme').textContent = global.stageInfo.word[theme.stage];\n    }\n\n    let dropStatColor = '';\n    let waterStatColor = '';\n    body.setProperty('--transition-all', '1s');\n    body.setProperty('--transition-buttons', '700ms');\n\n    /* Full reset, because better response from CSS (also easier) */\n    body.removeProperty('--background-color');\n    body.removeProperty('--window-color');\n    body.removeProperty('--window-border');\n    body.removeProperty('--footer-color');\n    body.removeProperty('--button-main-color');\n    body.removeProperty('--button-main-border');\n    body.removeProperty('--button-main-hover');\n    body.removeProperty('--building-can-buy');\n    body.removeProperty('--button-tab-border');\n    body.removeProperty('--button-tab-active');\n    body.removeProperty('--button-extra-hover');\n    body.removeProperty('--button-delete-color');\n    body.removeProperty('--button-delete-hover');\n    body.removeProperty('--input-border-color');\n    body.removeProperty('--input-text-color');\n    body.removeProperty('--button-text-color');\n    body.removeProperty('--main-text-color');\n    body.removeProperty('--white-text-color');\n    //body.removeProperty('--cyan-text-color');\n    body.removeProperty('--blue-text-color');\n    body.removeProperty('--orange-text-color');\n    body.removeProperty('--gray-text-color');\n    body.removeProperty('--orchid-text-color');\n    body.removeProperty('--darkorchid-text-color');\n    body.removeProperty('--darkviolet-text-color');\n    body.removeProperty('--red-text-color');\n    body.removeProperty('--green-text-color');\n    body.removeProperty('--yellow-text-color');\n    /* These colors will need to be changed in other places as well: (not just 2, but from 2 to max)\n        --window-color > '.stage2windowBackground';\n        --button-main-color > '.stage2backgroundButton' and 'global.stageInfo.buttonBackgroundColor[2]';\n        --button-main-border > '.stage2borderButton' and 'global.stageInfo.buttonBorderColor[2]'; */\n    switch (theme.stage) {\n        case 1:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = '';\n                if (text === 'upgrade') { continue; } //Not changed anywhere\n                getId(`${text}Text`).style.color = '';\n            }\n            break;\n        case 2:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = '';\n            }\n            body.setProperty('--background-color', '#070026');\n            body.setProperty('--window-color', '#000052');\n            body.setProperty('--window-border', 'blue');\n            body.setProperty('--footer-color', '#0000db');\n            body.setProperty('--button-main-color', 'blue');\n            body.setProperty('--button-main-border', '#427be1');\n            body.setProperty('--button-main-hover', '#1515cf');\n            body.setProperty('--button-tab-border', '#376ac5');\n            body.setProperty('--button-tab-active', '#990000');\n            body.setProperty('--button-extra-hover', '#2400d7');\n            body.setProperty('--input-border-color', '#4747ff');\n            body.setProperty('--input-text-color', 'dodgerblue');\n            body.setProperty('--main-text-color', 'var(--blue-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#8b6bff');\n            body.setProperty('--green-text-color', '#82cb3b');\n            body.setProperty('--red-text-color', '#f70000');\n            if (player.stage.active === 2) {\n                dropStatColor = '#3099ff';\n                waterStatColor = '#3099ff';\n            }\n            break;\n        case 3:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = '';\n                getId(`${text}Cost`).style.color = 'var(--green-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#000804');\n            body.setProperty('--window-color', '#2e1200');\n            body.setProperty('--window-border', '#31373e');\n            body.setProperty('--footer-color', '#221a00');\n            body.setProperty('--button-main-color', '#291344');\n            body.setProperty('--button-main-border', '#404040');\n            body.setProperty('--button-main-hover', '#361f52');\n            body.setProperty('--button-tab-border', '#484848');\n            body.setProperty('--button-tab-active', '#8d4c00');\n            body.setProperty('--button-extra-hover', '#5a2100');\n            body.setProperty('--button-delete-color', '#891313');\n            body.setProperty('--button-delete-hover', '#a10a0a');\n            body.setProperty('--input-border-color', '#8b4a00');\n            body.setProperty('--input-text-color', '#e77e00');\n            body.setProperty('--main-text-color', 'var(--gray-text-color)');\n            body.setProperty('--white-text-color', '#dfdfdf');\n            body.setProperty('--orange-text-color', '#f58600');\n            body.setProperty('--green-text-color', '#00db00');\n            if (player.stage.active === 2) {\n                dropStatColor = '#3099ff';\n                waterStatColor = '#3099ff';\n            }\n            break;\n        case 4:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--blue-text-color)';\n            }\n            body.setProperty('--background-color', '#140e04');\n            body.setProperty('--window-color', '#4e0000');\n            body.setProperty('--window-border', '#894800');\n            body.setProperty('--footer-color', '#4e0505');\n            body.setProperty('--button-main-color', '#6a3700');\n            body.setProperty('--button-main-border', '#9f6700');\n            body.setProperty('--button-main-hover', '#914b00');\n            body.setProperty('--building-can-buy', '#007f95');\n            body.setProperty('--button-tab-border', '#af5d00');\n            body.setProperty('--button-tab-active', '#008297');\n            body.setProperty('--button-extra-hover', '#605100');\n            body.setProperty('--button-delete-color', '#8f0000');\n            body.setProperty('--button-delete-hover', '#ad0000');\n            body.setProperty('--input-border-color', '#008399');\n            body.setProperty('--input-text-color', '#05c3c3');\n            body.setProperty('--button-text-color', '#d9d900');\n            body.setProperty('--main-text-color', 'var(--orange-text-color)');\n            body.setProperty('--white-text-color', '#e5e500');\n            body.setProperty('--blue-text-color', '#2e96ff');\n            body.setProperty('--gray-text-color', '#8b8b8b');\n            body.setProperty('--darkorchid-text-color', '#c71bff');\n            body.setProperty('--darkviolet-text-color', '#9457ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--green-text-color', '#00e600');\n            body.setProperty('--yellow-text-color', 'var(--green-text-color)');\n            break;\n        case 5:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--green-text-color)';\n                getId(`${text}Cost`).style.color = 'var(--red-text-color)';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orange-text-color)';\n            }\n            body.setProperty('--background-color', '#060010');\n            body.setProperty('--window-color', '#001d42');\n            body.setProperty('--window-border', '#35466e');\n            body.setProperty('--footer-color', '#2f005c');\n            body.setProperty('--button-main-color', '#4a008f');\n            body.setProperty('--button-main-border', '#8a0049');\n            body.setProperty('--button-main-hover', '#6800d6');\n            body.setProperty('--building-can-buy', '#8603ff');\n            body.setProperty('--button-tab-border', '#9d0054');\n            body.setProperty('--button-tab-active', '#8500ff');\n            body.setProperty('--button-extra-hover', '#3b0080');\n            body.setProperty('--button-delete-color', '#800000');\n            body.setProperty('--button-delete-hover', '#9b1212');\n            body.setProperty('--input-border-color', '#3656a1');\n            body.setProperty('--input-text-color', '#6a88cd');\n            body.setProperty('--button-text-color', '#fc9cfc');\n            body.setProperty('--main-text-color', 'var(--darkorchid-text-color)');\n            body.setProperty('--white-text-color', '#ff79ff');\n            body.setProperty('--orchid-text-color', '#ff00f4');\n            body.setProperty('--darkorchid-text-color', '#c000ff');\n            body.setProperty('--darkviolet-text-color', '#9f52ff');\n            body.setProperty('--yellow-text-color', 'var(--darkviolet-text-color)');\n            break;\n        case 6:\n            for (const text of ['upgrade', 'research', 'element']) {\n                getId(`${text}Effect`).style.color = 'var(--red-text-color)';\n                getId(`${text}Cost`).style.color = '';\n                if (text === 'upgrade') { continue; }\n                getId(`${text}Text`).style.color = 'var(--orchid-text-color)';\n            }\n            body.setProperty('--background-color', 'black');\n            body.setProperty('--window-color', '#01003c');\n            body.setProperty('--window-border', '#7100ff');\n            body.setProperty('--footer-color', '#00007a');\n            body.setProperty('--button-main-color', '#2b0095');\n            body.setProperty('--button-main-border', '#711bda');\n            body.setProperty('--button-main-hover', '#3d00d6');\n            body.setProperty('--building-can-buy', '#a80000');\n            body.setProperty('--button-tab-border', '#6719c8');\n            body.setProperty('--button-tab-active', '#8d0000');\n            body.setProperty('--button-extra-hover', '#490070');\n            body.setProperty('--button-delete-color', '#930606');\n            body.setProperty('--button-delete-hover', '#b80000');\n            body.setProperty('--input-border-color', '#a50000');\n            body.setProperty('--input-text-color', 'red');\n            body.setProperty('--button-text-color', '#efe0ff');\n            body.setProperty('--main-text-color', 'var(--darkviolet-text-color)');\n            body.setProperty('--gray-text-color', '#9b9b9b');\n            body.setProperty('--darkviolet-text-color', '#8157ff');\n            body.setProperty('--white-text-color', '#f9f5ff');\n            body.setProperty('--red-text-color', 'red');\n            body.setProperty('--yellow-text-color', 'var(--red-text-color)');\n    }\n    getQuery('#footerStat2 > p').style.color = dropStatColor;\n    getQuery('#footerStat3 > p').style.color = waterStatColor;\n\n    setTimeout(() => {\n        body.removeProperty('--transition-all');\n        body.removeProperty('--transition-buttons');\n    }, 1000);\n};\n\nexport const Alert = (text: string) => { void AlertWait(text); };\nexport const AlertWait = async(text: string): Promise<void> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (alert)\");\n            resolve();\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        confirm.focus();\n\n        const key = async(button: KeyboardEvent) => {\n            if (button.key === 'Escape' || button.key === 'Enter') {\n                button.preventDefault();\n                close();\n            }\n        };\n        const close = () => {\n            blocker.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            resolve();\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string, rejectValue = false): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (confirm)\");\n            resolve(rejectValue);\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const cancel = getId('cancelBtn');\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        confirm.focus();\n\n        const yes = () => { close(true); };\n        const no = () => { close(false); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                button.preventDefault();\n                no();\n            } else if (button.key === 'Enter') {\n                button.preventDefault();\n                yes();\n            }\n        };\n        const close = (result: boolean) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const Prompt = async(text: string, inputValue = ''): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        const blocker = getId('blocker');\n        if (blocker.style.display !== 'none') {\n            console.warn(\"Wasn't able to show another window (prompt)\");\n            resolve(null);\n            return;\n        }\n\n        getId('alertText').textContent = text;\n        const input = getId('inputArea') as HTMLInputElement;\n        const cancel = getId('cancelBtn');\n        const confirm = getId('confirmBtn');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        input.value = inputValue;\n        input.focus();\n\n        const yes = () => { close(input.value); };\n        const no = () => { close(null); };\n        const key = (button: KeyboardEvent) => {\n            if (button.key === 'Escape') {\n                button.preventDefault();\n                no();\n            } else if (button.key === 'Enter') {\n                button.preventDefault();\n                yes();\n            }\n        };\n        const close = (result: string | null) => {\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            document.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', no);\n            resolve(result);\n        };\n        document.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', no);\n    });\n};\n\nexport const notify = (text: string) => {\n    const notification = document.createElement('p');\n    notification.textContent = text;\n    notification.style.animation = 'hideX 1s ease-in-out reverse';\n\n    const mainDiv = getId('notifications');\n    mainDiv.appendChild(notification);\n\n    let timeout: number | undefined;\n    const remove = () => {\n        notification.removeEventListener('click', remove);\n        notification.style.animation = 'hideX 1s ease-in-out forwards';\n        setTimeout(() => mainDiv.removeChild(notification), 1000);\n        clearTimeout(timeout);\n    };\n\n    setTimeout(() => {\n        notification.style.animation = '';\n        timeout = setTimeout(remove, 9000);\n        notification.addEventListener('click', remove);\n    }, 1000);\n};\n\nexport const hideFooter = () => {\n    const footer = getId('footer');\n    const toggle = getId('hideToggle');\n    const arrow = getId('hideArrow');\n\n    const animationReset = () => {\n        footer.style.animation = '';\n        arrow.style.animation = '';\n        toggle.addEventListener('click', hideFooter);\n    };\n\n    global.footer = !global.footer;\n    toggle.removeEventListener('click', hideFooter);\n    if (global.footer) {\n        getId('footerColor').style.display = '';\n        arrow.style.transform = '';\n        footer.style.animation = 'hideY 1s reverse';\n        arrow.style.animation = 'rotate 1s reverse';\n        getId('hideText').textContent = 'Hide';\n        setTimeout(animationReset, 1000);\n\n        numbersUpdate();\n        visualUpdate();\n    } else {\n        footer.style.animation = 'hideY 1s backwards';\n        arrow.style.animation = 'rotate 1s backwards';\n        getId('hideText').textContent = 'Show';\n        setTimeout(() => {\n            getId('footerColor').style.display = 'none';\n            arrow.style.transform = 'rotate(180deg)';\n            animationReset();\n        }, 1000);\n    }\n};\n\nexport const mobileDeviceSupport = (change = false) => {\n    let enabled = localStorage.getItem('support') === 'MD';\n    const toggle = getId('mobileDeviceToggle');\n\n    if (change) { enabled = !enabled; }\n\n    if (enabled) {\n        toggle.textContent = 'ON';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        localStorage.setItem('support', 'MD');\n        global.mobileDevice = true;\n        if (change) { Alert('To enable touchStart events (as example: touching an upgrade to view description), will need to refresh'); }\n        if (global.screenReader) { screenReaderSupport(); }\n    } else {\n        toggle.textContent = 'OFF';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        global.mobileDevice = false;\n        if (change) { localStorage.removeItem('support'); }\n    }\n};\n\nexport const screenReaderSupport = (change = false) => {\n    let enabled = localStorage.getItem('support') === 'SR';\n    const toggle = getId('screenReaderToggle');\n\n    if (change) { enabled = !enabled; }\n\n    if (enabled) {\n        toggle.textContent = 'ON';\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        localStorage.setItem('support', 'SR');\n        global.screenReader = true;\n        if (change) { Alert(\"To enable focus events (as example: view description of an upgrade by pressing 'tab'), will need to refresh\"); }\n        if (global.mobileDevice) { mobileDeviceSupport(); }\n    } else {\n        toggle.textContent = 'OFF';\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        global.screenReader = false;\n        if (change) { localStorage.removeItem('support'); }\n    }\n};\n\nexport const changeFontSize = (change = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    let size = Number(change ? input.value : localStorage.getItem('fontSize'));\n    if (size === 0) { size = 16; }\n\n    if (size === 16) {\n        document.body.style.removeProperty('--font-size');\n        localStorage.removeItem('fontSize');\n    } else {\n        size = Math.floor(Math.min(Math.max(size, 10), 32) * 10) / 10;\n        document.body.style.setProperty('--font-size', `${size}px`);\n        localStorage.setItem('fontSize', `${size}`);\n    }\n    input.value = `${size}`;\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    const allowed = ['.', ',', ' ', '_', '^', '\"', \"'\", '`', '|'].includes(htmlInput.value);\n    if (!allowed || (point ? player.separator[0] : player.separator[1]) === htmlInput.value) {\n        if (point && player.separator[0] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            player.separator[0] = '';\n        }\n        htmlInput.value = point ? '.' : '';\n    }\n    point ? player.separator[1] = htmlInput.value : player.separator[0] = htmlInput.value;\n};\n\n//If done for span, then add class=\"noMoveSpan\";\nexport const assignWithNoMove = (html: HTMLElement, text: string) => {\n    html.textContent = text;\n    const newWidth = `${text.length * 0.63}em`;\n    if (newWidth !== html.style.width) { html.style.width = newWidth; }\n};\n\nexport const replayEvent = async() => {\n    if (getId('blocker').style.display !== 'none') { return; }\n    const event = Number(await Prompt('Which event do you want to see again?\\n(Write a number of that event)'));\n    if (!isFinite(event) || event <= 0) { return; }\n\n    let allowed = false;\n    if ([1, 2, 3, 4].includes(event)) {\n        allowed = player.stage.true > event || (player.events[0] && player.stage.true === event);\n    } else if (event === 5) {\n        allowed = player.events[1];\n    } else if (event === 6) {\n        allowed = player.events[2];\n    }\n    if (!allowed) { return Alert(`Event under number ${event} can't be viewed, because it isn't unlocked`); }\n\n    playEvent(event - 1, -1);\n};\n\nexport const playEvent = (event: number, index: number) => {\n    if (getId('blocker').style.display !== 'none') { return; }\n    if (index !== -1) { player.events[index] = true; }\n\n    switch (event) {\n        case 0: //[0] Discharge explanation\n            Alert(\"Energy that had been spent, can't be obtained again. But doing Discharge will reset spent Energy\");\n            break;\n        case 1: //[0] Clouds softcap\n            Alert('Cloud density is too high... Getting more will be harder now');\n            break;\n        case 2: //[0] Accretion new Rank unlocked\n            Alert('Getting more Mass, seems impossible. We need to change our approach, next Rank is going to be Softcapped');\n            if (index !== -1 && player.accretion.rank <= 4) {\n                global.accretionInfo.rankCost[4] = 5e29;\n                const button = getId('reset1Button');\n                if (button.textContent === 'Max Rank achieved') { button.textContent = 'Next Rank is 5e29 Mass'; }\n            }\n            break;\n        case 3: //[0] Collapse explanation\n            Alert('Any Collapse reset from now on will give even more rewards. Collapse is only possible when can increase any of rewards.\\nRewards effects are unknown, but with more Elements will be revealed');\n            break;\n        case 4: //[1] Entering Intergalactic\n            Alert(\"There doesn't seem to be anything here. Let's try going back to start and find what is missing\");\n            break;\n        case 5: //[2] Creating Galaxy\n            Alert('Galaxy will boost production of Nebulas and Star clusters, but for the cost of every other structure/upgrade.\\nElements are disabled until afforded again (will reactivate automatically)');\n    }\n};\n", "import { getClass, getId, getQuery } from './Main';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { Alert, AlertWait, Confirm, specialHTML } from './Special';\n\nexport const prepareVacuum = () => {\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n\n    researchesExtraInfo[4].startCost[0] = player.challenges.active === 0 ? 1e14 : 1e6;\n\n    if (player.inflation.vacuum) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'Energy mass', 'stage1borderImage cyanText', 'Mass'];\n        buildings[1][0].current = [5.476, -3];\n        buildings[2][0].current = [0, 0];\n        buildings[3][0].current = [0, 0];\n        const maxBuildings = [6, 7, 6, 6, 5];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift(['Preon.png', 'Preon'], ['Quarks.png', 'Quarks']);\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 3, 5, 10, 20];\n        buildingsInfo.type[2][1] = 'improves';\n        buildingsInfo.type[3][1] = 'improves';\n        buildingsInfo.increase[5][1] = 4;\n        buildingsInfo.increase[5][2] = 4;\n\n        const upgrades1Cost = [32, 48, 60, 90, 150, 400, 1600, 4000, 32000, 100000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[2].startCost[0] = 10;\n        //upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        //upgradesInfo[3].maxActive = 13;\n        //upgradesInfo[4].maxActive = 4;\n        //upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [2500, 8000, 40000, 8000, 58000, 36000];\n        const researches1Scaling = [500, 4000, 6000, 38000, 0, 8000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 8;\n        //researchesInfo[4].maxActive = 4;\n        //researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[3].scaling[3] = 1e14;\n        researchesExtraInfo[1].maxActive = 5;\n        researchesExtraInfo[2].maxActive = 4;\n        researchesExtraInfo[3].maxActive = 5;\n        //researchesExtraInfo[4].maxActive = 2;\n        //researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 2.47e31;\n        global.researchesAutoInfo.startCost[0] = 2000;\n        global.researchesAutoInfo.scaling[0] = 29000;\n        global.ASRInfo.costRange[1] = [4000, 12000, 24000, 32000, 44000];\n\n        const strangeness1Cost = [2, 1, 20, 40, 2, 1, 2, 4, 20];\n        const strangeness1Scaling = [3, 3, 2, 100, 3, 1.4, 1.8, 3, 1];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 3, 4, 20, 4, 1, 4, 30];\n        const strangeness2Scaling = [1.5, 2, 3, 3, 500, 1.6, 2, 4, 1];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 2, 6, 18, 30, 3, 10, 20];\n        const strangeness3Scaling = [1.46, 2.5, 2, 1, 200, 1.8, 3, 1];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 3, 5, 5, 90, 20, 4, 4, 24, 40];\n        const strangeness4Scaling = [1.8, 2, 3, 4, 1, 40, 1.8, 1.8, 1, 1];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [4, 12, 4000, 5, 10, 40, 1200, 60, 1500];\n        const strangeness5Scaling = [1, 1, 1, 1.8, 1.75, 1, 5, 1.5, 1];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        strangenessInfo[1].maxActive = 12;\n        strangenessInfo[2].maxActive = 11;\n        strangenessInfo[3].maxActive = 12;\n        strangenessInfo[4].maxActive = 12;\n        strangenessInfo[5].maxActive = 10;\n\n        getId('milestonesWelcome').innerHTML = 'Milestones, can only be done when inside the <span class=\"darkvioletText\">Void</span>';\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        milestone1S2.src = milestone1S2.src.replace('Drop.png', 'Clouds.png');\n        milestone1S2.alt = 'Clouds';\n        const milestone2S5 = getQuery('#milestone2Stage5Div > img') as HTMLImageElement;\n        milestone2S5.src = milestone2S5.src.replace('Galaxy.png', 'Galaxy%20Filaments.png');\n        milestone2S5.alt = 'Galaxy Filaments';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#historyMainDiv p').textContent = 'Stage resets:';\n\n        getId('strange10Stage2').style.display = '';\n        getId('strange9Stage3').style.display = '';\n        getId('strange10Stage3').style.display = '';\n        getId('strange11Stage4').style.display = '';\n\n        getId('strangeBoostMain').style.display = '';\n        getId('strange9Stage1').style.display = '';\n        getId('strange8Stage2').style.display = '';\n        getId('strange9Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange9Stage4').style.display = '';\n        getId('strange10Stage4').style.display = '';\n        getId('strange6Stage5').style.display = '';\n        for (let s = 2; s <= 5; s++) {\n            getId(`strangenessSection${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            if (s !== 5) { getId(`milestone2Stage${s}Div`).style.display = ''; }\n        }\n        getId('unknownStructures').style.display = 'none';\n        getQuery('#stageInput ~ span').style.display = 'none';\n        for (const element of getClass('vacuum')) { element.style.display = ''; }\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'Quarks', 'stage1borderImage cyanText', 'Quarks'];\n        buildings[1][0].current = [3, 0];\n        buildings[2][0].current = [2.8, -3];\n        buildings[3][0].current = [1, -19];\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n        }\n        const maxBuildings = [4, 6, 5, 5, 4];\n        buildingsInfo.maxActive.splice(1, maxBuildings.length, ...maxBuildings);\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.firstCost[1] = [0, 3, 24, 3];\n        global.dischargeInfo.energyType[1] = [0, 1, 5, 20];\n        buildingsInfo.type[2][1] = 'producing';\n        buildingsInfo.type[3][1] = 'producing';\n        buildingsInfo.increase[5][1] = 2;\n        buildingsInfo.increase[5][2] = 2;\n\n        const upgrades1Cost = [0, 0, 9, 12, 36, 300, 800, 2000, 8000, 30000];\n        upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n        upgradesInfo[2].startCost[0] = 10000;\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 7;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 3;\n\n        const researches1Cost = [1000, 3000, 12000, 6000, 10000, 20000];\n        const researches1Scaling = [500, 2000, 2000, 26000, 0, 5000];\n        researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n        researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 8;\n        researchesInfo[4].maxActive = 4;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[3].scaling[3] = 100;\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 2;\n        researchesExtraInfo[5].maxActive = 0;\n\n        global.accretionInfo.rankCost[5] = 0;\n        global.researchesAutoInfo.startCost[0] = 300;\n        global.researchesAutoInfo.scaling[0] = 21850;\n        global.ASRInfo.costRange[1] = [4000, 12000, 20000];\n\n        const strangeness1Cost = [1, 1, 2, 4, 4, 1, 2, 2, 10];\n        const strangeness1Scaling = [1.5, 1, 3, 0, 2, 0.25, 2, 1.5, 0];\n        strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n        strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n        const strangeness2Cost = [1, 2, 2, 1, 3, 2, 1, 3, 8];\n        const strangeness2Scaling = [0.2, 0.5, 1.5, 2, 0, 1, 0.5, 2.5, 0];\n        strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n        strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n        const strangeness3Cost = [1, 1, 3, 4, 3, 2, 5, 6];\n        const strangeness3Scaling = [0.75, 1.5, 2.5, 0, 0, 1, 3.5, 0];\n        strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n        strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n        const strangeness4Cost = [1, 1, 3, 2, 4, 3, 3, 2, 4, 4];\n        const strangeness4Scaling = [1, 1.5, 1.5, 2, 0, 0, 1, 2.5, 0, 0];\n        strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n        strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n        const strangeness5Cost = [120, 10, 20, 5, 10, 20, 800, 20, 40];\n        const strangeness5Scaling = [60, 0, 0, 5, 10, 0, 400, 20, 0];\n        strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n        strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n        strangenessInfo[1].maxActive = 9;\n        strangenessInfo[2].maxActive = 9;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 9;\n\n        getId('milestonesWelcome').innerHTML = 'For every reached Milestone, will earn <span class=\"greenText\">Strange quarks</span> and maybe more';\n        const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        milestone1S2.src = milestone1S2.src.replace('Clouds.png', 'Drop.png');\n        milestone1S2.alt = 'Drop of water';\n        const milestone2S5 = getQuery('#milestone2Stage5Div > img') as HTMLImageElement;\n        milestone2S5.src = milestone2S5.src.replace('Galaxy%20Filaments.png', 'Galaxy.png');\n        milestone2S5.alt = 'Galaxy';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#historyMainDiv p').textContent = 'Intergalactic Stage resets:';\n\n        for (const element of getClass('vacuum')) { element.style.display = 'none'; }\n        for (let s = 1; s < strangenessInfo.length; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].startCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n\n        getId('rankStat0').style.display = '';\n        getId('autoToggle8').style.display = 'none';\n        for (let i = 0; i < global.challengesInfo.name.length; i++) {\n            getId(`challenge${i + 1}`).style.display = 'none';\n        }\n        getQuery('#stageInput ~ span').style.display = '';\n    }\n\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total = cloneArray(newValue);\n        buildings[s][0].trueTotal = cloneArray(newValue);\n        buildings[s][0].highest = cloneArray(newValue);\n    }\n};\n\nexport const switchVacuum = async() => {\n    if (player.inflation.vacuum) { return Alert('This cannot be undone'); }\n    const { milestones } = player;\n    let count = 0;\n\n    if (milestones[1][0] >= 5) { count++; }\n    if (milestones[2][1] >= 4) { count++; }\n    if (milestones[3][1] >= 5) { count++; }\n    if (milestones[4][1] >= 5) { count++; }\n    if (milestones[5][1] >= 8) { count++; }\n    if (count < 5) { return Alert(`Universe is still stable. Vacuum state is false. ${5 - count} more`); }\n\n    if (!(await Confirm('This will not be possible to undo. Confirm?'))) { return; }\n    await AlertWait('Universe is too unstable. Vacuum instability is imminent');\n    player.inflation.vacuum = true;\n    if (player.stage.true < 6) { player.stage.true = 6; }\n    player.stage.current = 1;\n    player.stage.active = 1;\n    prepareVacuum();\n    resetVacuum();\n};\n\nexport const updateUnknown = () => {\n    const { milestones } = player;\n\n    let text = '<h4 class=\"darkvioletText\">Unknown Structures:</h4>';\n    if (milestones[1][0] >= 5) { text += '<img src=\"Used_art/Preon.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[2][1] >= 4) { text += '<img src=\"Used_art/Ocean.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[3][1] >= 5) { text += '<img src=\"Used_art/Subsatellite.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[4][1] >= 5) { text += '<img src=\"Used_art/Quasi%20star.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n    if (milestones[5][1] >= 8) { text += '<img src=\"Used_art/Galaxy%20Filaments.png\" alt=\"Unknown Structure\" loading=\"lazy\">'; }\n\n    const div = getId('unknownStructures');\n    div.style.display = milestones[1][0] >= 5 || milestones[2][1] >= 4 || milestones[3][1] >= 5 || milestones[4][1] >= 5 || milestones[5][1] >= 8 ? '' : 'none';\n    if (div.innerHTML !== text) { div.innerHTML = text; }\n};\n", "import { checkTab } from './Check';\nimport Limit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { global, player } from './Player';\nimport { playEvent, assignWithNoMove, specialHTML, switchTheme, Alert } from './Special';\nimport { autoElementsBuy, autoElementsSet, autoResearchesBuy, autoResearchesSet, autoUpgradesBuy, autoUpgradesSet, buyBuilding, calculateBuildingsCost, calculateGainedBuildings, assignBuildingInformation, collapseResetCheck, dischargeResetCheck, rankResetCheck, stageResetCheck, toggleSwap, vaporizationResetCheck, assignDischargeInformation, assignVaporizationInformation, assignCollapseInformation, minShift, maxShift, calculateGainedStrangeness, switchStage } from './Stage';\nimport { overlimit } from './Types';\nimport { updateUnknown } from './Vacuum';\n\nexport const switchTab = (tab: string, subtab = null as null | string) => {\n    if (subtab === null) {\n        const oldTab = global.tab;\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n        if (Object.hasOwn(global.subtab, `${oldTab}Current`)) {\n            for (const inside of global.tabList[`${oldTab as 'stage'}Subtabs`]) {\n                getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n            }\n        }\n\n        global.tab = tab;\n        let subtabAmount = 0;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n        if (Object.hasOwn(global.subtab, `${tab}Current`)) {\n            for (const inside of global.tabList[`${tab as 'stage'}Subtabs`]) {\n                if (checkTab(tab, inside)) {\n                    getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                    subtabAmount++;\n                } else {\n                    if (global.subtab[`${tab as 'stage'}Current`] === inside) {\n                        switchTab(tab, global.tabList[`${tab as 'stage'}Subtabs`][0]);\n                    }\n                }\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${tab as 'stage'}Current`]}'` : ''}`;\n    } else {\n        const oldSubtab = global.subtab[`${tab as 'stage'}Current`];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[`${tab as 'stage'}Current`] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (global.screenReader) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    if (global.lastActive !== null) {\n        switchStage(global.lastActive);\n        global.lastActive = null;\n    } else if (tab === 'Elements' || (tab === 'research' && (global.subtab.researchCurrent === 'Elements' || subtab === 'Elements'))) {\n        const active = player.stage.active;\n        if (active !== 4 && active !== 5) {\n            global.lastActive = active;\n            switchStage(4);\n        }\n    }\n    visualUpdate();\n    numbersUpdate();\n};\n\n//In seconds\nexport const maxOfflineTime = (): number => player.stage.true >= 6 ? (28800 + 28800 * player.researchesAuto[1]) : ((14400 + 14400 * player.researchesAuto[1]) * (1 + 0.5 * player.strangeness[2][7]));\nexport const maxExportTime = (): number => player.stage.true >= 6 ? 172800 : 86400 * (1 + player.strangeness[4][8]);\nexport const exportMultiplier = (): number => {\n    let mult;\n    if (player.inflation.vacuum) {\n        mult = player.strangeness[4][7] * 2;\n        if (player.strangeness[4][8] >= 1) { mult += player.stage.best / 5; }\n    } else {\n        mult = player.strangeness[4][7];\n        if (player.stage.true >= 6 && player.strangeness[4][8] >= 1) { mult += Math.floor(player.stage.best / 5); }\n    }\n    return mult;\n};\n\nlet alerted = false;\nexport const timeUpdate = (timeWarp = 0) => { //Time based information\n    const { toggles, inflation } = player;\n\n    let passedSeconds: number;\n    if (timeWarp > 0) {\n        const extraTime = Math.min(60, timeWarp);\n        passedSeconds = extraTime;\n        timeWarp -= extraTime;\n    } else {\n        const { time } = player;\n\n        const currentTime = Date.now();\n        passedSeconds = (currentTime - time.updated) / 1000;\n        time.updated = currentTime;\n        if (passedSeconds < 0) {\n            time.offline += passedSeconds;\n            if (time.offline < -28800) { time.disabled = currentTime - (28800 + time.offline) * 1000; }\n            return;\n        }\n        global.lastSave += passedSeconds;\n        player.stage.export = Math.min(player.stage.export + passedSeconds, maxExportTime());\n        if (time.offline > 0 && (toggles.normal[0] || player.researchesAuto[0] < 3)) {\n            const extraTime = Math.min(Math.max(time.offline / 3600, 1) * passedSeconds, time.offline);\n            time.offline -= Math.min(extraTime * (6 - (player.stage.true >= 6 ? player.strangeness[2][7] : 0)), time.offline);\n            passedSeconds += extraTime;\n        }\n    }\n    const { buildingsInfo, automatization } = global;\n    player.stage.time += passedSeconds;\n    inflation.age += passedSeconds;\n\n    calculateGainedStrangeness(0, passedSeconds);\n    assignBuildingInformation();\n    if (inflation.vacuum && toggles.auto[0]) { stageResetCheck(5, true); }\n    for (const s of global.stageInfo.activeAll) {\n        if (!inflation.vacuum && toggles.auto[0]) { stageResetCheck(s, true); }\n        if (s === 4) {\n            if (toggles.auto[4]) { collapseResetCheck(true); }\n            if (automatization.elements.length !== 0) { autoElementsBuy(); }\n        } else if (s === 3) {\n            if (toggles.auto[3]) { rankResetCheck(true); }\n        } else if (s === 2) {\n            if (toggles.auto[2]) { vaporizationResetCheck(true); }\n        } else if (s === 1) {\n            if (toggles.auto[1]) { dischargeResetCheck('interval'); }\n        }\n\n        if (automatization.autoU[s].length !== 0) { autoUpgradesBuy(s); }\n        if (automatization.autoR[s].length !== 0) { autoResearchesBuy('researches', s); }\n        if (automatization.autoE[s].length !== 0) { autoResearchesBuy('researchesExtra', s); }\n\n        for (let i = buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n            if (toggles.buildings[s][i] && player.ASR[s] >= i) { buyBuilding(i, s, true); }\n            if (buildingsInfo.type[s][i] === 'producing') {\n                calculateGainedBuildings(i - 1, s, passedSeconds);\n            }\n        }\n        if (s === 1) { //Molecules from Radiation\n            if (player.upgrades[1][8] === 1) { calculateGainedBuildings(inflation.vacuum ? 5 : 3, 1, passedSeconds); }\n        } else if (s === 5) { //Stars from Nebulas\n            const research = player.researches[5][0];\n\n            if (research >= 1) { calculateGainedBuildings(1, 5, passedSeconds); }\n            if (research >= 2) { calculateGainedBuildings(2, 5, passedSeconds); }\n            if (research >= 3) { calculateGainedBuildings(3, 5, passedSeconds); }\n        }\n    }\n\n    if (player.strangeness[1][11] >= 1) { //Delete\n        const { getEnergy, energyType } = global.dischargeInfo;\n\n        let test = 0;\n        for (let s = 1; s < energyType.length; s++) {\n            const buildings = player.buildings[s];\n            for (let i = 1; i < energyType[s].length; i++) {\n                test += getEnergy(i, s) * buildings[i as 1].true;\n            }\n        }\n        if (test !== player.discharge.energy) {\n            if (!alerted) {\n                Alert('If you seeing this Alert, then report it on Discord, error code is 1 (also check console for numbers)');\n                alerted = true;\n            }\n            console.log(test, player.discharge.energy);\n        }\n    }\n    {\n        const check = player.buildings[4][1].true + player.buildings[4][2].true + player.buildings[4][3].true + player.buildings[4][4].true + player.buildings[4][5].true;\n        if (check !== global.collapseInfo.trueStars) {\n            if (!alerted) {\n                Alert('If you seeing this Alert, then report it on Discord, error code is 2 (also check console for numbers)');\n                alerted = true;\n            }\n            console.log(check, global.collapseInfo.trueStars);\n        }\n    }\n\n    if (timeWarp > 0) { timeUpdate(timeWarp); }\n};\n\nexport const numbersUpdate = () => { //This is for relevant visual info\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n\n    if (global.footer) {\n        if (active === 1) {\n            getId('footerStat1Span').textContent = Limit(buildings[0].current).format({ padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy);\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = Limit(player.vaporization.clouds).format();\n            getId('footerStat2Span').textContent = !player.inflation.vacuum ? Limit(buildings[0].current).format({ padding: true }) :\n                Limit(player.buildings[1][5].current).divide('6.02214076e23').format({ padding: true });\n            getId('footerStat3Span').textContent = Limit(buildings[1].current).format({ padding: buildings[2].current[0] > 0 });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = !player.inflation.vacuum ? Limit(buildings[0].current).format({ padding: true }) :\n                Limit(player.buildings[1][0].current).multiply('1.78266192e-33').format({ padding: true });\n        } else if (active === 4 || active === 5) {\n            getId('footerStat1Span').textContent = format(player.collapse.mass);\n            getId('footerStat2Span').textContent = Limit(player.buildings[4][0].current).format({ padding: true });\n            if (active === 5) {\n                getId('footerStat3Span').textContent = Limit(buildings[0].current).format();\n            }\n        }\n    }\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const howMany = player.toggles.shop.howMany;\n\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                assignWithNoMove(getId(`building${i}Cur`), Limit(buildings[i].current).format({ padding: trueCountID.style.display !== 'none' }));\n                getId(`building${i}Prod`).textContent = Limit(buildingsInfo.producing[active][i]).format({ padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true)}]`;\n\n                if ((active === 4 && player.collapse.mass < global.collapseInfo.unlockB[i]) ||\n                    (active === 5 && player.collapse.mass < global.collapseInfo.unlockG[i])) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Unlocked at ${format(global.collapseInfo[active === 4 ? 'unlockB' : 'unlockG'][i])} Mass`;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | overlimit;\n                if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 2) {\n                        if (i !== 1) { e = 1; } //Drops\n                    } else if (active >= 3) { //3, 4, 5\n                        e = 0; //Mass || Elements\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let totalBuy = 1;\n                let totalCost = calculateBuildingsCost(i, active);\n                if (howMany !== 1 && player.researchesAuto[0] > 0) {\n                    const increase = buildingsInfo.increase[active][i];\n                    const firstCost = buildingsInfo.firstCost[active][i];\n                    const alreadyBought = buildings[i as 1].true;\n                    const totalBefore = Limit(increase).power(alreadyBought).minus('1').divide(increase - 1).multiply(firstCost).toArray();\n\n                    if (howMany === -1) {\n                        const maxAfford = Math.floor(Limit(totalBefore).plus(currency).multiply(increase - 1).divide(firstCost).plus('1').log(10).divide(Math.log10(increase)).toNumber()) - alreadyBought;\n                        if (maxAfford > 1) { totalBuy = howMany === -1 ? maxAfford : Math.min(maxAfford, howMany); }\n                    } else { totalBuy = howMany; }\n                    if (totalBuy > 1) { totalCost = Limit(increase).power(totalBuy + alreadyBought).minus('1').divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray(); }\n                }\n\n                getId(`building${i}BuyX`).textContent = format(totalBuy);\n                if (Limit(totalCost).lessOrEqual(currency)) {\n                    getId(`building${i}`).classList.add('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Make for: ${Limit(totalCost).format({ padding: true })} ${costName}`;\n                } else {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = `Need: ${Limit(totalCost).format({ padding: true })} ${costName}`;\n                }\n            }\n            if (active === 1) {\n                assignDischargeInformation();\n                const effect = getId('dischargeEffect');\n                if (effect !== null) { effect.textContent = format(global.upgradesInfo[1].effect[5] as number); }\n                getId('reset1Button').textContent = `Next goal is ${format(global.dischargeInfo.next)} Energy`;\n            } else if (active === 2) {\n                assignVaporizationInformation();\n                getId('reset1Button').textContent = `Reset for ${Limit(global.vaporizationInfo.get).format({ padding: true })} Clouds`;\n            } else if (active === 4) {\n                const { collapse } = player;\n                const { collapseInfo } = global;\n                assignCollapseInformation();\n\n                getId('reset1Button').textContent = `Collapse to ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                for (let i = 1; i <= 3; i++) {\n                    getId(`starSpecial${i}Cur`).textContent = format(collapse.stars[i - 1]);\n                    getId(`starSpecial${i}Get`).textContent = format(collapseInfo.starCheck[i - 1]);\n                }\n            }\n\n            getId('stageTime').textContent = format(player.stage.time, { type: 'time' });\n            if (player.time.offline > 0 && (player.toggles.normal[0] || player.researchesAuto[0] < 3)) {\n                const time = Math.max(player.time.offline / 3600, 1);\n                getId('offlineBoostEffect').textContent = `+${format(time * 1, { digits: 0 })} seconds`;\n                getId('offlineBoostWaste').textContent = `${format(time * (6 - (player.stage.true >= 6 ? player.strangeness[2][7] : 0)), { digits: 0 })} seconds`;\n            }\n            if (global.lastUpgrade[0]) { getUpgradeDescription(global.lastUpgrade[1], player.stage.active, 'upgrades'); }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            getId('universeAge').textContent = format(player.inflation.age, { type: 'time' });\n        }\n    } else if (tab === 'research' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.researchCurrent;\n        if (trueSubtab === 'Researches') {\n            if (global.lastResearch[0]) { getUpgradeDescription(global.lastResearch[1], player.stage.active, global.lastResearch[2]); }\n        } else if (trueSubtab === 'Elements') {\n            if (global.lastElement[0]) { getUpgradeDescription(global.lastElement[1], 4, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            if (player.challenges.active === -1) {\n                const stageGain = global.strangeInfo.gain(active) / 100 ** player.strangeness[5][9];\n                getId('strangeGain').textContent = `${format(stageGain)} ${global.strangeInfo.strangeName[player.strangeness[5][9]]}`;\n                getId('strangeTime').textContent = `${format(stageGain / player.stage.time, { padding: true })} per second`;\n            }\n            getId('strangeBoost').textContent = global.strangeInfo.stageBoost[active] !== null ? format(global.strangeInfo.stageBoost[active] as number) : 'none';\n            getId('strange0Cur').textContent = format(player.strange[0].current);\n            getId('strange1Cur').textContent = format(player.strange[1].current);\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            assignWithNoMove(getId('exportGain'), format(player.stage.export * exportMultiplier() / 86400 / 100 ** player.strangeness[5][9], { padding: true }));\n            if (global.lastSave >= 1) { getId('isSaved').textContent = `${format(global.lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            getId('firstPlay').textContent = global.timeMode ? `${format((Date.now() - player.time.started) / 1000, { type: 'time' })} ago` : new Date(player.time.started).toLocaleString();\n            getId('stageResetsCount').textContent = format(player.stage.resets);\n            getId('stageBestGain').textContent = format(player.stage.best);\n            getId('offlineStat').textContent = format(player.time.offline, { type: 'time' });\n            getId('maxOfflineStat').textContent = format(maxOfflineTime(), { type: 'time' });\n            getId('maxExportStat').textContent = format(exportMultiplier() * maxExportTime() / 86400 / 100 ** player.strangeness[5][9]);\n            if (active === 1) {\n                getId('maxEnergyStat').textContent = format(player.discharge.energyMax);\n                getId('dischargeStat').textContent = format(player.discharge.current);\n                getId('dischargeStatBonus').textContent = `[+${format(global.dischargeInfo.bonus)}]`;\n                if (player.inflation.vacuum) {\n                    assignWithNoMove(getId('preonCapStat'), Limit(global.inflationInfo.preonCap).format({ padding: true }));\n                }\n            } else if (active === 2) {\n                getId('maxCloudsStat').textContent = Limit(player.vaporization.cloudsMax).format();\n\n                if (player.inflation.vacuum) {\n                    const moles = player.buildings[1][5];\n\n                    buildings[0].trueTotal = Limit(moles.trueTotal).divide('6.02214076e23').toArray();\n                    buildings[0].highest = Limit(moles.highest).divide('6.02214076e23').toArray();\n                }\n            } else if (active === 3) {\n                getId('effectiveRank').textContent = format(global.accretionInfo.effective);\n                if (player.inflation.vacuum) {\n                    const mass = player.buildings[1][0];\n\n                    buildings[0].total = Limit(mass.total).multiply('1.78266192e-33').toArray();\n                    buildings[0].trueTotal = Limit(mass.trueTotal).multiply('1.78266192e-33').toArray();\n                    buildings[0].highest = Limit(mass.highest).multiply('1.78266192e-33').toArray();\n\n                    assignWithNoMove(getId('dustCapStat'), Limit(global.inflationInfo.dustCap).format({ padding: true }));\n                    getId('massShiftMin').textContent = format(minShift());\n                    getId('massShiftMax').textContent = format(maxShift());\n                }\n            } else if (active === 4 || active === 5) {\n                getId('maxSolarMassStat').textContent = format(player.collapse.massMax);\n                if (player.inflation.vacuum) {\n                    assignCollapseInformation();\n                    assignWithNoMove(getId('mainCapStat'), Limit(global.buildingsInfo.producing[1][1]).multiply('8.96499278339628e-67', global.inflationInfo.massCap).format({ padding: true }));\n                    getId('mainCapLimit').textContent = format(global.inflationInfo.massCap, { type: 'time' });\n                }\n                if (active === 4) {\n                    const { starEffect, massEffect } = global.collapseInfo;\n\n                    const before = massEffect();\n                    assignWithNoMove(getId('starMassStatCurrent'), format(before, { padding: true }));\n                    assignWithNoMove(getId('starMassStatAfter'), `x${format(massEffect(true) / before, { padding: true })}`);\n                    for (let i = 0; i <= 2; i++) {\n                        const before = starEffect[i]();\n                        assignWithNoMove(getId(`star${i + 1}StatCurrent`), format(before, { padding: true }));\n                        assignWithNoMove(getId(`star${i + 1}StatAfter`), `x${format(starEffect[i](true) / before, { padding: true })}`);\n                    }\n                } else if (active === 5) {\n                    getId('starsStatTrue').textContent = format(global.collapseInfo.trueStars);\n                    const stars = player.buildings[4];\n\n                    buildings[0].total = Limit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total).toArray();\n                    buildings[0].trueTotal = Limit(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal).toArray();\n                    buildings[0].highest = Limit(stars[1].highest).plus(stars[2].highest, stars[3].highest, stars[4].highest, stars[5].highest).toArray();\n                }\n            }\n            for (let i = 0; i < buildings.length; i++) {\n                getId(`building${i}StatTotal`).textContent = Limit(buildings[i].total).format();\n                getId(`building${i}StatTrueTotal`).textContent = Limit(buildings[i].trueTotal).format();\n                getId(`building${i}StatHighest`).textContent = Limit(buildings[i].highest).format();\n            }\n            for (let i = 0; i < player.strange.length; i++) {\n                getId(`strange${i}StatTotal`).textContent = format(player.strange[i].total);\n            }\n        }\n    }\n};\n\nexport const visualUpdate = () => { //This is what can appear/disappear when inside Stage\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n\n    if (global.mobileDevice && global.footer) {\n        const fix = getId('footerStats'); /* Temporary (I hope) */\n        fix.style.justifyContent = fix.scrollWidth > fix.clientWidth ? 'start' : '';\n    }\n\n    if (active === 1) {\n        if (global.footer) {\n            getId('footerStat2').style.display = player.discharge.unlock ? '' : 'none';\n            if (player.stage.resets < 1) { getId('researchTabBtn').style.display = player.discharge.current >= 4 ? '' : 'none'; }\n        }\n        if (!player.events[0] && player.upgrades[1][6] === 1) { playEvent(0, 0); }\n    } else if (active === 2) {\n        if (global.footer) { getId('footerStat1').style.display = player.upgrades[2][1] === 1 ? '' : 'none'; }\n        if (!player.events[0]) {\n            assignVaporizationInformation();\n            if (Limit(global.vaporizationInfo.get).plus(player.vaporization.clouds).moreThan('1e4')) { playEvent(1, 0); }\n        }\n    } else if (active === 3) {\n        if (!player.events[0] && Limit(player.buildings[3][0].current).moreOrEqual('5e29')) { playEvent(2, 0); }\n    } else if (active === 4) {\n        if (!player.events[0] && player.researchesExtra[4][0] >= 1) { playEvent(3, 0); }\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const researchAuto0 = player.researchesAuto[0];\n            const ASR = player.ASR[active];\n\n            if (!player.inflation.vacuum) {\n                const resetMessage = active >= 4 ? 'Return back to start' : active === player.stage.current ? 'Enter next Stage' : 'Reset this Stage';\n                const failMessage = (active >= 4 ? player.strange[0].total === 0 : active === player.stage.current) ? 'Not ready for more' : 'Not ready for reset';\n                getId('stageReset').textContent = (active >= 4 ? player.events[1] && player.stage.current >= 5 : stageResetCheck(active)) ? resetMessage : failMessage;\n            }\n\n            getId('toggleBuy').style.display = researchAuto0 >= 1 ? '' : 'none';\n            getId('toggleBuilding0').style.display = researchAuto0 >= 2 ? '' : 'none';\n            getId('offlineBoost').style.display = player.time.offline > 0 && (player.toggles.normal[0] || player.researchesAuto[0] < 3) ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = Limit(buildings[i].current).notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n                getId(`building${i}BuyDiv`).style.display = researchAuto0 > 0 ? '' : 'none';\n            }\n            if (active === 1) {\n                const discharge = player.discharge.current;\n\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual(player.inflation.vacuum ? '4' : '11') ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[2].trueTotal).moreOrEqual('2') ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('building4').style.display = Limit(buildings[3].trueTotal).moreOrEqual('8') ? '' : 'none';\n                    getId('building5').style.display = Limit(buildings[4].trueTotal).moreOrEqual('2') ? '' : 'none';\n                }\n                getId('upgrades').style.display = player.discharge.unlock ? '' : 'none';\n                getId('upgrade7').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade8').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = discharge >= 3 ? '' : 'none';\n                getId('upgrade10').style.display = discharge >= 3 ? '' : 'none';\n                if (player.stage.true < 2) { getId('resetStage').style.display = player.upgrades[1][9] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][1] === 1 ? '' : 'none';\n                getId('building2').style.display = Limit(buildings[1].trueTotal).moreOrEqual('300') ? '' : 'none';\n                getId('building3').style.display = Limit(buildings[1].trueTotal).moreOrEqual('2e6') ? '' : 'none';\n                getId('building4').style.display = Limit(buildings[1].trueTotal).moreOrEqual('2e17') ? '' : 'none';\n                getId('building5').style.display = Limit(buildings[1].trueTotal).moreOrEqual('2e22') ? '' : 'none';\n                getId('upgrade2').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade3').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade5').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade6').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n                getId('upgrade7').style.display = buildings[5].trueTotal[0] > 0 && player.strangeness[2][2] >= 3 ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('building6').style.display = player.strangeness[2][9] >= 1 && Limit(buildings[1].trueTotal).moreOrEqual('4e24') ? '' : 'none';\n                    getId('upgrade8').style.display = buildings[6].trueTotal[0] > 0 && player.strangeness[2][9] >= 2 ? '' : 'none';\n                }\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n                getId('building2').style.display = upgrades[2] === 1 ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 ? '' : 'none';\n                getId('building4').style.display = upgrades[6] === 1 ? '' : 'none';\n                if (player.inflation.vacuum) { getId('building5').style.display = upgrades[6] === 1 && player.strangeness[3][8] >= 1 && player.accretion.rank >= 5 ? '' : 'none'; }\n                getId('upgrade4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                if (upgrades[4] === 1) { getId('upgrade6').style.display = ''; }\n                getId('upgrade9').style.display = player.accretion.rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n            } else if (active === 4) {\n                const upgrades = player.upgrades[4];\n                const nova = player.researchesExtra[4][0];\n\n                getId('starsSpecial').style.display = nova >= 1 ? '' : 'none';\n                getId('starSpecial2').style.display = nova >= 2 ? '' : 'none';\n                getId('starSpecial3').style.display = nova >= 3 ? '' : 'none';\n                getId('reset1Main').style.display = upgrades[0] === 1 ? '' : 'none';\n                if (!player.inflation.vacuum) {\n                    getId('building2').style.display = upgrades[1] === 1 ? '' : 'none';\n                    getId('building3').style.display = upgrades[2] === 1 ? '' : 'none';\n                    getId('building4').style.display = player.collapse.mass >= 10 || player.buildings[5][3].true > 0 ? '' : 'none';\n                } else { getId('building5').style.display = player.strangeness[4][10] >= 1 ? '' : 'none'; }\n                getId('upgrade4').style.display = player.strangeness[4][2] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    const nebula = player.milestones[2][0] >= 3;\n                    const cluster = player.milestones[3][0] >= 3;\n\n                    getId('buildings').style.display = nebula || cluster ? '' : 'none';\n                    getId('building1').style.display = nebula ? '' : 'none';\n                    getId('building2').style.display = cluster ? '' : 'none';\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                } else { getId('building4').style.display = 'none'; }\n                getId('building3').style.display = player.strangeness[5][6] >= 1 ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].true >= 1 ? '' : 'none';\n            }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (player.inflation.vacuum) {\n                getId('challenge1').style.display = player.strangeness[5][0] >= 1 ? '' : 'none';\n            }\n        }\n    } else if (tab === 'research' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.researchCurrent;\n        if (trueSubtab === 'Researches') {\n            getId('researchAuto3').style.display = player.strangeness[3][6] >= 1 ? '' : 'none';\n\n            if (active === 1) {\n                if (player.inflation.vacuum) {\n                    getId('extraResearch').style.display = player.discharge.current >= 5 ? '' : 'none';\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('extraResearch').style.display = Limit(player.vaporization.clouds).moreThan('1') ? '' : 'none';\n                getId('research3').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research4').style.display = buildings[2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research5').style.display = buildings[3].trueTotal[0] > 0 ? '' : 'none';\n                getId('research6').style.display = buildings[4].trueTotal[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = buildings[5].trueTotal[0] > 0 ? '' : 'none';\n            } else if (active === 3) {\n                if (player.upgrades[3][4] === 1) { getId('research6').style.display = ''; }\n                getId('research3').style.display = player.buildings[3][2].trueTotal[0] > 0 ? '' : 'none';\n                getId('research4').style.display = player.buildings[3][2].trueTotal[0] > 0 ? '' : 'none';\n                if (player.inflation.vacuum) {\n                    getId('researchExtra5').style.display = player.accretion.rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                getId('research4').style.display = player.strangeness[4][2] >= 2 ? '' : 'none';\n                getId('extraResearch').style.display = player.buildings[4][2].trueTotal[0] > 0 ? '' : 'none';\n                getId('researchExtra2').style.display = player.strangeness[4][2] >= 3 ? '' : 'none';\n            } else if (active === 5) {\n                if (!player.inflation.vacuum) {\n                    getId('stageResearch').style.display = player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3 ? '' : 'none';\n                    getId('research1').style.display = player.milestones[2][0] >= 3 ? '' : 'none';\n                    getId('research2').style.display = player.milestones[3][0] >= 3 ? '' : 'none';\n                }\n            }\n        } else if (trueSubtab === 'Elements') {\n            const mass = player.collapse.mass >= 10 || player.buildings[5][3].true > 0;\n            const upgrades = player.upgrades[4];\n            const grid = getId('elementsGrid');\n\n            grid.style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            upgrades[2] === 1 && !mass ? grid.classList.add('Elements10App') : grid.classList.remove('Elements10App');\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = mass ? '' : 'none'; }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const vacuum = player.inflation.vacuum;\n            const bound = player.strangeness[5][5] >= 1;\n\n            getId('strangeStageReset').style.display = player.challenges.active === -1 ? '' : 'none';\n            getId('strange1').style.display = player.strangeness[5][9] >= 1 ? '' : 'none';\n            getId('strange4Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 3) ? '' : 'none';\n            getId('strange5Stage5').style.display = (vacuum ? bound : player.milestones[3][0] >= 3) ? '' : 'none';\n            getId('strange8Stage5').style.display = (vacuum ? bound : player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3) ? '' : 'none';\n            getId('strange7Stage5').style.display = bound ? '' : 'none';\n            if (vacuum) {\n                const voidProgress = player.challenges.void;\n\n                getId('strange10Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange11Stage1').style.display = voidProgress[1] >= 4 ? '' : 'none';\n                getId('strange12Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange11Stage2').style.display = voidProgress[2] >= 3 ? '' : 'none';\n                getId('strange11Stage3').style.display = voidProgress[1] >= 2 ? '' : 'none';\n                getId('strange12Stage3').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange12Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange9Stage5').style.display = voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange10Stage5').style.display = voidProgress[3] >= 5 ? '' : 'none';\n            } else {\n                const strange5 = player.milestones[4][0] >= 3;\n\n                getId('strangeBoostMain').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange9Stage4').style.display = strange5 ? '' : 'none';\n                getId('strange10Stage4').style.display = strange5 ? '' : 'none';\n                getId('strangenessSection5').style.display = strange5 ? '' : 'none';\n                getId('strange6Stage5').style.display = player.milestones[2][0] >= 3 || player.milestones[3][0] >= 3 ? '' : 'none';\n            }\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            if (!player.inflation.vacuum) {\n                getId('milestone1Stage5Div').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = player.strangeness[5][8] >= 1 && player.strangeness[5][6] >= 1 ? '' : 'none';\n            } else {\n                getId('milestone2Stage5Div').style.display = /*player.strangeness[5][10] >= 1 ? '' :*/ 'none';\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { stage, researchesAuto, strangeness } = player;\n\n            getId('toggleAuto0').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('toggleAuto0Mark').style.display = strangeness[5][2] >= 1 ? '' : 'none';\n            getId('exportSpecial').style.display = strangeness[4][7] >= 1 ? '' : 'none';\n            getId('exportType').textContent = global.strangeInfo.strangeName[strangeness[5][9]];\n            if (player.inflation.vacuum) {\n                if (stage.resets < 1 && stage.current < 5) {\n                    getId('stageToggleReset').style.display = 'none';\n                    getId('stageSwitchHotkey').style.display = 'none';\n                }\n                getId('autoToggle8').style.display = strangeness[4][4] >= 1 ? '' : 'none';\n            }\n            getId('allStructuresHotkey').style.display = researchesAuto[0] >= 2 ? '' : 'none';\n            getId('toggle0').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('offlineHotkey').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('autoToggle5').style.display = researchesAuto[2] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[2] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[2] >= 3 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][3] >= 1 ? '' : 'none';\n            getId('toggleAuto2').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n            getId('toggleAuto2Mark').style.display = strangeness[2][4] >= 1 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 ? '' : 'none';\n            getId('toggleAuto3Mark').style.display = strangeness[3][9] >= 1 ? '' : 'none';\n            getId('toggleAuto4').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n            getId('toggleAuto4Mark').style.display = strangeness[4][5] >= 1 ? '' : 'none';\n            if (stage.true < 2) { getId('resetToggles').style.display = player.discharge.current >= 1 ? '' : 'none'; }\n            if (stage.true < 3) { getId('vaporizationToggleReset').style.display = Limit(player.vaporization.clouds).moreThan('1') ? '' : 'none'; }\n            if (stage.true < 5) { getId('collapseToggleReset').style.display = player.collapse.mass > 0.01235 ? '' : 'none'; }\n        } else if (subtab.settingsCurrent === 'History') {\n            const stageBest = player.history.stage.best;\n            getId('stageBestReset1').textContent = `${format(stageBest[0])} ${global.strangeInfo.strangeName[stageBest[2]]}`;\n            getId('stageBestReset2').textContent = format(stageBest[1], { type: 'time' });\n            getId('stageBestReset3').textContent = `${format(stageBest[0] / stageBest[1], { padding: true })} per second`;\n            updateHistory(/*'stage'*/);\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const buildings = player.buildings[active];\n\n            getId('maxExportStats').style.display = player.strangeness[4][7] >= 1 ? '' : 'none';\n            getId('maxExportType').textContent = global.strangeInfo.strangeName[player.strangeness[5][9]];\n            getId('stageBestType').textContent = player.strangeness[5][9] >= 1 ? 'True value' : 'Strange quarks';\n            getId('stageResets').style.display = player.stage.resets > 0 ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal[0] > 0 ? '' : 'none';\n            }\n            for (let i = 1; i < player.strange.length; i++) {\n                getId(`strange${i}Stats`).style.display = player.strange[i].total > 0 ? '' : 'none';\n            }\n\n            if (!player.inflation.vacuum) { updateUnknown(); }\n            if (active === 1) {\n                getId('energyStats').style.display = player.discharge.unlock ? '' : 'none';\n                getId('dischargeStats').style.display = player.discharge.current + global.dischargeInfo.bonus > 0 ? '' : 'none';\n                getId('dischargeStatBonus').style.display = global.dischargeInfo.bonus > 0 ? '' : 'none';\n            } else if (active === 2) {\n                getId('cloudsStats').style.display = player.upgrades[2][1] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                if (player.inflation.vacuum) {\n                    getId('rankStat0').style.display = player.researchesExtra[2][3] >= 1 ? '' : 'none';\n                    getId('massShift').style.display = minShift() !== maxShift() ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('star1Stats').style.display = nova >= 1 ? '' : 'none';\n                getId('star2Stats').style.display = nova >= 2 ? '' : 'none';\n                getId('star3Stats').style.display = nova >= 3 ? '' : 'none';\n            }\n        }\n    }\n};\n\nexport const getUpgradeDescription = (index: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'milestones') => {\n    if (type === 'upgrades') {\n        const pointer = global.upgradesInfo[stageIndex];\n        global.lastUpgrade = [pointer.effect[index] !== null, index];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] >= 1 ? 'Created.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        global.lastResearch = [pointer.effect[index] !== null, index, type];\n\n        getId('researchText').textContent = `${pointer.name[index]}.`;\n        getId('researchEffect').textContent = pointer.effectText[index]();\n        getId('researchCost').textContent = player[type][stageIndex][index] >= pointer.max[index] ? 'Maxed.' :\n            stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass ? `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.` :\n            `${format(pointer.cost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'researchesAuto') {\n        const { researchesAutoInfo } = global;\n        global.lastResearch = [false, index, type];\n\n        getId('researchText').textContent = `${researchesAutoInfo.name[index]}.`;\n        getId('researchEffect').textContent = researchesAutoInfo.effectText[index]();\n        getId('researchCost').textContent = player.researchesAuto[index] >= researchesAutoInfo.max[index] ? 'Maxed.' :\n            stageIndex !== researchesAutoInfo.autoStage[index] ? `Can't be created outside of ${global.stageInfo.word[researchesAutoInfo.autoStage[index]]} stage.` :\n            `${format(researchesAutoInfo.cost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'ASR') {\n        const { ASRInfo } = global;\n        const autoIndex = Math.min(player.ASR[stageIndex] + 1, ASRInfo.max[stageIndex]);\n        global.lastResearch = [false, index, type];\n\n        getId('researchText').textContent = 'Structure Automation.';\n        getId('researchEffect').textContent = `Will automatically make ${player.buildings[stageIndex][autoIndex].trueTotal[0] === 0 ? '(unknown)' : global.buildingsInfo.name[stageIndex][autoIndex]}.\\n(Auto will make them, only when have 2 times of the Structure cost)`;\n        getId('researchCost').textContent = player.ASR[stageIndex] >= ASRInfo.max[stageIndex] ? 'Maxed.' : `${format(ASRInfo.cost[stageIndex])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'elements') {\n        const { elementsInfo } = global;\n        global.lastElement = [elementsInfo.effect[index] !== null, index];\n\n        getId('elementText').textContent = `${elementsInfo.name[index]}.`;\n        getId('elementEffect').textContent = !player.collapse.show.includes(index) ? 'Effect is not yet known.' : elementsInfo.effectText[index]();\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' : `${format(elementsInfo.startCost[index])} ${global.stageInfo.priceName}.`;\n    } else if (type === 'strangeness' || type === 'milestones') {\n        const stageText = getId(`${type}Stage`);\n        stageText.style.color = global.stageInfo.textColor[stageIndex];\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n        if (type === 'strangeness') {\n            const pointer = global.strangenessInfo[stageIndex];\n\n            getId('strangenessText').textContent = `${pointer.name[index]}.`;\n            getId('strangenessEffect').textContent = pointer.effectText[index]();\n            getId('strangenessCost').textContent = player.strangeness[stageIndex][index] >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n\n            getId('milestonesText').textContent = `${pointer.name[index]}.`;\n            if (player.inflation.vacuum) {\n                getId('milestonesMultiline').innerHTML = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`;\n            } else if (pointer.need[index][0] !== 0) {\n                getId('milestonesMultiline').innerHTML = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"darkvioletText\">Reward: <span class=\"greenText\">${format(pointer.reward[index])} Strange quarks for reaching this Milestone.</span></p>\n                <p class=\"darkvioletText\">Unlocks: <span class=\"greenText\">${player.milestones[stageIndex][index] >= pointer.unlock[index] ? pointer.rewardText[index]() : `Additional reward unlocked after ${pointer.unlock[index] - player.milestones[stageIndex][index]} more completions.`}</span></p>`;\n            } else { getId('milestonesMultiline').innerHTML = `<p class=\"darkvioletText\">Unlocks: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n        }\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    let text;\n    if (index === -1) {\n        text = `<h3 class=\"orchidText\">Vacuum state: <span ${player.inflation.vacuum ? 'class=\"greenText\">true' : 'class=\"redText\">false'}</span></h3>`;\n    } else {\n        const { challengesInfo: info } = global;\n        const color = info.color[index];\n\n        text = `<h3 class=\"${color} bigWord\">${info.name[index]}${player.challenges.active === index ? ', <span class=\"greenText\">active</span>' : ''}</h3>\n        <p class=\"whiteText\">${info.description[index]}</p>\n        <div><h4 class=\"${color} bigWord\">Effect:</h4>\n        <p>${info.effectText[index]()}</p></div>`;\n\n        //Add some way to see progress\n        /* <div><p>Void progress</p></div> */\n    }\n    getId('challengeMultiline').innerHTML = text;\n};\n\nexport const visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = 'green';\n        if (stageIndex === 2) {\n            color = 'darkgreen';\n        } else if (stageIndex === 3) {\n            color = '#0000b1'; //Darker blue\n        } else if (stageIndex === 4) {\n            color = '#1f1f8f'; //Brigher midnightblue\n        } else if (stageIndex === 5) {\n            color = '#990000'; //Brigher maroon\n        }\n\n        getId(`upgrade${index + 1}`).style.backgroundColor = player.upgrades[stageIndex][index] >= 1 ? color : '';\n    } else /*if (type === 'elements')*/ {\n        let color = '#0000c1'; //Darker mediumblue\n        if ([0, 1, 2, 3, 4, 11, 12, 19, 20].includes(index)) {\n            color = '#780000'; //Darker darkred\n        } else if ((index >= 5 && index <= 10) || (index >= 13 && index <= 18)) {\n            color = '#a55900'; //Darker darkorange\n        }\n\n        getId(`element${index}`).style.backgroundColor = player.elements[index] >= 1 ? color : '';\n    }\n};\n\nexport const visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researchesExtra' ? 'Extra' : '';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n    } else if (type === 'researchesAuto') {\n        max = global.researchesAutoInfo.max[index];\n        level = player.researchesAuto[index];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        getId(`researchAuto${index + 1}Max`).textContent = `${max}`;\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n    } else /*if (type === 'strangeness')*/ {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.style.color = 'var(--green-text-color)';\n    } else if (level === 0) {\n        upgradeHTML.style.color = ''; //Red\n    } else {\n        upgradeHTML.style.color = 'var(--orchid-text-color)';\n    }\n};\n\nexport const updateHistory = (/*type: 'stage'*/) => {\n    const list = global.historyStorage.stage;\n\n    let text = '';\n    if (list.length > 0) {\n        for (let i = 0; i < list.length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(list[i][0])} ${global.strangeInfo.strangeName[list[i][2]]}</span>, <span class=\"blueText\">${format(list[i][1], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][0] / list[i][1], { padding: true })} per second</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n\n    const listID = getId('stageResetsList');\n    if (listID.innerHTML !== text) { listID.innerHTML = text; }\n};\n\nexport const format = (input: number | overlimit, settings = {} as { digits?: 0, type?: 'number' | 'input' | 'time', padding?: boolean }): string => {\n    if (typeof input !== 'number') { return Limit(input).format(settings as any); }\n    const type = settings.type !== undefined ? settings.type : 'number';\n\n    switch (type) {\n        case 'input':\n        case 'number': {\n            if (!isFinite(input)) { return `${input}`; }\n            const inputAbs = Math.abs(input);\n            if (inputAbs >= 1e6 || (inputAbs < 1e-3 && inputAbs > 0)) {\n                let digits = Math.floor(Math.log10(inputAbs));\n                let result = Math.round(input / 10 ** (digits - 2)) / 100;\n                if (Math.abs(result) === 10) {\n                    result = 1;\n                    digits++;\n                }\n                const formated = settings.padding === true ? result.toFixed(2) : `${result}`;\n                if (type === 'input') { return `${formated}e${digits}`; }\n                return `${formated.replace('.', player.separator[1])}e${digits}`;\n            } else {\n                const precision = inputAbs >= 1e3 || settings.digits === 0 ? 0 : (inputAbs < 1 ? 4 : 2);\n                const result = Math.round(input * 10 ** precision) / 10 ** precision;\n                const formated = settings.padding === true && precision > 0 ? result.toFixed(precision) : `${result}`;\n                if (type === 'input') { return formated; }\n                return result >= 1e3 ?\n                    formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, player.separator[0]) :\n                    formated.replace('.', player.separator[1]);\n            }\n        }\n        case 'time':\n            if (input >= 86400000) { return `${Math.round(input / 31556952)} years`; }\n            if (input >= 3600000) { return `${Math.round(input / 86400)} days`; }\n            if (input >= 60000) { return `${Math.round(input / 3600)} hours`; }\n            if (input >= 1000) { return `${Math.round(input / 60)} minutes`; }\n            return `${Math.round(input)} seconds`;\n    }\n};\n\n//Soft means that Stage wasn't changed\nexport const stageCheck = (extra = 'normal' as 'normal' | 'soft' | 'reload') => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest, resets } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    stageInfo.activeAll = [vacuum ? 1 : current];\n    const activeAll = stageInfo.activeAll;\n    if (vacuum) {\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (player.researchesExtra[1][2] >= 1) { activeAll.push(3); }\n        if (player.accretion.rank >= 6) {\n            activeAll.push(4);\n            if (player.strangeness[5][5] >= 1) { activeAll.push(5); }\n        }\n    } else {\n        if (current === 4) {\n            if (player.milestones[5][0] >= 4) { activeAll.push(5); }\n        } else if (current === 5) { activeAll.unshift(4); }\n        for (let i = player.strangeness[5][0]; i >= 1; i--) {\n            if (current !== i) { activeAll.unshift(i); }\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) {\n            element.style.display = active === s ? '' : 'none';\n        }\n        for (const element of getClass(`stage${s}Include`)) {\n            element.style.display = activeAll.includes(s) ? '' : 'none';\n        }\n        for (const element of getClass(`stage${s}Unlock`)) {\n            element.style.display = highest >= s ? '' : 'none';\n        }\n    }\n\n    getId('solarMassStats').style.display = active === 4 || active === 5 ? '' : 'none';\n    getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n    if (player.strange[0].total === 0) {\n        getId('strangenessTabBtn').style.display = 'none';\n        getId('strangeAllStats').style.display = 'none';\n        getId('stageBest').style.display = 'none';\n    }\n    if (vacuum) {\n        getId('stageReset').textContent = player.challenges.active !== -1 ? 'Leave all Challenges' : current >= 5 ? 'Return back to start' : 'Not ready for reset';\n        if (resets < 1) {\n            if (current < 5) { getId('resetStage').style.display = 'none'; }\n            if (current < 3) { getId('researchAuto2').style.display = 'none'; }\n        }\n        for (const resetType of ['discharge', 'vaporization', 'rank', 'collapse']) {\n            if (resets > 0) { getId(`${resetType}ToggleReset`).style.display = ''; }\n        }\n    } else {\n        for (let s = 2; s <= 4; s++) {\n            getId(`strangenessSection${s}`).style.display = resets >= s + 3 ? '' : 'none';\n            getId(`milestone1Stage${s}Div`).style.display = resets >= s + 3 ? '' : 'none';\n            getId(`milestone2Stage${s}Div`).style.display = resets >= s + 3 ? '' : 'none';\n        }\n        if (active === 1) {\n            getId('preonCap').style.display = 'none';\n        } else if (active === 3) {\n            getId('dustCap').style.display = 'none';\n            getId('massShift').style.display = 'none';\n        } else if (active === 4) {\n            getId('mainCap').style.display = 'none';\n        }\n    }\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = stageInfo.textColor[current];\n\n    if (extra === 'soft') {\n        numbersUpdate();\n        visualUpdate();\n        return;\n    }\n\n    for (const text of ['upgrade', 'research', 'element']) {\n        getId(`${text}Text`).textContent = 'Hover to see.';\n        getId(`${text}Effect`).textContent = 'Hover to see.';\n        getId(`${text}Cost`).textContent = 'Resource.';\n    }\n    if (extra === 'reload') {\n        for (const text of ['strangeness', 'milestones']) {\n            getId(`${text}Stage`).textContent = '';\n            getId(`${text}Text`).textContent = 'Hover to see.';\n        }\n        getId('strangenessEffect').textContent = 'Hover to see.';\n        getId('strangenessCost').textContent = 'Strange quarks.';\n        getId('milestonesMultiline').innerHTML = '<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p><p class=\"darkvioletText\">Reward: <span class=\"greenText\">Hover to see.</span></p>';\n        getChallengeDescription(-1);\n\n        global.lastActive = null;\n        for (let i = 0; i < global.elementsInfo.startCost.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n        assignBuildingInformation();\n\n        autoUpgradesSet('all');\n        autoResearchesSet('researches', 'all');\n        autoResearchesSet('researchesExtra', 'all');\n        autoElementsSet();\n    }\n    global.lastUpgrade[0] = false;\n    global.lastResearch[0] = false;\n    global.lastResearch[1] = -1;\n    global.lastElement[0] = false;\n\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = global.upgradesInfo[active].maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesInfo[active].maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = global.researchesExtraInfo[active].maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = specialHTML.footerStatsHTML[active].length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(3, 4, 5, 6);\n        showR.push(1, 2, 3, 4, 5, 6);\n        showF.push(1, 2);\n        if (vacuum) {\n            showU.unshift(1, 2);\n            showRE.push(1, 3);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearch').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(1);\n        showR.push(1, 2);\n        showRE.push(1, 2);\n        showF.push(2, 3);\n        if (vacuum) { showRE.push(4); }\n    } else if (active === 3) {\n        getId('reset1Main').style.display = '';\n        showU.push(1, 2);\n        showR.push(1, 2);\n        showRE.push(1);\n        showF.push(1);\n    } else if (active === 4) {\n        showU.push(1, 2, 3);\n        showR.push(1, 2, 3);\n        showRE.push(1);\n        showF.push(1, 2);\n        if (vacuum) {\n            getId('building2').style.display = '';\n            getId('building3').style.display = '';\n            getId('building4').style.display = '';\n        }\n    } else if (active === 5) {\n        getId('reset1Main').style.display = 'none';\n        getId('extraResearch').style.display = 'none';\n        showF.push(1, 2, 3);\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(1, 2);\n            showR.push(1, 2);\n        }\n    }\n\n    getId('reset1Text').innerHTML = specialHTML.resetHTML[active]; //Can contain new ID's\n    if (active === 3) { updateRankInfo(); }\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        const image = getId(`building${i}Image`) as HTMLImageElement;\n        image.src = `Used_art/${buildingHTML[i - 1][0]}`;\n        image.alt = buildingHTML[i - 1][1];\n        getId(`building${i}StatName`).textContent = buildingsInfo.name[active][i];\n        getId(`building${i}Name`).textContent = buildingsInfo.name[active][i];\n        getId(`building${i}Type`).textContent = buildingsInfo.type[active][i];\n        toggleSwap(i, 'buildings');\n    }\n    getId('building0StatName').textContent = buildingsInfo.name[active][0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i + 1)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i][0]}`;\n        image.alt = upgradeHTML[i][1];\n        visualUpdateUpgrades(i, active, 'upgrades');\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < global.researchesInfo[active].maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i + 1)) { main.style.display = ''; }\n        main.className = researchHTML[i][2];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchHTML[i][1];\n        visualUpdateResearches(i, active, 'researches');\n    }\n\n    if (active !== 5) {\n        const researchExtraHTML = specialHTML.researchExtraHTML[active];\n        for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) {\n            const main = getId(`researchExtra${i + 1}`);\n            if (showRE.includes(i + 1)) { main.style.display = ''; }\n            main.className = researchExtraHTML[i][2];\n            const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n            image.src = `Used_art/${researchExtraHTML[i][0]}`;\n            image.alt = researchExtraHTML[i][1];\n            visualUpdateResearches(i, active, 'researchesExtra');\n        }\n        const researchExtraDivHTML = specialHTML.researchExtraDivHTML[active];\n        const image = getQuery('#extraResearch > img') as HTMLImageElement;\n        image.src = `Used_art/${researchExtraDivHTML[0]}`;\n        image.alt = researchExtraDivHTML[1];\n        getQuery('#extraResearch > div').className = researchExtraDivHTML[2];\n    }\n    visualUpdateResearches(0, active, 'ASR');\n\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i + 1)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        const image = getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement;\n        image.src = `Used_art/${footerStatsHTML[i][0]}`;\n        image.alt = footerStatsHTML[i][1];\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][2];\n        getId(`footerStat${i + 1}Name`).textContent = footerStatsHTML[i][3];\n    }\n\n    stageInfo.priceName = ['', 'Energy', 'Drops', 'Mass', 'Elements', 'Elements'][active];\n    const body = document.body.style;\n\n    if (active === 1) {\n        body.removeProperty('--stage-text-color');\n        body.removeProperty('--stage-button-color');\n        body.removeProperty('--stage-button-border');\n        body.removeProperty('--image-border-main');\n        body.removeProperty('--image-stage-outer');\n    } else {\n        body.setProperty('--stage-text-color', stageInfo.textColor[active]);\n        body.setProperty('--stage-button-color', stageInfo.buttonBackgroundColor[active]);\n        body.setProperty('--stage-button-border', stageInfo.buttonBorderColor[active]);\n        body.setProperty('--image-border-main', `url(Used_art/Stage${active}%20border.png)`);\n        body.setProperty('--image-stage-outer', stageInfo.imageBorderColor[active]);\n    }\n    getId('currentSwitch').textContent = stageInfo.word[active];\n\n    if (global.lastActive === null) { switchTab(checkTab(global.tab) ? global.tab : 'stage'); }\n    switchTheme();\n\n    if (global.screenReader) { getId('SRTab').textContent = `Current Active Stage is '${stageInfo.word[active]}'${extra === 'reload' && player.challenges.active !== 0 ? `, also inside '${global.challengesInfo.name[player.challenges.active - 1]}' challenge` : ''}`; }\n};\n\nexport const updateRankInfo = () => { //Visual only\n    const image = getId('rankImage') as HTMLImageElement;\n    const name = getId('rankName');\n    const { accretionInfo } = global;\n    const rank = player.accretion.rank;\n    if (image === null) { return; } //Should not happen, but just incase\n\n    getId('rankMessage').textContent = rank === 0 ?\n        'Might need more than just water... Increase Rank with Mass.' :\n        `Increase it with Mass. (Return back to ${player.inflation.vacuum ? 'Preons' : 'Dust'}, but unlock something new)`;\n    getId('reset1Button').textContent = accretionInfo.rankCost[rank] === 0 ?\n        'Max Rank achieved' : `Next Rank is ${format(accretionInfo.rankCost[rank])} Mass`;\n    image.src = `Used_art/${accretionInfo.rankImage[rank]}`;\n    image.alt = accretionInfo.rankName[rank];\n    name.textContent = accretionInfo.rankName[rank];\n    if (rank === 0) {\n        name.style.color = ''; //Blue\n    } else if (rank === 1) {\n        name.style.color = 'var(--cyan-text-color)';\n    } else if (rank === 5) {\n        name.style.color = 'var(--darkviolet-text-color)';\n    } else if (rank === 6) {\n        name.style.color = 'var(--orange-text-color)';\n    } else {\n        name.style.color = 'var(--gray-text-color)';\n    }\n\n    getId('buildings').style.display = rank >= 1 ? '' : 'none';\n    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n    getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n    getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n    getId('upgrade6').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade8').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n    getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n    getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n    getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n    getId('stageResearch').style.display = rank >= 1 ? '' : 'none';\n    getId('research5').style.display = rank >= 3 ? '' : 'none';\n    getId('research6').style.display = rank >= 4 ? '' : 'none';\n    getId('research7').style.display = rank >= 4 ? '' : 'none';\n    getId('research8').style.display = rank >= 5 ? '' : 'none';\n    getId('extraResearch').style.display = rank >= 2 ? '' : 'none';\n    getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n    getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n    getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n    if (player.stage.true < 4) { getId('rankToggleReset').style.display = rank >= 2 ? '' : 'none'; }\n    for (let i = 1; i < accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = rank >= i ? '' : 'none'; }\n};\n", "import { allowedToBeReset } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, assignBuildingInformation, autoElementsSet, assignEnergy, assignNewMassCap, calculateMilestoneInformation } from './Stage';\nimport { numbersUpdate, stageCheck, updateRankInfo, visualUpdate, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    if (type === 'discharge' || player.inflation.vacuum) { player.discharge.energy = 0; }\n    if (stageIndex.includes(4)) { global.collapseInfo.trueStars = 0; }\n    if (type === 'galaxy') {\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n    }\n\n    if ((type === 'collapse' && !player.inflation.vacuum && player.strangeness[4][4] < 1) || type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n\n            elements[i] = 0;\n            visualUpdateUpgrades(i, 4, 'elements');\n        }\n        autoElementsSet();\n    }\n\n    for (const s of stageIndex) {\n        if (s === 2 && player.strangeness[2][10] >= 1 && type !== 'vaporization' && type !== 'discharge') { continue; }\n\n        const buildings = player.buildings[s];\n        buildings[0].current = cloneArray(playerStart.buildings[s][0].current);\n        buildings[0].total = cloneArray(playerStart.buildings[s][0].total);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n\n            upgrades[i] = 0;\n            visualUpdateUpgrades(i, s, 'upgrades');\n        }\n        autoUpgradesSet(s); //As of now upgrades/researches cost is always same\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n\n            researches[i] = 0;\n            visualUpdateResearches(i, s, 'researches');\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n\n            researchesExtra[i] = 0;\n            visualUpdateResearches(i, s, 'researchesExtra');\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    if (stageIndex.includes(3) && player.strangeness[3][10] >= 1) { player.buildings[3][1].current = [1, 0]; }\n\n    assignEnergy();\n    assignBuildingInformation();\n    if (stageIndex.includes(player.stage.active)) { numbersUpdate(); }\n    visualUpdate();\n};\n\nexport const resetStage = (stageIndex: number[], update = 'normal' as false | 'normal' | 'soft') => {\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingsStart = playerStart.buildings[s];\n\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n            buildings[i].trueTotal = [0, 0];\n        }\n        buildings[0].current = cloneArray(buildingsStart[0].current);\n        buildings[0].total = cloneArray(buildingsStart[0].total);\n        buildings[0].trueTotal = cloneArray(buildingsStart[0].trueTotal);\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        player.ASR[s] = player.strangeness[s][[6, 5, 5, 6, 7][s - 1]];\n        autoUpgradesSet(s);\n\n        if (s === 1) {\n            player.discharge.unlock = false;\n            player.discharge.energy = 0;\n            player.discharge.current = 0;\n        } else if (s === 2) {\n            player.vaporization.clouds = [1, 0];\n        } else if (s === 3) {\n            if (!player.inflation.vacuum) {\n                player.accretion.rank = 0;\n                buildings[0].current = [5.97, 27];\n            } else {\n                player.accretion.rank = 1;\n                if (player.strangeness[3][10] >= 1) { buildings[1].current = [1, 0]; }\n            }\n        } else if (s === 4) {\n            player.stage.time = 0;\n            global.collapseInfo.trueStars = 0;\n            player.collapse.elementsMax = [1, 0];\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            if (!player.inflation.vacuum) { player.collapse.show = []; }\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = player.strangeness[4][11];\n            autoElementsSet();\n            for (let i = 1; i < player.elements.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n        } else if (s === 5) {\n            if (player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n        }\n    }\n    for (const s of stageIndex) { //Less errors if do it separatly\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    assignEnergy();\n    assignBuildingInformation();\n\n    if (update !== false) {\n        global.lastActive = null;\n        stageCheck(update);\n        if (update === 'soft') {\n            const active = player.stage.active;\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            if (active === 3) { updateRankInfo(); }\n        }\n    }\n};\n\nexport const resetVacuum = () => {\n    for (let s = 1; s <= 5; s++) {\n        const buildings = player.buildings[s];\n        const buildingsStart = playerStart.buildings[s];\n\n        for (let i = 1; i < buildingsStart.length; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current = [0, 0];\n            buildings[i].total = [0, 0];\n            buildings[i].trueTotal = [0, 0];\n            buildings[i].highest = [0, 0];\n        }\n        buildings[0].current = cloneArray(buildingsStart[0].current);\n        buildings[0].total = cloneArray(buildingsStart[0].total);\n        buildings[0].trueTotal = cloneArray(buildingsStart[0].trueTotal);\n        buildings[0].highest = cloneArray(buildingsStart[0].highest);\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        player.milestones[s] = cloneArray(playerStart.milestones[s]);\n        player.ASR[s] = 0;\n    }\n\n    //Stage 1\n    player.discharge.unlock = false;\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n\n    //Stage 2\n    player.vaporization.clouds = [1, 0];\n    player.vaporization.cloudsMax = [1, 0];\n\n    //Stage 3\n    if (!player.inflation.vacuum) {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current = [5.97, 27];\n    } else {\n        player.accretion.rank = 1;\n    }\n\n    //Stage 4\n    global.collapseInfo.trueStars = 0;\n    player.collapse.elementsMax = [0, 0];\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.collapse.show = [];\n    player.elements = cloneArray(playerStart.elements);\n\n    //Stage 5 and rest\n    if (player.time.offline > 28800) { player.time.offline = 28800; }\n    player.researchesAuto = cloneArray(playerStart.researchesAuto);\n    global.historyStorage.stage = [];\n    player.history.stage.best = [0, 1, 0];\n    player.stage.resets = 0;\n    player.stage.best = 0;\n    player.stage.time = 0;\n    for (let i = 0; i < player.strange.length; i++) {\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n    }\n    const autoStage = global.researchesAutoInfo.autoStage;\n    for (let i = 0; i < player.researchesAuto.length; i++) { calculateMaxLevel(i, autoStage[i], 'researchesAuto'); }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'strangeness');\n        }\n    }\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < player.milestones[s].length; i++) {\n            calculateMilestoneInformation(i, s);\n        }\n    }\n    assignNewMassCap();\n\n    stageCheck('reload');\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Limit from './Limit';\nimport { getId } from './Main';\nimport { cloneArray, global, player } from './Player';\nimport { reset, resetStage } from './Reset';\nimport { Alert, Confirm, notify, playEvent } from './Special';\nimport { overlimit } from './Types';\nimport { format, getChallengeDescription, getUpgradeDescription, numbersUpdate, stageCheck, switchTab, updateRankInfo, visualUpdateResearches, visualUpdateUpgrades } from './Update';\n\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base); //Extension for Math.log for any base\nexport const assignBuildingInformation = () => { //Sets buildingInfo.producing for all active buildings, also related upgrade effects\n    const { upgradesInfo, researchesInfo, researchesExtraInfo, dischargeInfo, inflationInfo } = global;\n    const { buildings, upgrades, researches, researchesExtra, strangeness } = player;\n    const producing = global.buildingsInfo.producing;\n    const stageBoost = global.strangeInfo.stageBoost;\n    const strangeQuarks = player.strange[0].current;\n    const activeAll = global.stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n\n    const inVoid = player.challenges.active === 0;\n\n    if (activeAll.includes(1)) {\n        const { discharge } = player;\n        const v = vacuum ? 0 : 2;\n\n        stageBoost[1] = strangeness[1][8] >= 1 ? (strangeQuarks + 1) ** (vacuum ? 0.12 : 0.26) : null;\n        dischargeInfo.bonus = strangeness[1][2];\n        if (vacuum && stageBoost[1] !== null) {\n            stageBoost[1] -= 1;\n            dischargeInfo.bonus += stageBoost[1];\n        }\n        const dischargeBase = (4 + strangeness[1][0]) * 2 ** researches[1][4];\n        upgradesInfo[1].effect[5] = inVoid ? 1 + dischargeBase / 4 : dischargeBase;\n        upgradesInfo[1].effect[7] = Math.round((1.02 + 0.01 * researches[1][1]) * 100) / 100;\n        researchesExtraInfo[1].effect[4] = 1 + upgradesInfo[1].effect[5] / 100;\n        let totalMultiplier = (upgradesInfo[1].effect[5] ** (discharge.current + dischargeInfo.bonus)) * (1.2 ** strangeness[1][9]);\n        if (vacuum) { totalMultiplier *= global.milestonesInfo[1].reward[0]; }\n\n        const listForMult5 = [buildings[1][5 - v].current];\n        let prod5Number = (vacuum ? 0.2 : 0.3) * totalMultiplier;\n        if (vacuum && upgrades[1][4] === 1) { prod5Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult5.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(5 - v) as 3 | 5].true).toArray()); }\n        producing[1][5 - v] = Limit(prod5Number).multiply(...listForMult5).toArray();\n\n        researchesInfo[1].effect[2] = 12 + strangeness[1][5] * (vacuum ? 4 : 3) / 10;\n        researchesExtraInfo[1].effect[1] = researchesExtra[1][1] >= 1 ? (21 - researchesExtra[1][1]) / 10 : 2.718281828459045;\n        if (Limit(producing[1][5 - v]).moreThan('1')) {\n            let radiation = researchesInfo[1].effect[2] ** researches[1][2];\n            if (upgrades[1][9] === 1 && discharge.energy > 1) { radiation *= discharge.energy; }\n            if (researches[1][5] >= 1) { radiation *= (discharge.current + dischargeInfo.bonus + 1) * researches[1][5]; }\n            if (!vacuum && stageBoost[1] !== null) { radiation *= stageBoost[1]; }\n            upgradesInfo[1].effect[8] = Limit(producing[1][5 - v]).log(researchesExtraInfo[1].effect[1]).multiply(radiation).toArray();\n        } else { upgradesInfo[1].effect[8] = [0, 0]; }\n\n        const listForMult4 = [buildings[1][4 - v].current];\n        let prod4Number = (vacuum ? 0.2 : 0.4) * totalMultiplier;\n        if (vacuum) {\n            if (upgrades[1][3] === 1) { prod4Number *= 10; }\n        } else if (upgrades[1][4] === 1) { prod4Number *= 5; }\n        if (upgrades[1][7] === 1) { listForMult4.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(4 - v) as 2 | 4].true).toArray()); }\n        producing[1][4 - v] = Limit(prod4Number).multiply(...listForMult4).toArray();\n\n        const listForMult3 = [buildings[1][3 - v].current];\n        let prod3Number = (vacuum ? 0.2 : 0.5) * totalMultiplier;\n        if (upgrades[1][0] === 1) { prod3Number *= 5; }\n        if (!vacuum && upgrades[1][3] === 1) { prod3Number *= 10; }\n        if (upgrades[1][7] === 1) { listForMult3.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][(3 - v) as 1 | 3].true).toArray()); }\n        producing[1][3 - v] = Limit(prod3Number).multiply(...listForMult3).toArray();\n\n        if (vacuum) {\n            const listForMult2 = [buildings[1][2].current];\n            if (upgrades[1][7] === 1) { listForMult2.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][2].true).toArray()); }\n            producing[1][2] = Limit(2e-1 * totalMultiplier).multiply(...listForMult2).toArray();\n\n            const listForMult1 = [buildings[1][1].current];\n            if (upgrades[1][7] === 1) { listForMult1.push(Limit(upgradesInfo[1].effect[7]).power(buildings[1][1].true).toArray()); }\n            producing[1][1] = Limit(1e-3 * totalMultiplier).multiply(...listForMult1).toArray();\n\n            producing[1][1] = Limit(producing[1][1]).power(Limit(producing[1][1]).lessThan('1') ? 1.1 : 0.1).toArray();\n            researchesExtraInfo[1].effect[3] = researchesExtra[1][3] >= 1 ? (20 + 5 * researchesExtra[1][3]) / 100 : 0;\n            inflationInfo.preonCap = Limit(2e13 * Math.max(discharge.energy, 1) ** researchesExtraInfo[1].effect[3]).toArray();\n            if (player.collapse.stars[2] >= 1) { inflationInfo.preonCap = Limit(inflationInfo.preonCap).multiply(global.collapseInfo.starEffect[2]()).toArray(); }\n            if (Limit(producing[1][1]).moreOrEqual(inflationInfo.preonCap)) { producing[1][1] = inflationInfo.preonCap; }\n        }\n    }\n    const dischargeBoost = (researchesExtra[1][4] >= 1 ? (researchesExtraInfo[1].effect[4] as number) ** (player.discharge.current + dischargeInfo.bonus) : 1) * (1.05 ** strangeness[1][10]);\n\n    if (activeAll.includes(2)) {\n        let current5 = buildings[2][5].true;\n        let current4 = buildings[2][4].true;\n        let current3 = buildings[2][3].true;\n        let current2 = buildings[2][2].true;\n        if (upgrades[2][7] === 1) { current5 += buildings[2][6].true; }\n        if (upgrades[2][6] === 1) { current4 += current5; }\n        upgradesInfo[2].effect[5] = 1 + researches[2][5];\n        if (upgrades[2][5] === 1) { current3 += current4 * upgradesInfo[2].effect[5]; }\n        upgradesInfo[2].effect[4] = 1 + researches[2][4];\n        if (upgrades[2][4] === 1) { current2 += current3 * upgradesInfo[2].effect[4]; }\n        buildings[2][5].current = Limit(current5).toArray();\n        buildings[2][4].current = Limit(current4).toArray();\n        buildings[2][3].current = Limit(current3).toArray();\n        buildings[2][2].current = Limit(current2).toArray();\n\n        producing[2][6] = Limit(2 * dischargeBoost).multiply(buildings[2][6].current).max('1').toArray();\n\n        const listForMult5 = [producing[2][6]];\n        researchesExtraInfo[2].effect[2] = Limit(player.vaporization.clouds).power(0.1).toArray();\n        if (researchesExtra[2][2] >= 1) { listForMult5.push(researchesExtraInfo[2].effect[2]); }\n        producing[2][5] = Limit(2 * current5 * dischargeBoost).multiply(...listForMult5).max('1').toArray();\n\n        producing[2][4] = Limit(2 * current4 * dischargeBoost).multiply(producing[2][5]).max('1').toArray();\n\n        producing[2][3] = Limit(2 * current3 * dischargeBoost).multiply(producing[2][4]).max('1').toArray();\n\n        const listForMult2 = [producing[2][3], player.vaporization.clouds];\n        upgradesInfo[2].effect[2] = 0.02 + researches[2][2] * (vacuum ? 0.03 : 0.02);\n        upgradesInfo[2].effect[3] = 0.02 + researches[2][3] * (vacuum ? 0.02 : 0.03);\n        researchesExtraInfo[2].effect[1] = vacuum ? 1.5 ** researchesExtra[2][1] : 10 ** (researchesExtra[2][1] - 1);\n        stageBoost[2] = strangeness[2][8] >= 1 ? (strangeQuarks + 1) ** (vacuum ? 0.22 : 0.32) : null;\n        let prod2Number = (inVoid ? 0.4 * ((current2 - buildings[2][2].true) ** 0.5 + buildings[2][2].true) : 4 * buildings[2][2].true) * dischargeBoost * (2 ** strangeness[2][1]);\n        if (upgrades[2][2] === 1) { listForMult2.push(Limit(buildings[2][0][researches[2][1] >= 2 ? 'total' : 'current']).power(upgradesInfo[2].effect[2]).toArray()); }\n        if (upgrades[2][3] === 1) { listForMult2.push(Limit(buildings[2][1][researches[2][1] >= 1 ? 'total' : 'current']).max('1').power(upgradesInfo[2].effect[3]).toArray()); }\n        if (vacuum) { prod2Number *= researchesExtraInfo[2].effect[1] * global.milestonesInfo[2].reward[1]; }\n        if (stageBoost[2] !== null) { prod2Number *= stageBoost[2]; }\n        producing[2][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [];\n        if (inVoid) {\n            listForMult1.push(Limit(buildings[2][1].current).moreThan('1') ? Limit(buildings[2][1].current).power(0.1).toArray() : buildings[2][1].current);\n        } else if (vacuum) {\n            const excess = Limit(buildings[2][1].current).minus(buildings[2][1].true).toArray();\n            listForMult1.push(Limit(excess).moreThan('1') ? Limit(excess).power(0.5).plus(buildings[2][1].true).toArray() : buildings[2][1].current);\n        } else { listForMult1.push(buildings[2][1].current); }\n        if (upgrades[2][0] === 1) { listForMult1.push(Limit(vacuum ? '1.05' : '1.1').power(buildings[2][1].true).toArray()); }\n        producing[2][1] = Limit((vacuum ? 1 : 6e-4) * dischargeBoost * (3 ** researches[2][0]) * (2 ** strangeness[2][0])).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            producing[2][1] = Limit(producing[2][1]).plus('1').toArray();\n            upgradesInfo[1].effect[8] = Limit(upgradesInfo[1].effect[8] as overlimit).multiply(producing[2][1]).toArray();\n        }\n    }\n    if (activeAll.includes(3)) {\n        global.accretionInfo.effective = (inVoid ? 1 : player.accretion.rank) + strangeness[3][11];\n        if (vacuum) {\n            stageBoost[3] = strangeness[3][7] >= 1 ? (strangeQuarks + 1) ** 0.14 - 1 : null;\n            global.accretionInfo.effective += Number(stageBoost[3]);\n        }\n\n        const weakerDischargeBoost = dischargeBoost ** 0.5;\n        producing[3][5] = Limit('1.1').power(buildings[3][5].true).toArray();\n        if (buildings[3][5].true > 0) {\n            producing[3][5] = Limit(weakerDischargeBoost).multiply(producing[3][5]).toArray();\n        }\n\n        producing[3][4] = Limit((upgrades[3][12] === 1 ? '1.14' : '1.1')).power(buildings[3][4].true).toArray();\n        if (buildings[3][4].true > 0) {\n            producing[3][4] = Limit(weakerDischargeBoost).multiply(producing[3][4], producing[3][5]).toArray();\n        }\n        const satellitesBoost: overlimit = strangeness[3][3] < 1 ? [1, 0] : (vacuum ? Limit(producing[3][4]).power(0.36).toArray() : producing[3][4]);\n\n        const listForMult3 = [buildings[3][3].current, producing[3][4]];\n        let prod3Number = 0.1 * dischargeBoost * (2 ** strangeness[3][1]);\n        if (upgrades[3][4] === 1 && researchesExtra[3][2] > 0) { prod3Number *= 2; }\n        if (upgrades[3][8] === 1) { listForMult3.push(Limit('1.005').power(buildings[3][3].true).toArray()); }\n        producing[3][3] = Limit(prod3Number).multiply(...listForMult3).toArray();\n\n        const listForMult2 = [buildings[3][2].current, satellitesBoost];\n        researchesInfo[3].effect[5] = Limit(buildings[3][0].current).power(0.025 * researches[3][5]).toNumber();\n        if (vacuum && researchesInfo[3].effect[5] > 4000) { researchesInfo[3].effect[5] = 4000; }\n        let prod2Number = 0.1 * dischargeBoost * (3 ** researches[3][2]) * (5 ** researches[3][4]) * (2 ** strangeness[3][1]);\n        if (upgrades[3][3] === 1) { listForMult2.push(Limit('1.02').power(buildings[3][2].true).toArray()); }\n        if (upgrades[3][4] === 1) { prod2Number *= 4; }\n        if (researches[3][5] >= 1) { prod2Number *= researchesInfo[3].effect[5]; }\n        producing[3][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [buildings[3][1].current, satellitesBoost];\n        upgradesInfo[3].effect[0] = 1.01 + 0.01 * researches[3][1];\n        upgradesInfo[3].effect[1] = Limit(buildings[3][1].current).power(0.05 + 0.01 * researchesExtra[3][3]).toArray();\n        upgradesInfo[3].effect[7] = 2 * 1.5 ** researches[3][6];\n        upgradesInfo[3].effect[10] = vacuum ? (3 * 2 ** researches[3][7]) : (10 * 3 ** researches[3][7]);\n        researchesExtraInfo[3].effect[0] = 1.1 ** researchesExtra[3][0];\n        researchesExtraInfo[3].effect[1] = (1 + 0.1 * researchesExtra[3][1]) ** global.accretionInfo.effective;\n        let prod1Number = (vacuum ? 1 : 1e-19) * dischargeBoost * (3 ** researches[3][0]) * (2 ** researches[3][3]) * researchesExtraInfo[3].effect[0] * (2 ** (Math.min(strangeness[3][0], 8) + Math.max((strangeness[3][0] - 8) / 2, 0)));\n        if (vacuum) { prod1Number *= global.milestonesInfo[3].reward[0]; }\n        if (upgrades[3][0] === 1) { listForMult1.push(Limit(upgradesInfo[3].effect[0]).power(buildings[3][1].true).toArray()); }\n        if (upgrades[3][1] === 1) { listForMult1.push(upgradesInfo[3].effect[1]); }\n        if (upgrades[3][2] === 1) { prod1Number *= 2; }\n        if (upgrades[3][5] === 1) { prod1Number *= 3; }\n        if (upgrades[3][7] === 1) { prod1Number *= upgradesInfo[3].effect[7]; }\n        if (upgrades[3][9] === 1) { prod1Number *= 2; }\n        if (upgrades[3][10] === 1) { prod1Number *= upgradesInfo[3].effect[10]; }\n        if (researchesExtra[3][1] >= 1) { prod1Number *= researchesExtraInfo[3].effect[1]; }\n        producing[3][1] = Limit(prod1Number).multiply(...listForMult1).toArray();\n        if (vacuum) {\n            const { elements } = player;\n\n            let capGain = 1;\n            if (elements[3] === 1) { capGain += 0.25; }\n            if (elements[5] === 1) { capGain += 0.0375 * buildings[4][1].true; }\n            if (elements[10] === 1) { capGain *= 2; }\n            if (elements[14] === 1) { capGain *= 1.4; }\n            capGain *= 1 + (elements[15] === 1 ? global.collapseInfo.trueStars : buildings[4][1].true);\n            inflationInfo.dustCap = Limit(5e45 * (maxShift() / inflationInfo.massCap)).multiply(capGain).toArray();\n\n            producing[3][1] = Limit(producing[3][1]).plus('1').toArray();\n            if (inVoid) { producing[3][1] = Limit(producing[3][1]).power(Math.floor(100 - 3.3 * (player.accretion.rank - 1)) / 100).toArray(); }\n            if (Limit(producing[3][1]).moreOrEqual(inflationInfo.dustCap)) { producing[3][1] = inflationInfo.dustCap; }\n            producing[1][1] = Limit(producing[1][1]).multiply(producing[3][1]).toArray();\n\n            researchesExtraInfo[3].effect[4] = researchesExtraInfo[3].effect[1] * researchesExtra[3][4];\n            if (researchesExtra[3][4] >= 1) { producing[2][2] = Limit(producing[2][2]).multiply(researchesExtraInfo[3].effect[4]).toArray(); }\n        } else if (player.accretion.rank >= 5) {\n            producing[3][1] = Limit(producing[3][1]).power(Limit(producing[3][1]).lessThan('1') ? 1.1 : 0.8).toArray();\n        }\n    }\n    if (activeAll.includes(4)) {\n        const { elements } = player;\n        const { stars } = player.collapse;\n        const { starEffect } = global.collapseInfo;\n\n        researchesInfo[4].effect[1] = Limit(1 + (inVoid ? (0.005 * researches[4][1]) : (0.01 * Math.min(researches[4][1], 5)) + (0.005 * Math.max(researches[4][1] - 5, 0)))).power(global.collapseInfo.trueStars).toArray();\n        if (Limit(researchesInfo[4].effect[1]).moreThan('1e10')) { researchesInfo[4].effect[1] = Limit(researchesInfo[4].effect[1]).minus('1e10').power(0.7).plus('1e10').toArray(); }\n\n        const listForTotal = [researchesInfo[4].effect[1]];\n        stageBoost[4] = strangeness[4][9] >= 1 ? (strangeQuarks + 1) ** (vacuum ? 0.2 : 0.36) : null;\n        let planetBase = 1.1 + 0.2 * researches[4][2];\n        if (vacuum) { planetBase += global.milestonesInfo[3].reward[1]; }\n        researchesInfo[4].effect[0] = planetBase ** researches[4][0];\n        global.elementsInfo.effect[12] = 10 - Math.floor(strangeness[4][11] / 2);\n        let totalNumber = researchesInfo[4].effect[0] * dischargeBoost * global.collapseInfo.massEffect() * starEffect[1]() * (1.5 ** strangeness[4][0]);\n        if (elements[4] === 1) { totalNumber *= 1.1; }\n        if (elements[19] === 1) { totalNumber *= 3; }\n        if (elements[23] === 1 && stars[2] > 10) { totalNumber *= Math.log10(stars[2]); }\n        if (elements[24] === 1) { listForTotal.push(Limit(buildings[4][0].current).max('1').power(0.01).toArray()); }\n        if (elements[26] === 1) { totalNumber *= 2; }\n        if (vacuum) {\n            totalNumber *= 4 * global.milestonesInfo[4].reward[0];\n        } else if (player.milestones[1][1] >= 3) { totalNumber *= 4; }\n        if (stageBoost[4] !== null) { totalNumber *= stageBoost[4]; }\n        const totalMultiplier = Limit(totalNumber).multiply(...listForTotal).toArray();\n\n        producing[4][5] = Limit('1e11').multiply(buildings[4][5].current, totalMultiplier).toArray();\n\n        producing[4][4] = Limit('2e9').multiply(buildings[4][4].current, totalMultiplier).toArray();\n\n        producing[4][3] = Limit('2.5e7').multiply(buildings[4][3].current, totalMultiplier).toArray();\n\n        global.elementsInfo.effect[6] = researchesExtra[4][1] >= 1 ? 2 : 1.5;\n        let prod2Number = 300 * starEffect[0]();\n        if (researches[4][3] >= 1) { prod2Number *= 10; }\n        producing[4][2] = Limit(prod2Number).multiply(buildings[4][2].current, totalMultiplier).toArray();\n\n        let prod1Number = 22;\n        if (elements[1] === 1) { prod1Number *= 2; }\n        producing[4][1] = Limit(prod1Number).multiply(buildings[4][1].current, totalMultiplier).toArray();\n    }\n    if (activeAll.includes(5)) {\n        producing[5][3] = Limit(vacuum ? upgrades[5][2] === 1 ? '2' : '1.8' : '10').power(buildings[5][3].true).toArray();\n\n        const listForMult2 = [buildings[5][2].current, producing[5][3]];\n        let prod2Number = 1.5 * (3 ** researches[5][1]);\n        upgradesInfo[5].effect[1] = 6 * ((vacuum ? 2.5 : 4) ** strangeness[5][4]);\n        if (upgrades[5][1] === 1) { prod2Number *= upgradesInfo[5].effect[1]; }\n        producing[5][2] = Limit(prod2Number).multiply(...listForMult2).toArray();\n\n        const listForMult1 = [buildings[5][1].current, producing[5][3]];\n        let prod1Number = 4 ** researches[5][0];\n        upgradesInfo[5].effect[0] = 4 * ((vacuum ? 2 : 3) ** strangeness[5][3]);\n        if (upgrades[5][0] === 1) { prod1Number *= upgradesInfo[5].effect[0]; }\n        producing[5][1] = Limit(prod1Number).multiply(...listForMult1).toArray();\n\n        const clusterBoost = producing[5][2];\n        if (Limit(clusterBoost).moreThan('1')) {\n            producing[4][4] = Limit(producing[4][4]).multiply(clusterBoost).toArray();\n            if (researches[5][1] >= 2) { producing[4][3] = Limit(producing[4][3]).multiply(clusterBoost).divide('3').toArray(); }\n            if (researches[5][1] >= 3) { producing[4][2] = Limit(producing[4][2]).multiply(clusterBoost).divide('9').toArray(); }\n            if (researches[5][1] >= 4) { producing[4][1] = Limit(producing[4][1]).multiply(clusterBoost).divide('27').toArray(); }\n        }\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex = player.stage.active, auto = false) => {\n    if (!checkBuilding(index, stageIndex)) { return; }\n\n    const { buildingsInfo } = global;\n    const building = player.buildings[stageIndex][index as 1];\n\n    const galaxy = stageIndex === 5 && index === 3;\n    const convert = ((stageIndex === 2 && index === 1) || stageIndex === 3) && player.inflation.vacuum;\n\n    let extra = index - 1; //What you are paying\n    let stageExtra = stageIndex;\n    if (stageIndex === 2) {\n        if (index !== 1) { extra = 1; } //Drops\n    } else if (stageIndex >= 3) {\n        extra = 0; //Mass || Elements\n        if (stageIndex === 5) { stageExtra = 4; }\n    }\n\n    let currency: number | overlimit;\n    if (galaxy) {\n        currency = player.collapse.mass;\n    } else if (convert) {\n        currency = stageIndex === 2 ?\n            Limit(player.buildings[1][5].current).divide('6.02214076e23').toArray() :\n            Limit(player.buildings[1][0].current).multiply('1.78266192e-33').toArray();\n    } else {\n        currency = player.buildings[stageExtra][extra].current;\n    }\n\n    let budget = currency;\n    if (auto) {\n        if ((stageIndex === 3 || (stageIndex === 1 && index === 1)) && player.strangeness[3][4] >= 2 && Limit(buildingsInfo.producing[3][1]).moreOrEqual(global.inflationInfo.dustCap)) {\n            budget = Limit(currency).divide(global.inflationInfo.massCap).toArray();\n        } else if (building.true > 0 && !galaxy) {\n            budget = Limit(currency).divide('2').toArray();\n        }\n    }\n\n    if (Limit(calculateBuildingsCost(index, stageIndex)).moreThan(budget)) { return; }\n    const howMany = player.researchesAuto[0] === 0 ? 1 : auto ? -1 : player.toggles.shop.howMany;\n\n    let canAfford: number;\n    let total: overlimit;\n    if (howMany !== 1) {\n        const increase = buildingsInfo.increase[stageIndex][index]; //Must be >1; for <1, formulas are '1 - increase', '1 - increase ** levels'\n        const firstCost = buildingsInfo.firstCost[stageIndex][index];\n        const alreadyBought = building.true;\n        const totalBefore = Limit(increase).power(alreadyBought).minus('1').divide(increase - 1).multiply(firstCost).toArray();\n        const maxAfford = Math.floor(Limit(budget).plus(totalBefore).multiply(increase - 1).divide(firstCost).plus('1').log(10).divide(Math.log10(increase)).toNumber()) - alreadyBought;\n\n        if (howMany !== -1 && maxAfford < howMany) { return; }\n        canAfford = howMany !== -1 ? Math.min(maxAfford, howMany) : maxAfford;\n        total = Limit(increase).power(canAfford + alreadyBought).minus('1').divide(increase - 1).multiply(firstCost).minus(totalBefore).toArray();\n    } else {\n        canAfford = 1;\n        total = calculateBuildingsCost(index, stageIndex);\n    }\n\n    currency = Limit(currency).minus(total).toArray();\n    building.true += canAfford;\n    building.current = Limit(building.current).plus(canAfford).toArray();\n    building.total = Limit(building.total).plus(canAfford).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(canAfford).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    if (galaxy) {\n        //player.collapse.mass = Math.max(Limit(currency).toNumber(), 0.01235);\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n    } else {\n        if (convert) {\n            stageIndex === 2 ?\n                player.buildings[1][5].current = Limit(currency).multiply('6.02214076e23').toArray() :\n                player.buildings[1][0].current = Limit(currency).divide('1.78266192e-33').toArray();\n        } else { player.buildings[stageExtra][extra].current = currency; }\n\n        assignBuildingInformation();\n        if (!auto) { numbersUpdate(); }\n    }\n\n    //Milestones that are based on bought amount\n    if (player.inflation.vacuum || stageIndex === 1) {\n        if (!galaxy) { assignEnergy(global.dischargeInfo.getEnergy(index, stageIndex) * canAfford); }\n        awardMilestone(1, 1);\n    }\n    if (stageIndex === 2) {\n        if (index !== 1) { awardMilestone(1, 2); }\n    } else if (stageIndex === 3) {\n        if (index >= 4) { awardMilestone(1, 3); }\n    } else if (stageIndex === 4) {\n        global.collapseInfo.trueStars += canAfford;\n        player.buildings[5][0].current = Limit(player.buildings[5][0].current).plus(canAfford).toArray();\n        awardMilestone(0, 5);\n    } else if (stageIndex === 5) {\n        if (player.inflation.vacuum) {\n            if (index === 4) {\n                awardMilestone(1, 5);\n            }\n        } else if (index === 3) {\n            awardMilestone(1, 5);\n            if (!player.events[2]) { playEvent(5, 2); }\n        }\n    }\n    if (!auto && global.screenReader) { getId('SRMain').textContent = `Made ${format(canAfford)} '${buildingsInfo.name[stageIndex][index]}'`; }\n};\n\nexport const assignEnergy = (add = null as number | null) => {\n    const { discharge } = player;\n\n    if (add === null) {\n        if (player.strangeness[1][11] < 1) { return; }\n        const { getEnergy, energyType } = global.dischargeInfo;\n\n        add = 0;\n        for (let s = 1; s < energyType.length; s++) {\n            const buildings = player.buildings[s];\n            for (let i = 1; i < energyType[s].length; i++) {\n                add += getEnergy(i, s) * buildings[i as 1].true;\n            }\n        }\n        discharge.energy = add;\n    } else { discharge.energy += add; }\n    if (!discharge.unlock) { discharge.unlock = discharge.energy >= (player.inflation.vacuum ? 32 : 9); }\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): overlimit => {\n    const { buildingsInfo } = global;\n\n    if (stageIndex === 1) {\n        global.upgradesInfo[1].effect[6] = (20 + player.researches[1][0]) / 100; //(0.2 + 1 / 100) / 100\n        buildingsInfo.increase[1][index] = Math.round((1.4 - (player.upgrades[1][6] === 1 ? global.upgradesInfo[1].effect[6] : 0)) * 100) / 100;\n        if (index === 1) {\n            buildingsInfo.firstCost[1][1] = buildingsInfo.startCost[1][1] / (!player.inflation.vacuum && player.upgrades[1][2] === 1 ? 10 : 1);\n        } else if (index === 3) {\n            buildingsInfo.firstCost[1][3] = buildingsInfo.startCost[1][3] / (player.upgrades[1][1] === 1 ? 10 : 1);\n        } else if (index === 4) {\n            buildingsInfo.firstCost[1][4] = buildingsInfo.startCost[1][4];\n            if (player.inflation.vacuum) {\n                if (player.upgrades[1][2] === 1) { buildingsInfo.firstCost[1][4] /= 10; }\n                if (player.researchesExtra[1][0] >= 1 && player.upgrades[1][1] === 1) { buildingsInfo.firstCost[1][4] /= 10; }\n            }\n        }\n    } else if (stageIndex === 3) {\n        buildingsInfo.firstCost[3][index] = buildingsInfo.startCost[3][index];\n        if (!player.inflation.vacuum) {\n            global.strangeInfo.stageBoost[3] = player.strangeness[3][7] < 1 ? null : player.strange[0].current < 800 ? (player.strange[0].current + 1) ** 1.66 : (player.strange[0].current + 1) ** 0.66 * 800;\n            if (global.strangeInfo.stageBoost[3] !== null) { buildingsInfo.firstCost[3][index] /= global.strangeInfo.stageBoost[3]; }\n        }\n        if (index === 4) {\n            buildingsInfo.increase[3][4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        buildingsInfo.increase[4][index] = Math.round(((1.4 + 0.15 * (index - 1)) - (player.elements[2] === 1 ? 0.1 : 0) - (player.elements[8] === 1 ? 0.05 : 0)) * 100) / 100;\n        buildingsInfo.firstCost[4][index] = buildingsInfo.startCost[4][index] / (player.elements[13] === 1 ? 1e3 : 1) / (2 ** player.strangeness[4][1]);\n    }\n\n    return Limit(buildingsInfo.increase[stageIndex][index]).power(player.buildings[stageIndex][index as 1].true).multiply(buildingsInfo.firstCost[stageIndex][index]).toArray();\n};\n\nexport const calculateGainedBuildings = (get: number, stageIndex: number, time: number) => {\n    let add: overlimit;\n    if (stageIndex === 1 && get === (player.inflation.vacuum ? 5 : 3)) {\n        add = Limit(global.upgradesInfo[1].effect[8] as overlimit).multiply(time).toArray();\n    } else if (stageIndex === 5) {\n        add = Limit(global.buildingsInfo.producing[5][1]).multiply(time).toArray();\n    } else {\n        add = Limit(global.buildingsInfo.producing[stageIndex][get + 1]).multiply(time).toArray();\n\n        if (stageIndex === 2 && get === 1 && !player.inflation.vacuum && player.researchesExtra[2][1] >= 1) {\n            add = Limit(add).plus(time * (global.researchesExtraInfo[2].effect[1] as number)).toArray();\n        }\n    }\n    if (add[0] === 0) { return; }\n    if (!Limit(add).isFinite()) { return console.warn('NaN or Infinity detected'); }\n\n    let stageGet = stageIndex;\n    if (stageIndex === 4) {\n        get = 0;\n    } else if (stageIndex === 5) {\n        if (get > 0) { add = Limit(add).divide(4 ** get).toArray(); }\n        stageGet = 4;\n        get++;\n    }\n    const building = player.buildings[stageGet][get];\n\n    building.current = Limit(building.current).plus(add).toArray();\n    building.total = Limit(building.total).plus(add).toArray();\n    building.trueTotal = Limit(building.trueTotal).plus(add).toArray();\n    if (Limit(building.highest).lessThan(building.current)) { building.highest = cloneArray(building.current); }\n\n    if (!player.inflation.vacuum) {\n        if (Limit(building.current).moreThan('1e300')) { building.current = [1, 300]; }\n        if (Limit(building.total).moreThan('1e300')) { building.total = [1, 300]; }\n        if (Limit(building.trueTotal).moreThan('1e300')) { building.trueTotal = [1, 300]; }\n        if (Limit(building.highest).moreThan('1e300')) { building.highest = [1, 300]; }\n    }\n\n    //Milestones that are based on gained amount\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current = Limit(building.current).multiply('1.78266192e-33').toArray();\n                awardMilestone(0, 3);\n            } else if (get === 5) {\n                player.buildings[2][0].current = Limit(building.current).divide('6.02214076e23').toArray();\n                player.buildings[2][0].total = Limit(building.total).divide('6.02214076e23').toArray();\n            }\n        }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //Never 0 for true vacuum\n            if (player.accretion.rank < 5 && Limit(building.current).moreThan('1e30')) { building.current = [1, 30]; }\n            awardMilestone(0, 3);\n        }\n    } else if (stageIndex === 4) {\n        if (Limit(player.collapse.elementsMax).lessThan(building.current)) { player.collapse.elementsMax = cloneArray(building.current); }\n    } else if (stageIndex === 5) { //Its not precise, but better optimized. Can be fixed on save load if required\n        player.buildings[5][0].current = Limit(player.buildings[5][0].current).plus(add).toArray();\n        if (player.inflation.vacuum) { awardMilestone(0, 5); }\n    }\n};\n\nexport const calculateGainedStrangeness = (get: number, time: number) => {\n    if (player.strangeness[5][9] <= get) { return; }\n    const strange = player.strange[get];\n    const max = Math.floor(player.strange[get + 1].current * 111);\n    if (strange.current >= max) { return; }\n\n    strange.current += time;\n    if (strange.current > max) {\n        strange.total += time - (strange.current - max);\n        strange.current = max;\n    } else { strange.total += time; }\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness', auto = false): boolean => {\n    if (!auto && !checkUpgrade(upgrade, stageIndex, type)) { return false; } //Auto already checked if allowed\n\n    let currency: number | overlimit;\n    if (type === 'strangeness') {\n        currency = player.strange[0].current;\n    } else if (stageIndex === 1) {\n        currency = player.discharge.energy;\n    } else if (stageIndex === 2) {\n        currency = cloneArray(player.buildings[2][1].current);\n    } else if (stageIndex === 3) {\n        currency = player.inflation.vacuum ?\n            Limit(player.buildings[1][0].current).multiply('1.78266192e-33').toArray() :\n            cloneArray(player.buildings[3][0].current);\n    } else /* if (stageIndex === 4 || stageIndex === 5) */ {\n        currency = cloneArray(player.buildings[4][0].current);\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        if (Limit(currency).lessThan(pointer.startCost[upgrade])) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        currency = Limit(currency).minus(pointer.startCost[upgrade]).toArray();\n\n        /* Special cases */\n        if (stageIndex === 4 && upgrade === 1 && global.tab === 'research') { switchTab('research'); }\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra' || type === 'researchesAuto' || type === 'ASR') {\n        let pointer;\n        let level;\n        if (type === 'researchesAuto' || type === 'ASR') {\n            pointer = global[`${type}Info`];\n            level = player[type];\n            if (type === 'ASR') { upgrade = stageIndex; }\n        } else {\n            pointer = global[`${type}Info`][stageIndex];\n            level = player[type][stageIndex];\n        }\n\n        if (level[upgrade] >= pointer.max[upgrade]) { return false; }\n        if (Limit(currency).lessThan(pointer.cost[upgrade])) { return false; }\n\n        level[upgrade]++;\n        currency = Limit(currency).minus(pointer.cost[upgrade]).toArray();\n\n        /* Special cases */\n        if (type === 'researches') {\n            if (stageIndex === 4 && upgrade === 2) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1 && upgrade === 2) {\n                if (player.stage.current < 4) { player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3; }\n                stageCheck('soft');\n            }\n        }\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `Research '${type === 'ASR' ? 'Structure Automation' : (pointer as { name: string[] }).name[upgrade]}' level increased, it is now ${level[upgrade]} ${level[upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n    } else if (type === 'elements') {\n        if (player.elements[upgrade] >= 1) { return false; }\n\n        const { elementsInfo } = global;\n        if (Limit(currency).lessThan(elementsInfo.startCost[upgrade])) { return false; }\n\n        player.elements[upgrade] = 1;\n        currency = Limit(currency).minus(elementsInfo.startCost[upgrade]).toArray();\n        if (!player.collapse.show.includes(upgrade)) { player.collapse.show.push(upgrade); }\n\n        /* Special cases */\n        if (upgrade === 7 || upgrade === 16 || upgrade === 20 || upgrade === 25) {\n            calculateMaxLevel(1, 4, 'researches', true);\n        } else if (upgrade === 9 || upgrade === 17) {\n            calculateMaxLevel(0, 4, 'researches', true);\n        } else if (upgrade === 11) {\n            calculateMaxLevel(2, 4, 'researches', true);\n        } else if (upgrade === 26) {\n            if (player.stage.current < 5) {\n                player.stage.current = 5;\n                if (player.stage.true === 4) { player.stage.true = 5; }\n                stageCheck('soft');\n            }\n        }\n        if (global.screenReader && !auto) { getId('SRMain').textContent = `New Element '${elementsInfo.name[upgrade]}' obtained`; }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if ((currency as number) < global.strangenessInfo[stageIndex].cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        (currency as number) -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 6) {\n                player.ASR[1] = Math.max(player.strangeness[1][6], player.ASR[1]);\n                calculateMaxLevel(0, 1, 'ASR', true);\n            } else if (upgrade === 7) {\n                calculateMaxLevel(0, 1, 'researchesAuto', true);\n            } else if (upgrade === 11) {\n                assignEnergy();\n                calculateMaxLevel(3, 1, 'strangeness', true);\n                calculateMaxLevel(4, 2, 'strangeness', true);\n                calculateMaxLevel(4, 3, 'strangeness', true);\n                calculateMaxLevel(5, 4, 'strangeness', true);\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                if (player.strangeness[2][2] < 3) { calculateMaxLevel(4, 2, 'researches', true); }\n                if (player.strangeness[2][2] === 2) { calculateMaxLevel(5, 2, 'researches', true); }\n            } else if (upgrade === 5) {\n                player.ASR[2] = Math.max(player.strangeness[2][5], player.ASR[2]);\n                calculateMaxLevel(0, 2, 'ASR', true);\n            } else if (upgrade === 6) {\n                calculateMaxLevel(1, 2, 'researchesAuto', true);\n            } else if (upgrade === 9) {\n                calculateMaxLevel(0, 2, 'ASR', true);\n                calculateMaxLevel(5, 2, 'strangeness', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 5) {\n                player.ASR[3] = Math.max(player.strangeness[3][5], player.ASR[3]);\n                calculateMaxLevel(0, 3, 'ASR', true);\n            } else if (upgrade === 6) {\n                calculateMaxLevel(2, 3, 'researchesAuto', true);\n            } else if (upgrade === 8) {\n                calculateMaxLevel(0, 3, 'ASR', true);\n                calculateMaxLevel(5, 3, 'strangeness', true);\n            } else if (upgrade === 9) {\n                assignNewMassCap();\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 6) {\n                player.ASR[4] = Math.max(player.strangeness[4][6], player.ASR[4]);\n                calculateMaxLevel(0, 4, 'ASR', true);\n            } else if (upgrade === 10) {\n                calculateMaxLevel(0, 4, 'ASR', true);\n                calculateMaxLevel(6, 4, 'strangeness', true);\n            } else if (upgrade === 11) {\n                if (player.elements[0] === 0) {\n                    player.elements[0] = 1;\n                    player.collapse.show.unshift(0);\n                    visualUpdateUpgrades(0, 4, 'elements');\n                }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 0) {\n                if (!player.inflation.vacuum) { stageCheck('soft'); }\n            } else if (upgrade === 1) {\n                player.stage.input *= 2;\n            } else if (upgrade === 5) {\n                if (player.inflation.vacuum) { stageCheck('soft'); }\n            } else if (upgrade === 6 || upgrade === 7) {\n                player.ASR[5] = player.strangeness[5][7];\n                if (player.strangeness[5][6] >= 2) { player.ASR[5]++; }\n                calculateMaxLevel(0, 5, 'ASR', true);\n            } else if (upgrade === 8) {\n                if (global.tab === 'strangeness') { switchTab('strangeness'); }\n            } else if (upgrade === 9) {\n                player.stage.input /= 100;\n            }\n        }\n        if (global.screenReader) { getId('SRMain').textContent = `Strangeness of '${pointer.name[upgrade]}' for ${global.stageInfo.word[stageIndex]} Stage is increased, level is now ${player.strangeness[stageIndex][upgrade]}${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'maxed' : ''}`; }\n    }\n\n    if (type === 'strangeness') {\n        player.strange[0].current = currency as number;\n    } else if (stageIndex === 1) {\n        if (player.strangeness[1][11] < 1) {\n            player.discharge.energy = Limit(currency).toNumber();\n            if (player.toggles.auto[1]) { dischargeResetCheck('upgrade'); }\n        }\n    } else if (stageIndex === 2) {\n        player.buildings[2][1].current = currency as overlimit;\n\n        if (player.buildings[2][2].current[0] === 0 && Limit(player.buildings[2][1].current).lessThan(player.buildings[2][1].true)) {\n            const old = player.buildings[2][1].true;\n            player.buildings[2][1].true = Math.floor(Limit(player.buildings[2][1].current).toNumber());\n            if (player.inflation.vacuum) {\n                player.discharge.energy -= (old - player.buildings[2][1].true) * global.dischargeInfo.getEnergy(1, 2);\n            } else if (player.buildings[2][1].current[0] === 0 && Limit(player.buildings[2][0].current).lessThan('2.8e-3')) {\n                player.buildings[2][0].current = [2.8, -3];\n            }\n        }\n    } else if (stageIndex === 3) {\n        player.inflation.vacuum ?\n            player.buildings[1][0].current = Limit(currency).divide('1.78266192e-33').toArray() :\n            player.buildings[3][0].current = currency as overlimit;\n    } else /*if (stageIndex === 4 || stageIndex === 5)*/ {\n        player.buildings[4][0].current = currency as overlimit;\n    }\n\n    assignBuildingInformation();\n    if (type === 'upgrades' || type === 'elements') {\n        visualUpdateUpgrades(upgrade, stageIndex, type);\n    } else {\n        calculateResearchCost(upgrade, stageIndex, type);\n        visualUpdateResearches(upgrade, stageIndex, type);\n    }\n    if (!auto) {\n        getUpgradeDescription(upgrade, stageIndex, type);\n        numbersUpdate();\n    }\n    return true;\n};\n\n//Currently can't allow price to be more than 2**1024. Because missing sorting function for numbers that big\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness') => {\n    if (type === 'researches' || type === 'researchesExtra' || type === 'researchesAuto') {\n        const pointer = type === 'researchesAuto' ? global.researchesAutoInfo : global[`${type}Info`][stageIndex];\n\n        pointer.cost[research] = stageIndex === 1 ?\n            pointer.startCost[research] + pointer.scaling[research] * (type === 'researchesAuto' ? player.researchesAuto[research] : player[type][stageIndex][research]) :\n            pointer.startCost[research] * pointer.scaling[research] ** (type === 'researchesAuto' ? player.researchesAuto[research] : player[type][stageIndex][research]);\n\n        if (pointer.cost[research] < 1) { //Remove all but 2 digits\n            const digits = 10 ** (-Math.floor(Math.log10(pointer.cost[research])) + 2);\n            pointer.cost[research] = Math.round(pointer.cost[research] * digits) / digits;\n        } else {\n            pointer.cost[research] = Math.round(pointer.cost[research] * 100) / 100;\n        }\n    } else if (type === 'ASR') {\n        global.ASRInfo.cost[stageIndex] = global.ASRInfo.costRange[stageIndex][player.ASR[stageIndex]];\n    } else if (type === 'strangeness') {\n        global.strangenessInfo[stageIndex].cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] * global.strangenessInfo[stageIndex].scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((global.strangenessInfo[stageIndex].startCost[research] + global.strangenessInfo[stageIndex].scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness', addAuto = false) => {\n    if (type === 'researchesAuto') {\n        if (research === 0) {\n            global.researchesAutoInfo.max[0] = (player.inflation.vacuum ? 2 : 1) + player.strangeness[1][7];\n        } else if (research === 1) {\n            global.researchesAutoInfo.max[1] = 1 + player.strangeness[2][6];\n        } else if (research === 2) {\n            global.researchesAutoInfo.max[2] = player.strangeness[3][6];\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            global.ASRInfo.max[1] = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            global.ASRInfo.max[2] = player.strangeness[2][9] >= 1 ? 6 : 5;\n        } else if (stageIndex === 3) {\n            global.ASRInfo.max[3] = player.strangeness[3][8] >= 1 ? 5 : 4;\n        } else if (stageIndex === 4) {\n            global.ASRInfo.max[4] = player.strangeness[4][10] >= 1 ? 5 : 4;\n        } else if (stageIndex === 5) {\n            global.ASRInfo.max[5] = player.strangeness[5][7] + Number(player.strangeness[5][6] >= 2);\n        }\n    } else if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 4) {\n                global.researchesInfo[2].max[4] = (player.inflation.vacuum ? 1 : 2) + Math.min(player.strangeness[2][2], 2);\n            } else if (research === 5) {\n                global.researchesInfo[2].max[5] = (player.inflation.vacuum ? 1 : 2) + Number(player.strangeness[2][2] >= 2);\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                global.researchesInfo[4].max[0] = 3 + (3 * player.researches[4][2]);\n                if (player.elements[9] === 1) { global.researchesInfo[4].max[0] += 12; }\n                if (player.elements[17] === 1) { global.researchesInfo[4].max[0] += 27; }\n            } else if (research === 1) {\n                global.researchesInfo[4].max[1] = 2 + Number(player.elements[16] === 1) + Number(player.elements[20] === 1) + Number(player.elements[25] === 1);\n                if (player.elements[7] === 1) { global.researchesInfo[4].max[1] += 2; }\n            } else if (research === 2) {\n                global.researchesInfo[4].max[2] = player.elements[11] === 1 ? 2 : 1;\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                global.researchesExtraInfo[3].max[0] = 12;\n                if (player.accretion.rank >= 3) { global.researchesExtraInfo[3].max[0] += 17; }\n                if (player.strangeness[3][2] >= 1) { global.researchesExtraInfo[3].max[0] += player.inflation.vacuum ? 11 : 10 * Math.min(player.strangeness[3][2], 2); }\n            } else if (research === 1) {\n                global.researchesExtraInfo[3].max[1] = 5;\n                if (player.inflation.vacuum) {\n                    if (player.strangeness[3][2] >= 2) { global.researchesExtraInfo[3].max[1] += 1; }\n                } else if (player.strangeness[3][2] >= 1) { global.researchesExtraInfo[3].max[1] += Math.min(player.strangeness[3][2], 2); }\n            } else if (research === 3) {\n                global.researchesExtraInfo[3].max[3] = player.inflation.vacuum ? 2 : 20;\n            } else if (research === 4) {\n                global.researchesExtraInfo[3].max[4] = 1;\n                if (player.accretion.rank >= 4) { global.researchesExtraInfo[3].max[4] += Math.min(player.accretion.rank - 3, 2); }\n            }\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 3) {\n                global.strangenessInfo[1].max[3] = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 5) {\n                global.strangenessInfo[1].max[5] = player.inflation.vacuum ? 5 : 10;\n            } else if (research === 6) {\n                global.strangenessInfo[1].max[6] = player.inflation.vacuum ? 5 : 3;\n            } else if (research === 7) {\n                global.strangenessInfo[1].max[7] = player.inflation.vacuum ? 1 : 2;\n            } else if (research === 9) {\n                global.strangenessInfo[1].max[9] = 4 + Math.min(player.challenges.void[3], 4);\n            }\n        } else if (stageIndex === 2) {\n            if (research === 0) {\n                global.strangenessInfo[2].max[0] = player.inflation.vacuum ? 6 : 9;\n            } else if (research === 1) {\n                global.strangenessInfo[2].max[1] = 6 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 3) {\n                global.strangenessInfo[2].max[3] = 3 + Number(player.challenges.void[2] >= 1);\n            } else if (research === 4) {\n                global.strangenessInfo[2].max[4] = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 5) {\n                global.strangenessInfo[2].max[5] = player.strangeness[2][9] >= 1 ? 6 : 5;\n            } else if (research === 9) {\n                global.strangenessInfo[2].max[9] = 1 + Number(player.challenges.void[2] >= 2);\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                global.strangenessInfo[3].max[0] = 8 + Math.min(player.challenges.void[3] * 2, 8);\n            } else if (research === 1) {\n                global.strangenessInfo[3].max[1] = 4 + Math.floor(Math.min(player.challenges.void[3] / 2, 2));\n            } else if (research === 4) {\n                global.strangenessInfo[3].max[4] = player.strangeness[1][11] >= 1 ? 2 : 1;\n            } else if (research === 5) {\n                global.strangenessInfo[3].max[5] = player.strangeness[3][8] >= 1 ? 5 : 4;\n            } else if (research === 9) {\n                global.strangenessInfo[3].max[9] = 3 + Number(player.challenges.void[4] >= 4);\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                global.strangenessInfo[4].max[0] = 8 + Math.min(player.challenges.void[3], 4);\n            } else if (research === 1) {\n                global.strangenessInfo[4].max[1] = 4 + Math.floor(Math.min(player.challenges.void[3] / 2, 2));\n            } else if (research === 5) {\n                global.strangenessInfo[4].max[5] = player.strangeness[1][11] >= 1 ? 3 : 1;\n            } else if (research === 6) {\n                global.strangenessInfo[4].max[6] = player.strangeness[4][10] >= 1 ? 5 : 4;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0) {\n                global.strangenessInfo[5].max[0] = player.inflation.vacuum ? 1 : 3;\n            }\n        }\n    }\n\n    calculateResearchCost(research, stageIndex, type);\n    visualUpdateResearches(research, stageIndex, type);\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesSet(type, [stageIndex, research]); }\n};\n\nexport const autoUpgradesSet = (which: 'all' | number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const { autoU: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (let s = 0; s <= 5; s++) {\n            auto[s] = [];\n            for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n                if (player.upgrades[s][i] < 1) {\n                    auto[s].push(i);\n                }\n            }\n\n            const { startCost } = global.upgradesInfo[s];\n            auto[s].sort((a, b) => startCost[a] - startCost[b]);\n        }\n    } else if (typeof which === 'number') {\n        auto[which] = [];\n        for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n            if (player.upgrades[which][i] < 1) {\n                auto[which].push(i);\n            }\n        }\n\n        const { startCost } = global.upgradesInfo[which];\n        auto[which].sort((a, b) => startCost[a] - startCost[b]);\n    }\n};\n\nexport const autoUpgradesBuy = (stageIndex: number) => {\n    if (player.researchesAuto[2] < 1 || !player.toggles.auto[5]) { return; }\n    const auto = global.automatization.autoU[stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\n//All = reset all of current active stages; As number means reset that stage only; As array means add [1] into stage [0] if it's not already inside\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: 'all' | number | number[]) => {\n    if (type === 'researches') {\n        if (!player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (!player.toggles.auto[7]) { return; }\n    }\n\n    const { [type === 'researches' ? 'autoR' : 'autoE']: auto } = global.automatization;\n\n    if (which === 'all') {\n        for (let s = 0; s <= 5; s++) {\n            const pointer = global[`${type}Info`][s];\n\n            auto[s] = [];\n            for (let i = 0; i < pointer.maxActive; i++) {\n                if (player[type][s][i] < pointer.max[i]) {\n                    auto[s].push(i);\n                }\n            }\n            auto[s].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n        }\n    } else if (typeof which === 'number') {\n        const pointer = global[`${type}Info`][which];\n\n        auto[which] = [];\n        for (let i = 0; i < pointer.maxActive; i++) {\n            if (player[type][which][i] < pointer.max[i]) {\n                auto[which].push(i);\n            }\n        }\n        auto[which].sort((a, b) => pointer.cost[a] - pointer.cost[b]);\n    } else { //Will get sorted automatically\n        if (!auto[which[0]].some((a) => a === which[1])) { auto[which[0]].unshift(which[1]); }\n    }\n};\n\nexport const autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    if (type === 'researches') {\n        if (player.researchesAuto[2] < 2 || !player.toggles.auto[6]) { return; }\n    } else if (type === 'researchesExtra') {\n        if (player.researchesAuto[2] < 3 || !player.toggles.auto[7]) { return; }\n    }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    const pointer = global[`${type}Info`][stageIndex];\n\n    let sort = false;\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else {\n            if (!bought) {\n                if (pointer.cost[auto[i]] > pointer.cost[auto[i + 1]]) {\n                    sort = true;\n                    continue;\n                }\n                break;\n            } else { i--; }\n        }\n    }\n    if (sort) { auto.sort((a, b) => pointer.cost[a] - pointer.cost[b]); }\n};\n\nexport const autoElementsSet = () => {\n    if (player.inflation.vacuum ? !player.toggles.auto[8] : player.buildings[5][3].true < 1) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    if (player.inflation.vacuum) {\n        for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n            if (elements[i] === 0) { auto.push(i); }\n        }\n    } else {\n        for (const add of player.collapse.show) {\n            if (elements[add] === 0) { auto.push(add); }\n        }\n    }\n\n    const { startCost } = global.elementsInfo;\n    auto.sort((a, b) => startCost[a] - startCost[b]);\n};\n\nexport const autoElementsBuy = () => {\n    if (player.strangeness[4][4] < 1 || (player.inflation.vacuum ? !player.toggles.auto[8] : player.buildings[5][3].true < 1)) { return; }\n    const { elements: auto } = global.automatization;\n    const { elements } = player;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] === 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'normal' | 'buildings' | 'auto', change = false) => {\n    const { toggles } = player;\n\n    let toggle;\n    if (type === 'normal') {\n        toggle = getId(`toggle${number}`);\n    } else if (type === 'buildings') {\n        toggle = getId(`toggleBuilding${number}`);\n    } else {\n        toggle = getId(`toggleAuto${number}`);\n    }\n\n    if (change) {\n        if (type === 'buildings') {\n            const active = player.stage.active;\n            toggles.buildings[active][number] = !toggles.buildings[active][number];\n            if (number === 0) {\n                if (player.researchesAuto[0] < 2) { return; }\n                for (let i = 1; i < toggles.buildings[active].length; i++) {\n                    toggles.buildings[active][i] = toggles.buildings[active][0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                let anyOn = false;\n                for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                    if (toggles.buildings[active][i] && player.buildings[active][i].highest[0] > 0) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                toggles.buildings[active][0] = anyOn;\n                toggleSwap(0, 'buildings');\n            }\n        } else {\n            toggles[type][number] = !toggles[type][number];\n        }\n    }\n    const status = type === 'buildings' ? toggles.buildings[player.stage.active][number] : toggles[type][number];\n\n    let extraText = '';\n    if (type === 'buildings' && number === 0) {\n        extraText = 'All ';\n    } else if (type !== 'normal') {\n        extraText = 'Auto ';\n    }\n\n    if (!status) {\n        toggle.style.color = 'var(--red-text-color)';\n        toggle.style.borderColor = 'crimson';\n        toggle.textContent = `${extraText}OFF`;\n        if (global.screenReader && toggle.ariaLabel !== null) { toggle.ariaLabel = toggle.ariaLabel.replace('ON', 'OFF'); }\n    } else {\n        toggle.style.color = '';\n        toggle.style.borderColor = '';\n        toggle.textContent = `${extraText}ON`;\n        if (global.screenReader && toggle.ariaLabel !== null) { toggle.ariaLabel = toggle.ariaLabel.replace('OFF', 'ON'); }\n    }\n};\n\nexport const toggleBuy = (type = '' as '1' | 'max' | 'any') => {\n    const { shop } = player.toggles;\n    const input = getId('buyAnyInput') as HTMLInputElement;\n\n    switch (type) {\n        case '1':\n            shop.howMany = 1;\n            break;\n        case 'max':\n            shop.howMany = -1;\n            break;\n        case 'any':\n            shop.input = Math.max(Math.trunc(Number(input.value)), -1);\n            if (shop.input === 0) { shop.input = 1; }\n            shop.howMany = shop.input;\n    }\n    getId('buy1x').style.backgroundColor = shop.howMany === 1 ? 'green' : '';\n    getId('buyAny').style.backgroundColor = Math.abs(shop.howMany) !== 1 ? 'green' : '';\n    getId('buyMax').style.backgroundColor = shop.howMany === -1 ? 'green' : '';\n    if (type !== '1' && type !== 'max') { input.value = format(shop.input, { digits: 0, type: 'input' }); }\n    numbersUpdate();\n};\n\nexport const stageResetCheck = (stageIndex: number, auto = false): boolean => {\n    if (player.challenges.active !== -1) { return false; }\n\n    let allowed = false;\n    if (stageIndex >= 5) {\n        allowed = player.stage.current >= 5; //player.elements[26] === 1;\n    } else if (stageIndex === 4) {\n        return false;\n    } else if (stageIndex === 3) {\n        allowed = Limit(player.buildings[3][0].current).moreOrEqual('2.47e31');\n    } else if (stageIndex === 2) {\n        allowed = Limit(player.buildings[2][1].current).moreOrEqual('1.194e29');\n    } else if (stageIndex === 1) {\n        allowed = Limit(player.buildings[1][3].current).moreOrEqual('1.67e21');\n    }\n\n    if (auto && allowed) {\n        if (player.strangeness[5][2] < 1 || (stageIndex >= 4 && global.strangeInfo.gain(stageIndex) / 100 ** player.strangeness[5][9] < player.stage.input)) { return false; }\n        stageResetReward(stageIndex);\n    }\n    return allowed;\n};\n\nexport const stageAsyncReset = async() => {\n    const { stage } = player;\n    const active = player.inflation.vacuum ? 6 : (stage.active === 4 && stage.current === 5 && player.events[1] ? 5 : stage.active);\n\n    if (!stageResetCheck(active)) {\n        if (stage.resets < 1 && (player.inflation.vacuum ? stage.current < 5 : player.upgrades[1][9] < 1)) { return; }\n        if (player.challenges.active !== -1) {\n            const exit = await Confirm(`Current active Challenge is '${global.challengesInfo.name[player.challenges.active]}', leave it?`);\n            return exit ? exitChallenge() : Alert(`'${global.challengesInfo.name[player.challenges.active]}' will remain active for now`);\n        }\n        if (active >= 5) { return Alert('\"Iron\" wasn\\'t obtained yet'); }\n        if (active === 4) { return Alert('Reach Intergalactic first'); }\n        if (active === 3) { return Alert(`Self sustaining is not yet possible, obtain at least ${format(2.47e31)} Mass`); }\n        if (active === 2) { return Alert(`Look's like more Mass expected, need even more Drops, around ${Limit('1.194e29').minus(player.buildings[2][1].current).format()}`); }\n        if (active === 1) { return Alert(`Not enough to form a single Drop of water, need ${Limit('1.67e21').minus(player.buildings[1][3].current).format()} extra Molecules`); }\n    } else {\n        let ok = true;\n        if (player.toggles.normal[1]) {\n            ok = await Confirm(active === 6 ? `Ready to restart progress for ${format(global.strangeInfo.gain(active) / 100 ** player.strangeness[5][9])} ${global.strangeInfo.strangeName[player.strangeness[5][9]]}?` :\n                active === 5 ? `Return to Microworld? ${player.strange[0].total === 0 ? 'Maybe something will be obtained' : `Will obtain ${format(global.strangeInfo.gain(active))} Strange quarks`}` :\n                active === stage.current ? 'Ready to enter next Stage? Next one will be harder than current' : `Reset this Stage for ${format(global.strangeInfo.gain(active))} Strange quarks?`);\n        }\n        if (ok) { stageResetReward(active); }\n    }\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage, researchesAuto } = player;\n\n    stage.resets++;\n    let update: false | 'normal' | 'soft' = 'normal';\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        stage.active = 1;\n        stage.current = 1;\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 5) {\n            stage.current++;\n            if (stage.active === stage.current - 1) {\n                stage.active = stage.current;\n            } else { update = 'soft'; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.events[0] = false;\n            }\n        } else {\n            stage.current = 1 + player.strangeness[5][0];\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                stage.active = stage.current;\n            } else { update = 'soft'; }\n        }\n\n        if (stageIndex === 5) {\n            resetThese.unshift(4);\n            if (player.strangeness[1][7] < 1) {\n                researchesAuto[0] = 0;\n                calculateMaxLevel(0, 1, 'researchesAuto', true);\n            }\n            if (player.strangeness[2][6] < 1) {\n                researchesAuto[1] = 0;\n                calculateMaxLevel(1, 2, 'researchesAuto', true);\n                const maxOffline = stage.true < 6 ? 14400 : 28800;\n                if (player.time.offline > maxOffline) { player.time.offline = maxOffline; }\n            }\n        } else if (stageIndex === 2) {\n            if (researchesAuto[1] === 0) {\n                researchesAuto[1] = 1;\n                calculateMaxLevel(1, 2, 'researchesAuto');\n            }\n        } else if (stageIndex === 1) {\n            if (researchesAuto[0] === 0) {\n                researchesAuto[0] = 1;\n                calculateMaxLevel(0, 1, 'researchesAuto');\n            }\n        }\n    } else { update = stageIndex === stage.active ? 'soft' : false; }\n\n    if (stage.true >= 5) {\n        const trueGain = global.strangeInfo.gain(stageIndex);\n        if (trueGain > stage.best) { stage.best = trueGain; }\n\n        const resetType = player.strangeness[5][9];\n        const postGain = trueGain / 100 ** resetType;\n        player.strange[resetType].current += postGain;\n        player.strange[resetType].total += postGain;\n\n        if (stageIndex >= 4) {\n            const storage = global.historyStorage.stage;\n            const history = player.history.stage;\n            storage.unshift([postGain, stage.time, resetType]);\n            if (storage.length > history.input[1]) { storage.length = history.input[1]; }\n            if (postGain * 111 ** resetType / stage.time > history.best[0] * 111 ** history.best[2] / history.best[1]) { history.best = [postGain, stage.time, resetType]; }\n        }\n    }\n\n    resetStage(resetThese, update);\n};\n\nexport const switchStage = (stage: number) => {\n    if (player.stage.active === stage) {\n        if (global.lastActive !== null) {\n            global.lastActive = null;\n        } else { getId('stageSelect').classList.remove('active'); }\n        return;\n    }\n    if (!global.stageInfo.activeAll.includes(stage)) { return; }\n    if ((global.tab === 'Elements' || (global.tab === 'research' && global.subtab.researchCurrent === 'Elements')) && stage !== 4 && stage !== 5) {\n        global.lastActive = stage;\n        return;\n    }\n\n    player.stage.active = stage;\n    stageCheck();\n\n    if (!player.events[1] && player.stage.active === 5) { playEvent(4, 1); }\n};\n\nexport const assignDischargeInformation = () => {\n    global.dischargeInfo.next = Math.round((10 - player.researches[1][3] - player.strangeness[1][1]) ** player.discharge.current);\n};\n\nexport const dischargeResetCheck = (auto = false as false | 'interval' | 'upgrade'): boolean => {\n    if (player.upgrades[1][5] < 1 || player.buildings[1][1].true <= 0) { return false; }\n    assignDischargeInformation();\n\n    if (auto !== false) {\n        if (player.strangeness[1][3] < 1 || (auto === 'interval' && player.discharge.energy < global.dischargeInfo.next)) { return false; }\n        dischargeReset(true);\n    }\n    return true;\n};\n\nexport const dischargeAsyncReset = async() => {\n    if (!dischargeResetCheck()) { return; }\n\n    let ok = true;\n    if (player.toggles.normal[2] || player.stage.active !== 1) {\n        ok = await Confirm(player.stage.active === 1 ?\n            `This will reset all current Structures and Energy. ${player.discharge.energy >= global.dischargeInfo.next ? 'Enough Energy to gain boost from new goal' : 'Not enough Energy, but can reset anyway'}, continue?` :\n            `Discarge attempt while inside '${global.stageInfo.word[player.stage.active]}'.\\n${player.discharge.energy >= global.dischargeInfo.next ? 'Enough' : 'Not enough'} to reach next goal, continue?`);\n    }\n    if (ok) {\n        if (global.screenReader) { getId('SRMain').textContent = `Structures and Energy were reset${player.discharge.energy >= global.dischargeInfo.next ? ' for some' : ', no'} boost`; }\n        assignDischargeInformation(); //Just in case\n        dischargeReset();\n    }\n};\n\nconst dischargeReset = (auto = false) => {\n    if (player.discharge.energy >= global.dischargeInfo.next) {\n        player.discharge.current++;\n    }\n    awardMilestone(0, 1);\n    if (player.challenges.active === 0) {\n        const progress = 1 + player.researchesExtra[1][2] + Number(player.researchesExtra[1][4] >= 1);\n        if (player.challenges.void[1] < progress) {\n            for (let i = player.challenges.void[1]; i < progress; i++) {\n                notify(`New Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][1][i]}`);\n            }\n            player.challenges.void[1] = progress;\n        }\n    }\n    if (!auto || player.strangeness[1][3] < 2) { reset('discharge', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [1]); }\n};\n\nexport const calculateCloudSoftcap = () => 1e4 * global.milestonesInfo[2].reward[0];\nexport const assignVaporizationInformation = () => {\n    let get = Limit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(global.vaporizationInfo.effect2U1()).toArray();\n    const clouds = player.vaporization.clouds;\n\n    const assignGet = (cloudsTill: number | string, softcap: number, next: number) => {\n        const cloudTest = Limit(cloudsTill).power(1 / softcap).toArray();\n        const effective = Limit(clouds).power(1 / softcap).plus(get).toArray();\n        if (Limit(effective).moreThan(cloudTest)) {\n            get = Limit(Limit(clouds).moreThan(cloudsTill) ?\n                Limit(clouds).minus(cloudsTill).power(1 / next).plus(get).toArray() :\n                Limit(effective).minus(cloudTest).toArray()\n            ).power(next).plus(cloudsTill).minus(clouds).toArray();\n        } else if (Limit(get).moreThan('1')) {\n            get = Limit(effective).minus('1').power(softcap).plus('1').minus(clouds).toArray();\n        }\n    };\n    if (player.inflation.vacuum) {\n        player.challenges.active !== 0 ? assignGet(calculateCloudSoftcap(), 0.4, 0.3) : assignGet(calculateCloudSoftcap(), 0.38, 0.28);\n    } else { assignGet('1e4', 0.6, 0.36); }\n\n    global.vaporizationInfo.get = get;\n};\n\nexport const vaporizationResetCheck = (auto = false): boolean => {\n    assignVaporizationInformation();\n    if (player.upgrades[2][1] < 1 || Limit(global.vaporizationInfo.get).lessThan('1')) { return false; }\n\n    if (auto) {\n        if (player.strangeness[2][4] < 1 || Limit(player.vaporization.clouds).multiply(player.vaporization.input).moreOrEqual(global.vaporizationInfo.get)) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\n\nexport const vaporizationAsyncReset = async() => {\n    if (!vaporizationResetCheck()) { return; }\n\n    let ok = true;\n    if (player.toggles.normal[3] || player.stage.active !== 2) {\n        ok = await Confirm(player.stage.active === 2 ?\n            `Reset structures and upgrades for ${Limit(global.vaporizationInfo.get).format()} Clouds?` :\n            `Vaporization attempt while inside '${global.stageInfo.word[player.stage.active]}'.\\nConfirm for ${Limit(global.vaporizationInfo.get).format()} Clouds?`);\n    }\n    if (ok) {\n        assignVaporizationInformation(); //Just in case\n        if (global.screenReader) { getId('SRMain').textContent = `Progress were reset for ${Limit(global.vaporizationInfo.get).format()} Clouds`; }\n        vaporizationReset();\n    }\n};\n\nconst vaporizationReset = () => {\n    const { vaporization } = player;\n\n    vaporization.clouds = Limit(vaporization.clouds).plus(global.vaporizationInfo.get).toArray();\n    if (Limit(vaporization.cloudsMax).lessThan(vaporization.clouds)) { vaporization.cloudsMax = cloneArray(vaporization.clouds); }\n    awardMilestone(0, 2);\n    if (player.challenges.active === 0) {\n        const progress = 1 + Number(Limit(vaporization.clouds).moreThan('1e4')) + Number(Limit(vaporization.clouds).moreThan('1e8'));\n        if (player.challenges.void[2] < progress) {\n            const old = player.challenges.void[2];\n            for (let i = old; i < progress; i++) {\n                notify(`New Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][2][i]}`);\n            }\n            player.challenges.void[2] = progress;\n            if (old < 1) {\n                calculateMaxLevel(3, 2, 'strangeness', true);\n            } else if (progress > 1 && old < 2) {\n                calculateMaxLevel(9, 2, 'strangeness', true);\n            }\n        }\n    }\n    reset('vaporization', player.inflation.vacuum ? (player.strangeness[2][10] >= 1 ? [1, 2] : [1, 2, 3, 4, 5]) : [2]);\n};\n\nexport const rankResetCheck = (auto = false): boolean => {\n    const requirement = global.accretionInfo.rankCost[player.accretion.rank];\n    if (requirement === 0) { return false; }\n\n    if (player.inflation.vacuum) {\n        if (Limit(player.buildings[1][0].current).multiply('1.78266192e-33').lessThan(requirement)) { return false; }\n    } else if (Limit(player.buildings[3][0].current).lessThan(requirement)) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1) { return false; }\n        rankReset();\n    }\n    return true;\n};\n\nexport const rankAsyncReset = async() => {\n    if (!rankResetCheck()) { return; }\n\n    let ok = true;\n    if ((player.toggles.normal[4] || player.stage.active !== 3) && player.accretion.rank !== 0) {\n        ok = await Confirm(player.stage.active === 3 ?\n            'Increasing Rank will reset structures, upgrades, stage researches. But unlock something new' :\n            `Rank increase attempt while inside '${global.stageInfo.word[player.stage.active]}'. Continue anyway?`);\n    }\n    if (ok) {\n        rankReset();\n        if (global.screenReader) { getId('SRMain').textContent = `Rank is now '${global.accretionInfo.rankName[player.accretion.rank]}'`; }\n    }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        stageCheck('soft');\n    }\n    if (player.challenges.active === 0) {\n        const progress = player.accretion.rank - 1;\n        if (player.challenges.void[3] < progress) {\n            const old = player.challenges.void[3];\n            for (let i = old; i < progress; i++) {\n                notify(`New Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][3][i]}`);\n            }\n            player.challenges.void[3] = progress;\n            if (old < 4) {\n                calculateMaxLevel(9, 1, 'strangeness', true);\n                calculateMaxLevel(1, 2, 'strangeness', true);\n                calculateMaxLevel(0, 3, 'strangeness', true);\n                calculateMaxLevel(1, 3, 'strangeness', true);\n                calculateMaxLevel(0, 4, 'strangeness', true);\n                calculateMaxLevel(1, 4, 'strangeness', true);\n            } else if (progress > 4 && old < 5) {\n                calculateMaxLevel(9, 3, 'strangeness', true);\n            }\n        }\n    }\n    reset('rank', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    if (player.stage.active === 3) { updateRankInfo(); }\n};\n\nexport const minShift = () => 600 / 2 ** Math.min(player.strangeness[3][9], 3) / (player.strangeness[3][9] >= 4 ? 1.25 : 1);\nexport const maxShift = () => 600 * global.milestonesInfo[4].reward[1];\nexport const assignNewMassCap = () => {\n    let value = player.accretion.input;\n    const min = minShift();\n    if (value < min || !isFinite(value)) {\n        value = min;\n    } else if (value > maxShift()) { value = maxShift(); }\n\n    global.inflationInfo.massCap = value;\n};\n\nexport const assignCollapseInformation = () => {\n    const building = player.buildings[4];\n\n    if (!player.inflation.vacuum) {\n        const { elements } = player;\n\n        let massGain = 0.004;\n        if (elements[3] === 1) { massGain += 0.001; }\n        if (elements[5] === 1) { massGain += 0.00015 * building[1].true; }\n        if (elements[10] === 1) { massGain *= 2; }\n        if (elements[14] === 1) { massGain *= 1.4; }\n        global.collapseInfo.newMass = (elements[15] === 1 ? global.collapseInfo.trueStars : building[1].true) * massGain * global.collapseInfo.starEffect[2]();\n    } else { global.collapseInfo.newMass = Limit(global.buildingsInfo.producing[1][1]).multiply(global.inflationInfo.massCap).min(player.buildings[1][0].current).multiply('8.96499278339628e-67').toNumber(); } //1.78266192e-33 / 1.98847e33\n\n    const { starCheck } = global.collapseInfo;\n    const { stars } = player.collapse;\n    const nova = player.researchesExtra[4][0];\n    starCheck[0] = nova >= 1 ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 4) - stars[0], 0) : 0;\n    starCheck[1] = nova >= 2 ? Math.max(building[3].true - stars[1], 0) : 0;\n    starCheck[2] = nova >= 3 ? Math.max(building[4].true - stars[2], 0) : 0;\n};\n\nexport const collapseResetCheck = (auto = false): boolean => {\n    if (player.upgrades[4][0] < 1) { return false; }\n    const { collapseInfo } = global;\n    const { collapse } = player;\n    assignCollapseInformation();\n\n    if (auto) {\n        const { starEffect } = global.collapseInfo;\n        const starBoost = (starEffect[0](true) / starEffect[0]()) * (starEffect[1](true) / starEffect[1]()) * (starEffect[2](true) / starEffect[2]()) >= collapse.input[1];\n        if ((collapseInfo.newMass < collapse.mass * collapse.input[0] && !starBoost) || player.strangeness[4][5] < 1) { return false; }\n        collapseReset();\n        return true;\n    }\n\n    return collapseInfo.newMass > collapse.mass || collapseInfo.starCheck[0] > 0 || collapseInfo.starCheck[1] > 0 || collapseInfo.starCheck[2] > 0;\n};\n\nexport const collapseAsyncReset = async() => {\n    if (!collapseResetCheck()) { return; }\n    const { collapse } = player;\n    const { collapseInfo } = global;\n    const nova = player.researchesExtra[4][0];\n\n    let ok = true;\n    if (player.toggles.normal[5] || player.stage.active !== 4) {\n        let message = player.stage.active === 4 ?\n            `This will reset all non automization researches and upgrades. Total Mass ${collapseInfo.newMass <= collapse.mass ? \"won't change\" : `will be now ${format(collapseInfo.newMass)}`}` :\n            `Collapse attempt while inside '${global.stageInfo.word[player.stage.active]}'.\\nSolar mass will increase by +${format(collapseInfo.newMass - collapse.mass)}`;\n        starMessage:\n        if (nova >= 1) {\n            message += `, also will get ${format(collapseInfo.starCheck[0])} Red giants`;\n            if (nova < 2) { break starMessage; }\n            message += `, ${format(collapseInfo.starCheck[1])} Neutron stars`;\n            if (nova < 3) { break starMessage; }\n            message += ` and ${format(collapseInfo.starCheck[2])} Black holes`;\n        }\n        if (collapse.mass >= 1e5 && player.buildings[5][3].true > 0) { message += `.\\nThis ${Limit(calculateBuildingsCost(3, 5)).moreThan(Math.max(player.collapse.mass, collapseInfo.newMass)) ? 'wont' : 'will'} be enough Mass for a new Galaxy`; }\n        if (player.stage.active !== 4) { message += '.\\nContinue?'; }\n        ok = await Confirm(message);\n    }\n    if (ok) {\n        assignCollapseInformation(); //Just in case\n        collapseReset();\n        if (global.screenReader) {\n            let message = `Mass has been increased to ${format(collapse.mass)}`;\n            starMessage:\n            if (nova >= 1) {\n                message += `, Red giants to ${format(collapse.stars[0])}`;\n                if (nova < 2) { break starMessage; }\n                message += `, Neutron stars - ${format(collapse.stars[1])}`;\n                if (nova < 3) { break starMessage; }\n                message += ` and Black holes - ${format(collapse.stars[2])}`;\n            }\n            getId('SRMain').textContent = message;\n        }\n    }\n};\n\nconst collapseReset = () => {\n    const { collapseInfo } = global;\n    const { collapse } = player;\n    const resetThese = player.inflation.vacuum ? ([1, 2, 3, 4, 5]) : (player.strangeness[5][5] < 1 ? [4, 5] : [4]);\n\n    if (collapseInfo.newMass > collapse.mass) { collapse.mass = collapseInfo.newMass; }\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n    awardMilestone(0, 4);\n    awardMilestone(1, 4);\n    if (player.challenges.active === 0) {\n        const progress = 1 + Number(collapse.stars[0] > 1) + Number(collapse.stars[1] > 1) + Number(collapse.stars[2] > 1) + Number(player.elements[26] === 1);\n        if (player.challenges.void[4] < progress) {\n            const old = player.challenges.void[4];\n            for (let i = old; i < progress; i++) {\n                notify(`New Void reward achieved\\nReward: ${global.challengesInfo.rewardText[0][4][i]}`);\n            }\n            player.challenges.void[4] = progress;\n            if (progress > 3 && old < 4) {\n                calculateMaxLevel(9, 3, 'strangeness', true);\n            }\n        }\n    }\n    reset('collapse', resetThese);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n};\n\nexport const calculateMilestoneInformation = (index: number, stageIndex: number) => {\n    const { need, reward } = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (!player.inflation.vacuum) {\n        const scaling = global.milestonesInfo[stageIndex].scalingOld[index];\n        need[index] = level < scaling[0].length ? Limit(scaling[0][level]).toArray() : [0, 0];\n        reward[index] = level < scaling[1].length ? scaling[1][level] : 0;\n    } else {\n        if (stageIndex === 1) {\n            if (index === 0) {\n                need[0] = Limit('1e100').power(level).multiply('1e100').toArray();\n                reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(5e4 + 5e4 * level).toArray();\n                reward[1] = Math.floor((2 * level) ** 1.11);\n            }\n        } else if (stageIndex === 2) {\n            if (index === 0) {\n                need[0] = Limit('1e2').power(level).multiply('1e2').toArray();\n                reward[0] = 3 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(1000 + 1000 * level).toArray();\n                reward[1] = 1.12 ** level;\n            }\n        } else if (stageIndex === 3) {\n            if (index === 0) {\n                need[0] = Limit('1e4').power(level).multiply('1e-16').toArray();\n                reward[0] = 1.08 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(5 + 5 * level).toArray();\n                reward[1] = level / 200;\n            }\n        } else if (stageIndex === 4) {\n            if (index === 0) {\n                need[0] = Limit('1e6').power(level).multiply('1e6').toArray();\n                reward[0] = 1.14 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(50 + 50 * level).toArray();\n                reward[1] = 1.03 ** level;\n            }\n        } else if (stageIndex === 5) {\n            if (index === 0) {\n                need[0] = Limit('10').power(level).multiply('10').toArray();\n                reward[0] = 1.06 ** level;\n            } else if (index === 1) {\n                need[1] = Limit(2 + 2 * level).toArray();\n                reward[1] = level / 10;\n            }\n        }\n    }\n};\n\nconst awardMilestone = (index: number, stageIndex: number, count = 0) => { //Export if needed\n    if (!milestoneCheck(index, stageIndex)) {\n        if (count > 0) {\n            notify(`Milestone '${global.milestonesInfo[stageIndex].name[index]}' ${count > 1 ? `${format(count)} new tiers` : 'new tier'} reached\\nTotal is now: ${format(player.milestones[stageIndex][index])}`);\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (index === 1) {\n                        assignEnergy();\n                        awardMilestone(1, 1);\n                    }\n                } else if (stageIndex === 4) {\n                    if (index === 1) { assignNewMassCap(); }\n                }\n            }\n        }\n        return;\n    }\n\n    if (!player.inflation.vacuum) {\n        const reward = global.milestonesInfo[stageIndex].reward[index];\n        player.strange[0].current += reward;\n        player.strange[0].total += reward;\n    }\n    player.milestones[stageIndex][index]++;\n    calculateMilestoneInformation(index, stageIndex);\n    awardMilestone(index, stageIndex, count + 1);\n};\n\nexport const enterChallenge = async(index: number) => {\n    if (player.challenges.active === index) {\n        if (await Confirm(`Leave the '${global.challengesInfo.name[index]}'?`)) { exitChallenge(); }\n        getChallengeDescription(index);\n        return;\n    }\n    if (!player.inflation.vacuum) { return; }\n    if (index === 0 && player.strangeness[5][0] < 1) { return; }\n    if (!await Confirm(`Enter the '${global.challengesInfo.name[index]}'?\\nStage reset will be forced`)) { return; }\n    const reward = stageResetCheck(5);\n\n    if (index === 0) {\n        global.researchesExtraInfo[4].startCost[0] = 1e14;\n        assignNewMassCap();\n    }\n\n    player.challenges.active = index;\n    if (!reward) {\n        player.stage.active = 1;\n        player.stage.current = 1;\n        resetStage([1, 2, 3, 4, 5]);\n    } else { stageResetReward(5); }\n\n    getChallengeDescription(index);\n    if (global.screenReader) { getId('SRTab').textContent = `'${global.challengesInfo.name[index]}' is now active`; }\n};\n\nexport const exitChallenge = () => {\n    const old = player.challenges.active;\n    player.challenges.active = -1;\n\n    //Final preparations\n    if (old === 0) {\n        global.researchesExtraInfo[4].startCost[0] = 1e6;\n        assignNewMassCap();\n    }\n\n    player.stage.active = 1;\n    player.stage.current = 1;\n    resetStage([1, 2, 3, 4, 5]);\n\n    if (global.screenReader) { getId('SRTab').textContent = `You left the '${global.challengesInfo.name[old]}'`; }\n};\n", "import Limit from './Limit';\nimport { getId } from './Main';\nimport { assignNewMassCap, assignVaporizationInformation, calculateCloudSoftcap, calculateMaxLevel, calculateMilestoneInformation, logAny } from './Stage';\nimport { globalType, overlimit, playerType } from './Types';\nimport { format, visualUpdateResearches } from './Update';\nimport { prepareVacuum } from './Vacuum';\nconsole.time('Game loaded in'); //Just for fun (end is in Main.ts file)\n\nexport const player: playerType = { //Only for information that need to be saved (cannot be calculated)\n    version: 'v0.1.5',\n    fileName: 'Fundamental, [date] [time], [stage]',\n    separator: ['', '.'], //[0] separator, [1] point\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        export: 86400,\n        best: 0,\n        time: 0,\n        input: 1\n    },\n    discharge: { //Stage 1\n        unlock: false, //Energy\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: { //Stage 2\n        clouds: [1, 0],\n        cloudsMax: [1, 0],\n        input: 10\n    },\n    accretion: { //Stage 3\n        rank: 0,\n        input: 600\n    },\n    collapse: { //Stage 4, 5\n        mass: 0.01235,\n        massMax: 0.01235,\n        elementsMax: [1, 0],\n        stars: [0, 0, 0],\n        show: [], //What Elements have been bought\n        input: [4, 2]\n    },\n    inflation: { //Stage 6\n        vacuum: false,\n        age: 0\n    },\n    intervals: {\n        main: 50,\n        numbers: 100,\n        visual: 1,\n        autoSave: 60\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        offline: 0,\n        disabled: 0\n    },\n    buildings: [\n        [] as unknown as playerType['buildings'][0], [ //Stage 1\n            {\n                current: [3, 0],\n                total: [3, 0],\n                trueTotal: [3, 0],\n                highest: [3, 0]\n            }, {\n                true: 0, //How many were bought\n                current: [0, 0], //On hands\n                total: [0, 0], //How many were gained this reset\n                trueTotal: [0, 0], //How many were gained this stage\n                highest: [0, 0] //Highest 'current' that was reached in any stage\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 2\n            {\n                current: [2.8, -3],\n                total: [2.8, -3],\n                trueTotal: [2.8, -3],\n                highest: [2.8, -3]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 3\n            {\n                current: [1, -19],\n                total: [1, -19],\n                trueTotal: [1, -19],\n                highest: [1, -19]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 4\n            {\n                current: [1, 0],\n                total: [1, 0],\n                trueTotal: [1, 0],\n                highest: [1, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ], [ //Stage 5\n            {\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }, {\n                true: 0,\n                current: [0, 0],\n                total: [0, 0],\n                trueTotal: [0, 0],\n                highest: [0, 0]\n            }\n        ]\n    ],\n    strange: [ //Stage 5\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    researchesAuto: [],\n    ASR: [], //Auto Structures Research\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    challenges: {\n        active: -1,\n        void: [0, 0, 0, 0, 0, 0]\n    },\n    toggles: {\n        normal: [], //Auto added for every element with a class 'toggle'\n        /* Offline auto use[0]; Stage confirm[1]; Discharge confirm[2]; Vaporization confirm[3]; Rank confirm[4]; Collapse confirm[5]\n           Hotkeys type[6] Elements as tab[7] */\n        buildings: [], //Class 'toggleBuilding' ([0] everywhere, is toggle all)\n        auto: [], //Class 'toggleAuto'\n        /* Stage[0], Discharge[1], Vaporization[2], Rank[3], Collapse[4],\n           Upgrades[5], Researches[6], ResearchesExtra[7], Elements[8] */\n        shop: {\n            howMany: 1,\n            input: 10\n        }\n    },\n    history: {\n        stage: {\n            best: [0, 1, 0],\n            list: [],\n            input: [5, 10]\n        }\n    },\n    events: [false, false, false] //One time events, set in playEvent\n};\n\nexport const global: globalType = { //For information that doesn't need to be saved\n    tab: 'stage', //Tabs and subtabs have same name as buttons\n    subtab: {\n        /* Subtab format must be: [subtabName] + 'Current' */\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        researchCurrent: 'Researches',\n        strangenessCurrent: 'Matter'\n        //Starting subtab must be unlocked at same time as tab and have index 0 in proper tabList\n    },\n    tabList: { //Tabs and subtab must be in same order as in footer\n        /* Subtabs format must be: [subtabName] + 'Subtabs' */\n        tabs: ['stage', 'research', 'strangeness', 'settings'],\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'History', 'Stats'],\n        researchSubtabs: ['Researches', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones']\n    },\n    lastActive: null,\n    versionBuild: false,\n    lastSave: 0,\n    timeMode: true,\n    footer: true,\n    mobileDevice: false,\n    screenReader: false,\n    automatization: { //Sorted cheapest first\n        autoU: [ //Upgrades\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [ //Researches\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [ //Researches Extra\n            [], //Empty\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    theme: {\n        stage: 1,\n        default: true\n    },\n    dischargeInfo: {\n        getEnergy: (index: number, stageIndex: number) => {\n            let value = global.dischargeInfo.energyType[stageIndex][index];\n            if (stageIndex === 1 && index === 1) { value += player.strangeness[1][4] * (player.inflation.vacuum ? 2 : 1); }\n            if (player.inflation.vacuum) {\n                if (player.challenges.active === 0) { value -= Math.ceil(value / 5); }\n                value += Math.floor(value / 100 * global.milestonesInfo[1].reward[1]);\n            }\n            return value;\n        },\n        energyType: [\n            [],\n            [0, 1, 3, 5, 10, 20],\n            [0, 40, 60, 80, 100, 125, 150],\n            [0, 5, 15, 30, 50, 80],\n            [0, 100, 200, 300, 400, 500],\n            [0, 600, 600, 2000, 4000]\n        ],\n        bonus: 0,\n        next: 1\n    },\n    vaporizationInfo: {\n        effect2U1: () => (global.upgradesInfo[2].effect[1] = 1e10 / 3 ** player.strangeness[2][3]),\n        effect2RE3: () => (global.researchesExtraInfo[2].effect[3] = 1 + Math.floor(Limit(player.vaporization.clouds).log(10).toNumber())),\n        get: [0, 0]\n    },\n    accretionInfo: {\n        effective: 0,\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5], //Upgrades\n        rankR: [1, 1, 2, 2, 3, 3, 4, 5], //Researches\n        rankE: [2, 3, 4, 5, 3], //Researches Extra\n        rankCost: [5.97e27, 1e-7, 1e10, 1e24, 5e29, 2.47e31, 0],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar'], //Also alt attribute\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png']\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000], //Buildings (stage 4)\n        unlockG: [0, 100, 1000, 1e5], //Buildings (stage 5)\n        unlockU: [0.01235, 0.076, 1.3, 10], //Upgrades\n        unlockR: [0.18, 0.3, 0.8, 1.3], //Researches\n        newMass: 0,\n        massEffect: (post = false) => {\n            let effect = player.collapse.mass;\n            if (post && global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n\n            if (player.elements[21] === 1) { effect **= 1.1; }\n            return effect;\n        },\n        starCheck: [0, 0, 0],\n        starEffect: [\n            (post = false) => {\n                let effect = player.collapse.stars[0] + 1;\n                if (post) { effect += global.collapseInfo.starCheck[0]; }\n                if (player.elements[6] === 1) { effect **= global.elementsInfo.effect[6] as number; }\n                return effect;\n            },\n            (post = false) => {\n                let stars = player.collapse.stars[1] + 1;\n                if (post) { stars += global.collapseInfo.starCheck[1]; }\n                if (player.elements[22] === 1) {\n                    stars += player.collapse.stars[0];\n                    if (post) { stars += global.collapseInfo.starCheck[0]; }\n                }\n\n                let effect = stars ** (0.5 + 0.01 * player.strangeness[4][11]);\n                if (player.elements[12] === 1 && stars > 10) { effect *= logAny(stars, global.elementsInfo.effect[12] as number); }\n                return effect;\n            },\n            (post = false) => {\n                let blackHoles = player.collapse.stars[2];\n                if (post) { blackHoles += global.collapseInfo.starCheck[2]; }\n                if (blackHoles < 1) { return 1; }\n                //let stars = blackHoles + 1;\n\n                return (blackHoles + 1) / Math.log10(blackHoles + (player.elements[18] === 1 ? 9 : 99));\n            }\n        ],\n        trueStars: 0\n    },\n    inflationInfo: {\n        preonCap: [2, 13],\n        dustCap: [5, 45],\n        massCap: 600 //Seconds\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Void'],\n        textColor: ['', 'var(--cyan-text-color)', 'var(--blue-text-color)', 'var(--gray-text-color)', 'var(--orange-text-color)', 'var(--darkorchid-text-color)', 'var(--darkviolet-text-color)'],\n        buttonBackgroundColor: ['', 'mediumblue', 'blue', '#291344', '#6a3700', '#4a008f', '#2b0095'],\n        buttonBorderColor: ['', 'darkcyan', '#427be1', '#404040', '#9f6700', '#8a0049', '#711bda'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        priceName: 'Energy',\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4], //Pre vacuum ([1] > [5])\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Elements', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi stars'],\n            ['Stars', 'Nebulas', 'Clusters', 'Galaxies', 'Filaments']\n        ],\n        type: [ //'Not allowed index x', means that this index is reserved for gain calculation\n            [] as unknown as [''],\n            ['', 'producing', 'producing', 'producing', 'producing', 'producing'], //Not allowed index 6 (for 'producing')\n            ['', 'producing', 'producing', 'improves', 'improves', 'improves', 'improves'],\n            ['', 'producing', 'producing', 'producing', 'improves', 'improves'],\n            ['', 'producing', 'producing', 'producing', 'producing', 'producing'],\n            ['', 'producing', 'improves', 'improves', 'improves'] //Not allowed index 2, 3, 4 (for 'producing')\n        ],\n        firstCost: [],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 0.0028, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e16, 1e31, 1e58],\n            [0, 1e30, 1e40, 1e5, 100]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2],\n            [0, 1.15, 1.15, 1.15, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 4, 4, 1.11, 1.11]\n        ],\n        producing: [\n            [],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n            [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]\n        ]\n    },\n    strangeInfo: {\n        Element28: () => {\n            let effect = Limit(player.collapse.elementsMax).log(10).toNumber() - 52;\n            if (!player.inflation.vacuum && player.upgrades[5][2] === 1) { effect **= 1.5; }\n            return (global.elementsInfo.effect[28] = Math.max(Math.floor(effect), 0));\n        },\n        gain: (stage: number) => {\n            let gain = 1;\n            if (stage >= 4 || player.inflation.vacuum) {\n                if (player.elements[27] === 1) { gain += 2; }\n                if (player.elements[28] === 1) { gain += global.strangeInfo.Element28(); }\n            }\n            if (player.inflation.vacuum) {\n                gain += 3;\n                if (player.researchesExtra[2][3] >= 1) { gain += global.vaporizationInfo.effect2RE3(); }\n                gain *= global.milestonesInfo[5].reward[0];\n            }\n            if (player.strangeness[5][1] >= 1) { gain *= 2; }\n            return Math.floor(gain);\n        },\n        stageBoost: [null, null, null, null, null, null],\n        strangeName: ['Strange quarks', 'Strangelets']\n    },\n    upgradesInfo: [ //Effect is null if it can't change\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Bigger electrons',\n                'Stronger protons',\n                'More neutrons',\n                'Superposition',\n                'Protium. Basic',\n                'Deuterium. Heavy',\n                'Tritium. Radioactive',\n                'Nuclear fusion'\n            ],\n            effectText: [\n                () => 'Particles produce 5 times more Quarks.',\n                () => 'Gluons now bind Quarks into Particles, which makes Particles 10 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} cost is 10 times cheaper.`,\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particle'} produce 10 times more ${player.inflation.vacuum ? 'Particles' : 'Quarks'}.`,\n                () => `${player.inflation.vacuum ? 'Molecules' : 'Atoms'} produce 5 times more ${player.inflation.vacuum ? 'Atoms' : 'Particles'}.`,\n                () => `Ability to reset at any time, and if had enough Energy, then production for all Structures will also be boosted by ${format(global.upgradesInfo[1].effect[5] as number)} times.\\nTotal boost from reached goals is: ${Limit(global.upgradesInfo[1].effect[5] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`,\n                () => `Cost scaling is decreased by ${format(global.upgradesInfo[1].effect[6] as number)}.`,\n                () => `Structures (only self-made one's) boost themselves by ${format(global.upgradesInfo[1].effect[7] as number)} times.`,\n                () => `Molecules produce Molecules. At a reduced rate. (${Limit(global.upgradesInfo[1].effect[8] as overlimit).format({ padding: true })} per second)`,\n                () => 'Unspent Energy boost Molecules production of themselves 1 to 1.'\n            ],\n            effect: [null, null, null, null, null, 4, 0.2, 1.01, 0, null],\n            startCost: [32, 48, 60, 90, 150, 400, 1600, 4000, 32000, 100000],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => 'Drops will produce Moles even more for every self-made Drops.',\n                () => {\n                    assignVaporizationInformation();\n                    const isSoft = Limit(player.vaporization.clouds).plus(global.vaporizationInfo.get).moreOrEqual(player.inflation.vacuum ? calculateCloudSoftcap() : '1e4');\n                    let capText;\n                    if (player.challenges.active === 0) {\n                        capText = format(isSoft ? 0.28 : 0.38);\n                    } else if (player.inflation.vacuum) {\n                        capText = format(isSoft ? 0.3 : 0.4);\n                    } else { capText = format(isSoft ? 0.36 : 0.6); }\n                    return `Gain ability to convert Drops into Clouds. (Puddles get a boost equal to Cloud amount)\\nCurrent Cloud gain is (Drops / ${format(global.vaporizationInfo.effect2U1())})^${capText}.${isSoft ? ' (Softcapped)' : ''}`;\n                },\n                () => `Puddles get boost based on Moles. (Equal to Moles ^${format(global.upgradesInfo[2].effect[2] as number)})`,\n                () => `Puddles get boost based on Drops. (Equal to Drops ^${format(global.upgradesInfo[2].effect[3] as number)})`,\n                () => `Ponds now create extra Puddles. (${format(global.upgradesInfo[2].effect[4] as number)} extra Puddles per Pond)`,\n                () => `Lakes now create extra Ponds. (${format(global.upgradesInfo[2].effect[5] as number)} extra Ponds per Lake)`,\n                () => 'Spreads enough water to make each Sea create 1 extra Lake.',\n                () => 'Spreads water too fast. 1 extra Sea per Ocean.'\n            ],\n            effect: [null, 1e10, 0.02, 0.02, 1, 1, null, null],\n            startCost: [10, 1e10, 1000, 10000, 2e9, 5e20, 1e28, 1e44],\n            maxActive: 7\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Satellite system',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Dust speeds up Accretion speed. (By ${format(global.upgradesInfo[3].effect[0] as number)})`,\n                () => `New substance for Accretion, will provide boost to Accretion speed based on current Dust amount. (${Limit(global.upgradesInfo[3].effect[1] as overlimit).format()} boost)`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come. (Unlock a new Structure and get 2x boost to Dust)',\n                () => `Small bodies spontaneously concentrate into clumps. (Self-made Planetesimals boost each other by ${format(1.02)})`,\n                () => 'Bodies are now massive enough to affect each other with gravity. (Unlock a new Structure and get 4x boost to Planetesimals)',\n                () => 'Shattered pieces fall back together. Mass production is now even bigger. (By 3x)',\n                () => 'Unlock yet another Structure.',\n                () => `Core melted, Accretion speed increased. (Mass production increased by ${format(global.upgradesInfo[3].effect[7] as number)})`,\n                () => 'After reaching equilibrium, Protoplanets will boost themselfs, more with each self-made one.',\n                () => 'Accretion speed increased again (because of drag and escape velocity), by 2.',\n                () => `Accretion speed greatly increased by ${format(global.upgradesInfo[3].effect[10] as number)}.`,\n                () => 'Satellites scaling cost is now 2 times smaller.',\n                () => 'Satellites effect scales better.'\n            ],\n            effect: [1.01, 0, null, null, null, null, null, 2, null, null, 10, null, null],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e22, 1e11, 1e22, 1e23, 1e9, 1e26, 1e29],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion'\n            ],\n            effectText: [\n                () => 'As fuel runs out, each star will boost production in its own special way.',\n                () => `Fuse with Protium instead of Deuterium. ${player.inflation.vacuum ? 'Unlock 5 first Elements.' : 'Unlock a new Structure and something else.\\n(Somewhere in Research tab)'}`,\n                () => `CNO cycle is now a better source of Helium and Energy. ${player.inflation.vacuum ? 'Unlock 5 more Elements' : 'Unlock a new Structure and more of something else'}.`,\n                () => 'Through Triple-alpha and then Alpha process, unlock a few more Elements.'\n            ],\n            effect: [null, null, null, null],\n            startCost: [100, 1000, 1e9, 1e50],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Jeans instability',\n                'Super star cluster',\n                'Quasar'\n            ],\n            effectText: [\n                () => `Gravitational collapse within Nebulas will increase speed for production of Stars by ${format(global.upgradesInfo[5].effect[0] as number)} times.`,\n                () => `A very massive Star clusters, that will boost Stars by ${format(global.upgradesInfo[5].effect[1] as number)}.`,\n                () => player.inflation.vacuum ? `Boost per Galaxy increased by +${format(0.2)}` : `'[28] Nickel' Element receives super boost of ^${format(1.5)}.`\n            ],\n            effect: [4, 6, null],\n            startCost: [1e50, 1e60, 1e140], //Adjust cost for Vacuum if needed (through Vacuum file, not changing preVacuum)\n            maxActive: 3\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling is ${format(0.01)} smaller for each level.`,\n                () => `Each self-made Structure, boost each other by additional ${format(0.01)}.`,\n                () => `Molecules now produce themselves ${format(global.researchesInfo[1].effect[2] as number)} times quicker.`,\n                () => 'Next goal for Discharge bonus scales by -1 less.',\n                () => 'Discharge is now provides 2 times bigger bonus per reached goal.',\n                () => \"Discharge will boost 'Tritium' upgrade for every reached goal + 1.\"\n            ],\n            effect: [null, null, 12, null, null, null],\n            cost: [],\n            startCost: [2500, 8000, 40000, 8000, 58000, 36000],\n            scaling: [500, 4000, 6000, 38000, 0, 8000],\n            max: [9, 3, 9, 2, 1, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Condensation',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel'\n            ],\n            effectText: [\n                () => 'Drops produce 3 times more Moles.',\n                () => 'Through condensation bonus to Structure production is now based on total produced, instead of current amount.\\nLevel 1 for Drops, level 2 for Moles.',\n                () => `Surface tension upgrade is now +${format(player.inflation.vacuum ? 0.03 : 0.02)} stronger.`,\n                () => `Surface stress upgrade is now +${format(player.inflation.vacuum ? 0.02 : 0.03)} stronger.`,\n                () => 'With more streams, can have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers can split now, that allows even more Ponds per Lake. (+1 per)'\n            ],\n            effect: [null, null, null, null, null, null],\n            cost: [],\n            startCost: [20, 1e12, 1e5, 1e6, 1e14, 1e22],\n            scaling: [1.2, 1000, 1000, 10000, 1000, 100],\n            max: [9, 2, 3, 3, 2, 2],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Dust production is increased by 3.',\n                () => `Dust particles cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals produce more Dust. (3 times more)',\n                () => 'Slow encounter velocities will result in a more efficient growth, so this research will make bodies lose more energy with each deflection. Mass production increased by 2.',\n                () => 'Some Planetesimals instead of shattering form a contact binary or even trinary. Planetesimals production boosted by 5x.',\n                () => `Planetesimals attract other bodies with own gravity. Planetesimals get boost to production based on unspent Mass.\\n(Total boost: ${format(global.researchesInfo[3].effect[5] as number, { padding: true })}${player.inflation.vacuum && global.researchesInfo[3].effect[5] as number >= 4000 ? ', hardcapped' : ''})`,\n                () => `'Magma Ocean' upgrade is stronger now. (${format(1.5)}x times)`,\n                () => `Accretion speed for 'Pebble accretion' increased again, by ${player.inflation.vacuum ? 2 : 3}.`\n            ],\n            effect: [null, null, null, null, null, 0, null, null],\n            cost: [],\n            startCost: [1e-14, 1e-15, 1e-5, 1e5, 1e10, 1e15, 1e13, 1e12],\n            scaling: [11, 111, 22, 10, 100, 10, 100000, 1000],\n            max: [7, 3, 9, 4, 2, 5, 3, 3],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(global.researchesInfo[4].effect[0] as number)}x boost to all Stars.`,\n                () => `Each Star boost another Star. (Total to each Star is ${Limit(global.researchesInfo[4].effect[1] as overlimit).format({ padding: true })}x${(global.researchesInfo[4].effect[1] as overlimit)[1] >= 10 ? ', softcapped' : ''})`,\n                () => \"Improve effect of 'Planetary system', as well increases its max level by +3.\",\n                () => 'Matter expelled from Red giants, but get 10x boost to Main-sequence stars anyway.'\n            ],\n            effect: [1.1, 1, null, null],\n            cost: [],\n            startCost: [1000, 50000, 1e8, 1e12],\n            scaling: [10, 200, 1e12, 0],\n            max: [3, 2, 1, 1],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency'\n            ],\n            effectText: [\n                () => {\n                    const index = Math.min(player.researches[5][0] + 2, 4);\n                    return `Higher density of Nebulas, will allow them to produce higher tier of Stars, but each tier is 4 times slower than previous one. Also will boost Nebulas by 4.\\nNext tier will be ${player.buildings[4][index].trueTotal[0] === 0 ? '(unknown)' : global.buildingsInfo.name[4][index]}.`;\n                },\n                () => {\n                    const index = Math.max(3 - player.researches[5][1], 1);\n                    return `More types of Stars are found within Star cluster. Increasing effect by 3, but also boosting lower tier of Stars. (3 times less than higher one)\\nNext tier will be ${player.buildings[4][index].trueTotal[0] === 0 ? '(unknown)' : global.buildingsInfo.name[4][index]}.`;\n                }\n            ],\n            effect: [null, null],\n            cost: [],\n            startCost: [1e40, 1e55],\n            scaling: [1e20, 1e15],\n            max: [3, 3],\n            maxActive: 2\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Better radiation base',\n                'Accretion',\n                'Later Preons',\n                'Impulse'\n            ],\n            effectText: [\n                () => 'Mesons now binds Particles to form Atoms as well. Atoms are affected by strong force.',\n                () => `Improve formula for Radiation, ${player.researchesExtra[1][1] < 1 ? 'logE > log2' : `log${format(global.researchesExtraInfo[1].effect[1] as number)}${player.researchesExtra[1][1] < 10 ? ` > log${format(global.researchesExtraInfo[1].effect[1] as number - 0.1)}` : ''}`}.`,\n                () => 'First level is to begin the Accretion, second level is to Submerge it.\\nEverything is connected. All Structures produce Energy on creation.',\n                () => `Hardcap for Mass production from Preons is delayed by current Energy ^${format(global.researchesExtraInfo[1].effect[3] as number)}.`,\n                () => `Discharge goals can now boost all Structures from Submerged, Accretion and Interstellar Stages, but at reduced base.\\nCurrent base is ${format(global.researchesExtraInfo[1].effect[4] as number)}, total boost is ${Limit(global.researchesExtraInfo[1].effect[4] as number).power(player.discharge.current + global.dischargeInfo.bonus).format()}.`\n            ],\n            effect: [null, 2, null, 1e13, 1.04],\n            cost: [],\n            startCost: [12000, 42000, 24000, 46000, 200000],\n            scaling: [0, 8000, 72000, 36000, 0],\n            max: [1, 10, 2, 4, 1],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Ocean world'\n            ],\n            effectText: [\n                () => 'Clouds will now use total produced Drops instead, when formed.',\n                () => `Some Clouds will start pouring Drops themselves. (${player.inflation.vacuum ? `Improves Puddles by ${format(global.researchesExtraInfo[2].effect[1] as number)} in total` : `${format(global.researchesExtraInfo[2].effect[1] as number)} per second`})`,\n                () => `Seas get a boost based on amount of Clouds. (Equal to ${Limit(global.researchesExtraInfo[2].effect[2] as overlimit).format({ padding: true })})`,\n                () => `On Stage reset gain extra Strange reward${player.strangeness[5][9] >= 1 ? ' (true value)' : ''} for every new digit of Clouds, as well +1. (Currently +${format(global.vaporizationInfo.effect2RE3())})`\n            ],\n            effect: [null, 0, 0, 1],\n            cost: [],\n            startCost: [1e16, 1e13, 1e26, 1e10],\n            scaling: [0, 100, 0, 0],\n            max: [1, 4, 1, 1],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion'\n            ],\n            effectText: [\n                () => `Dust production is increased by another ${format(global.researchesExtraInfo[3].effect[0] as number)}.`,\n                () => `Accretion speed is even quicker. Multiplied by effective Rank. (Total boost to Dust: ${format(global.researchesExtraInfo[3].effect[1] as number)})`,\n                () => \"'Gravitational field' upgrade will boost Protoplanets now as well. (Only half of effect)\",\n                () => \"'Gas' upgrade is now stronger.\",\n                () => `'Efficient growth' now boost Puddles as well. (Current boost is: ${format(global.researchesExtraInfo[3].effect[4] as number)})`\n            ],\n            effect: [0, 0, null, null, 0],\n            cost: [],\n            startCost: [1e-18, 1e-16, 1e26, 1e-12, 1e21],\n            scaling: [10, 100, 0, 1e14, 1e5],\n            max: [12, 5, 1, 2, 1],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'White dwarfs'\n            ],\n            effectText: [\n                () => {\n                    const index = Math.min(player.researchesExtra[4][0] + 2, 4);\n                    return `${player.buildings[4][index].trueTotal[0] === 0 ? '(Unknown)' : global.buildingsInfo.name[4][index]} Stars are now creating something new, upon collapse reset.`;\n                },\n                () => \"Red giants are turning into White dwarfs, this will improve effect of '[6] Carbon' Element.\"\n            ],\n            effect: [null, null],\n            cost: [],\n            startCost: [1e6, 1e50],\n            scaling: [1e12, 0],\n            max: [3, 1],\n            maxActive: 2\n        }, { //Stage 5\n            name: [],\n            effectText: [],\n            effect: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        name: [\n            'New toggles',\n            'Offline storage capacity',\n            'Automatic upgrades'\n        ],\n        effectText: [\n            () => !player.inflation.vacuum && player.strange[0].total === 0 ? 'Unlock ability to make multiple Structures at same time.' :\n            /**/'First level is for making multiple Structures at same time.\\nSecond level is to turn OFF/ON all auto toggles at once.\\nThird level improves control for auto/Warp consumption of Offline storage.',\n            () => `Research this to increase capacity of Offline storage by +${player.stage.true >= 6 ? 8 : 4} hours.`,\n            () => 'This is going to create all upgrades automatically. Each level increases highest type of upgrades to create.\\n(Enable in settings, order of unlocks is upgrades > researches > special researches)'\n        ],\n        cost: [],\n        startCost: [2000, 1e9, 1],\n        scaling: [29000, 2e4, 1e10],\n        max: [1, 1, 0],\n        autoStage: [1, 2, 3] //Stage to buy from\n    },\n    ASRInfo: { //Auto Structures Research\n        cost: [0, 4000, 1e10, 1e-7, 1e6, 1],\n        costRange: [ //Random scaling\n            [],\n            [4000, 12000, 24000, 32000, 44000],\n            [1e10, 1e13, 1e16, 1e24, 1e28, 1e40],\n            [1e-7, 1e10, 5e29, 2e30, 1e36],\n            [1e6, 1e17, 1e28, 1e39, 1e70],\n            [1, 1, 1, 1]\n        ],\n        max: [0, 5, 5, 4, 4, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron, wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => 'Most basic Element, increases Brown dwarf production by 2.\\nAlso Solar mass effect is now known - boost to all Stars.',\n            () => `Fusion reaction by product, makes everything Interstellar scale ${format(0.1)} less.`,\n            () => `First metal, Mass ${player.inflation.vacuum ? 'hardcap for Cosmic dust' : ''} per Brown dwarf lightly ${player.inflation.vacuum ? 'delayed' : 'increased'}.`,\n            () => `Brittle earth metal, so is brittle increase to production. (${format(1.1)}x to all Stars)`,\n            () => `A new color, and a new ${player.inflation.vacuum ? 'delay to Mass hardcap for Cosmic dust' : 'boost to Mass gain'} that is based on current Dwarf Stars.`,\n            () => `Base for organics, boost from Red giants is now increased to the power of ${format(global.elementsInfo.effect[6] as number)}.\\nRed giants effect is now known - boost to all Main-sequence stars.`,\n            () => \"Most abundant uncombined Element in atmosphere of some Planets, also allows to have 2 extra levels of 'Star system'.\",\n            () => `An oxidizing agent, that will make everything Interstellar scale even slower. (${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x ${player.inflation.vacuum ? 'delay to Cosmic dust hardcap' : 'boost to Mass gain'}.`,\n            () => \"Through leaching, get 1 extra level of 'Protoplanetary disk'.\",\n            () => `Stars are inside you, as well Neutrons stars strength is now increased by ${global.elementsInfo.effect[12] as number < 10 ? 'the decimal logarithm' : `log${format(global.elementsInfo.effect[12] as number)}`}.\\nNeutron stars effect is now known - boost to all Stars.`,\n            () => `Has a great affinity towards Oxygen and to decrease cost of all Stars by ${format(1e3)}.`,\n            () => `Number is 14, group is 14, melts at ${format(1414)}\u00B0C and so is Mass ${player.inflation.vacuum ? 'hardcap for Cosmic dust delayed' : 'gain increased'} by ${format(1.4)}.`,\n            () => `One of the Fundamentals of Life and to make all of Stars ${player.inflation.vacuum ? 'delay Mass hardcap (Cosmic dust)' : 'boost Mass'}.`,\n            () => \"From hot area, to increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system', by another 27 levels.\",\n            () => `Less noble boost, but Black holes effect scales a little better.\\nBlack holes effect is now known - ${player.inflation.vacuum ? 'delay for Preon Mass hardcap' : 'boost to Solar mass gain'}.`,\n            () => \"Don't forget about it and get a 3x boost to all Stars.\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to Mass effect.`,\n            () => 'New alloy allowing Red giants to be added into effective amount of Neutron stars.',\n            () => 'Catalyst for production of Elements. Black holes boost all Stars by the decimal logarithm.',\n            () => `No corrosion, only boost to all Stars that is based on unspent Elements^${format(0.01)}.`,\n            () => \"Brittle Element, but not the bonus - 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. Gain 2x boost to all Stars, ${player.inflation.vacuum ? 'unlock Stage reset.' : 'but what next?\\nUnlock ability to switch between Stages. (Also enter a new Stage)'}`,\n            () => \"While new Elements won't produce much Energy, this one can create 2 extra Strange quark for this Stage reset.\",\n            () => `Slow to react, but gain extra ${player.strangeness[5][9] >= 1 ? 'to Strange reward (true value)' : 'Strange quarks'} for every new reached digit past 52 anyway.\\n(+${format(global.strangeInfo.Element28())} for this Stage reset)`\n        ],\n        effect: [\n            null, null, null, null, null, null, 1.5, null, null, null,\n            null, null, 10, null, null, null, null, null, null, null,\n            null, null, null, null, null, null, null, null, 0\n        ],\n        startCost: [\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 2e13, 1e14,\n            1e16, 1e20, 1e24, 1e25, 1.4e27, 1e30, 1e31, 5e31, 5e33, 1e35,\n            1e36, 1e38, 2e39, 3e41, 4e42, 1e45, 1e50, 1e52, 1e55\n        ]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Stronger Discharge',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discarge',\n                'Increased Energy',\n                'Better improvement',\n                'Keep auto Structures',\n                'More toggles',\n                'Strange boost',\n                'Micro boost',\n                'Fundamental boost',\n                'Energy recycle'\n            ],\n            effectText: [\n                () => 'Base Discharge effect is now +1.',\n                () => 'Discharge goal scales slower. (-1)',\n                () => 'Obtain +1 bonus Discharge goal.',\n                () => `Automatically Discharge upon creating an upgrade or reaching next goal.${player.strangeness[1][11] >= 1 ? \"\\nSecond level - auto Discharge for reaching new goal doesn't cause an reset.\" : ''}`,\n                () => `Gain more Energy from creating ${player.inflation.vacuum ? 'Preons, +2' : 'Particles, +1'}.`,\n                () => `Research 'Improved Tritium' is now better. (+${format(player.inflation.vacuum ? 0.4 : 0.3)})`,\n                () => `Always have auto for ${global.buildingsInfo.name[1][Math.min(player.strangeness[1][6] + 1, global.ASRInfo.max[1])]}.`,\n                () => `Increase max level of 'New toggles'.${player.inflation.vacuum ? '' : ' Also keep them on Stage reset.'}`,\n                () => `Unspend Strange quarks will boost this Stage. (${player.inflation.vacuum ? 'Bonus goals' : 'Stronger radiation'})`,\n                () => `Minor boost of ${format(1.2)}x per level to all Microworld structures.`,\n                () => `Minor boost of ${format(1.05)}x per level to Impulse affected Stages. (Doesn't require Impulse to work)`,\n                () => \"Energy is no longer gained on Structure creation, but instead it's based on current self-made amount of Structures.\\nFirst step towards something more.\"\n            ],\n            cost: [],\n            startCost: [2, 1, 20, 40, 2, 1, 2, 4, 20, 2, 900, 3000],\n            scaling: [3, 3, 2, 100, 3, 1.4, 1.8, 3, 1, 2.1, 2.1, 1],\n            max: [4, 4, 2, 1, 2, 5, 3, 1, 1, 4, 4, 1],\n            maxActive: 9\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Keep auto Structures',\n                'Longer offline',\n                'Longest offline',\n                'Strange boost',\n                'New Structure',\n                'Isolation'\n            ],\n            effectText: [\n                () => 'Mole production increased by 2x.',\n                () => 'Puddles produce 2 times more.',\n                () => 'Increase max level of some researches by +1.\\nFinal level will instead unlock a new upgrade.',\n                () => 'Decrease requirement per Cloud.',\n                () => `Automatically Vaporize when reach certain amount.${player.strangeness[1][11] >= 1 ? '\\nSecond level - gain 1% of Clouds per second.' : ''}`, //Second level doesn't work yet\n                () => `Always have auto for ${global.buildingsInfo.name[2][Math.min(player.strangeness[2][5] + 1, global.ASRInfo.max[2])]}.`,\n                () => `Increase max offline time research level.${player.inflation.vacuum ? '' : ' Also keep them on Stage reset.'}`,\n                () => player.stage.true < 6 ? 'Max offline time is now 50% longer. (Additive)' : 'Offline time being wasted less, -1 second per level.',\n                () => 'Unspend Strange quarks will boost this Stage. (Puddle production)',\n                () => `Unlock a new Structure. (Requires level 5 of 'Keep auto Structures')${player.challenges.void[2] >= 2 ? '\\nSecond level will unlock new upgrade instead.' : ''}`,\n                () => \"Submerged is no longer affected by or affects non Microworld Stage reset types. (Requires level 1 of 'Energy recycle')\"\n            ],\n            cost: [],\n            startCost: [1, 2, 3, 4, 20, 4, 1, 4, 30, 32, 5000],\n            scaling: [1.5, 2, 3, 3, 500, 1.6, 2, 4, 1, 11, 1],\n            max: [6, 6, 3, 3, 1, 5, 4, 2, 1, 1, 1],\n            maxActive: 9\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Keep auto Structures',\n                'Automatization for Upgrades',\n                'Strange boost',\n                'New Structure',\n                'Mass shift',\n                'One dust',\n                'Massive Ranks'\n            ],\n            effectText: [\n                () => `Accretion speed is 2 times faster. (Affected by ${player.inflation.vacuum ? 'hard' : 'soft'}cap)${global.strangenessInfo[3].max[0] > 8 ? '\\nSoftcapped after 8 levels, each new level will be only half as effective.' : ''}`,\n                () => 'All Accretion Structures that produce another Structure now do it 2 times faster.',\n                () => 'Some Rank researches receive extra Max level.\\nFinal level will instead unlock a new upgrade.',\n                () => `Satellites now improve all Accretion Structures${player.inflation.vacuum ? ' with reduced strength' : ''}.`,\n                () => `Automatically increase Rank when available.${player.strangeness[1][11] >= 1 ? '\\nSecond level - once hardcap for Cosmic dust is reached, all Mass related Structures will be made only when cost is times of Solar hardcap.' : ''}`,\n                () => `Always have auto for ${global.buildingsInfo.name[3][Math.min(player.strangeness[3][5] + 1, global.ASRInfo.max[3])]}.`,\n                () => `Unlock automatization for Upgrades / Researches.${player.inflation.vacuum ? '' : ' (Not affected by Stage reset)'}`,\n                () => `Unspend Strange quarks will boost this Stage. (${player.inflation.vacuum ? 'Effective Rank' : 'Cheaper Accretion)\\n(Scales slower past 800 Strange quarks'})`,\n                () => \"Unlock a new Structure. (Requires level 4 of 'Keep auto Structures')\",\n                () => `Allows to shift Cosmic dust and Solar mass hardcaps (in Rank settings). Extra levels allow for 2 times bigger shift.${player.challenges.void[4] >= 4 ? `\\nFinal level is ${format(1.6)} times weaker` : ''}`,\n                () => 'After any reset, there will always remain at least one.',\n                () => 'Increase effective Rank by +1 for each level.'\n            ],\n            cost: [],\n            startCost: [1, 2, 6, 18, 30, 3, 10, 20, 24, 36, 12, 60],\n            scaling: [1.46, 2.5, 2, 1, 200, 1.8, 3, 1, 1, 4, 1, 4],\n            max: [8, 4, 3, 1, 1, 4, 3, 1, 1, 3, 1, 2],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Remnants of past',\n                'Automatic Collapse',\n                'Keep auto Structures',\n                'Daily gain',\n                'Max gain',\n                'Strange boost',\n                'New Structure',\n                'Neutronium'\n            ],\n            effectText: [\n                () => `All Stars produce ${format(1.5)} times more Elements.`,\n                () => 'Stars are 2 times cheaper.',\n                () => 'Unlock a new Upgrade.\\nFirst one is extra good.',\n                () => '25% of Brown dwarfs will turn into Red giants now.',\n                () => `Elements in Research tab will be ${player.inflation.vacuum ? 'auto created' : 'preserved through Collapse reset'}.`,\n                () => `Stars will Collapse automatically.${player.strangeness[1][11] >= 1 ? '\\nSecond level - Non Solar mass Collapse rewards gained slowly without causing reset.\\nThird level - Solar mass slowly gained without causing reset.' : ''}`, //2nd and 3rd level do not work yet\n                () => `Always have auto for ${global.buildingsInfo.name[4][Math.min(player.strangeness[4][6] + 1, global.ASRInfo.max[4])]}.`,\n                () => `Creates +${player.inflation.vacuum ? 2 : 1} ${player.strangeness[5][9] >= 1 ? 'to Strange reward (true value)' : 'Strange quarks'} per day, can ${player.strangeness[5][9] >= 1 ? 'be claimed' : \"claim only full one's\"} only with export.`,\n                () => player.stage.true >= 6 ? \"Reward from Export is now increased by 20% of best Stage reset.\\nRequires level 3 of 'Daily gain'.\" : 'Unclaimed Strange quarks max storage is now 1 day longer.',\n                () => 'Unspend Strange quarks will boost this Stage. (All Stars production)',\n                () => \"Unlock a new Structure. (Requires level 4 of 'Keep auto Structures')\",\n                () => \"Improve Neutron Stars strength and improve scaling of '[12] Magnesium' effect with every second level.\"\n            ],\n            cost: [],\n            startCost: [1, 3, 5, 5, 90, 20, 4, 4, 24, 40, 32, 900],\n            scaling: [1.8, 2, 3, 4, 1, 40, 1.8, 1.8, 1, 1, 1, 1.3],\n            max: [8, 4, 3, 2, 1, 1, 4, 3, 1, 1, 1, 10],\n            maxActive: 10\n        }, { //Stage 5\n            name: [\n                'Omnipresent reality',\n                'Strange gain',\n                'Auto Stage',\n                'Bigger Nebulas',\n                'Denser Clusters',\n                'Gravitational bound',\n                'Hypercompact stellar system',\n                'Auto Structures',\n                'New Milestones',\n                'Strange growth'\n            ],\n            effectText: [\n                () => player.inflation.vacuum ? 'Unlock the Void. (Advanced subtab)' : `Gain ability to be inside multiple Stages at once. (Next one to always be inside is ${global.stageInfo.word[player.strangeness[5][0] + 1]})`,\n                () => `Gain 2 times more ${global.strangeInfo.strangeName[player.strangeness[5][9]]} from Stage resets.`,\n                () => 'Allows to auto reset Stage, has some special settings.',\n                () => `Bigger Nebulas, more matter for Accretion. 'Jeans instability' upgrade is ${player.inflation.vacuum ? 2 : 3} times stronger.`,\n                () => `'Super star cluster' is now even bigger. Effect increased by ${player.inflation.vacuum ? 2.5 : 4}.`,\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage.' : 'Intergalactic is no longer affected by Collapse reset.',\n                () => 'With this, a new Structure, can be created. Second level unlocks auto for it.',\n                () => \"Increase permanent level of auto Structures. It's the only way to do it.\",\n                () => `Unlock ${player.inflation.vacuum ? 'Void' : 'Intergalactic'} Milestones.`,\n                () => 'Unlock a new Strange Structure, but it will replace current Stage reward type.\\nNew conversion requires 100 times more of a Strange reward.'\n            ],\n            cost: [],\n            startCost: [4, 12, 4000, 5, 10, 40, 1200, 60, 1500, 800],\n            scaling: [1, 1, 1, 1.8, 1.75, 1, 5, 1.5, 1, 1],\n            max: [3, 1, 1, 9, 9, 1, 2, 2, 1, 1],\n            maxActive: 9\n        }\n    ],\n    lastUpgrade: [false, -1], //One per subtab\n    lastResearch: [false, -1, 'researches'],\n    lastElement: [false, -1],\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Endless Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Discharge at least ${Limit(global.milestonesInfo[1].need[0]).format()} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} at once.`,\n                () => `Have current Energy reach ${Limit(global.milestonesInfo[1].need[1]).format()}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures receive ${format(global.milestonesInfo[1].reward[0])}x boost.` : \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\",\n                () => player.inflation.vacuum ? `Energy from creating Stuctures increased by ${format(global.milestonesInfo[1].reward[1])}%. (Rounds down)` : 'Stars produce 4 times more Elements.'\n            ],\n            need: [[1, 220], [4, 4]],\n            reward: [1, 1],\n            scalingOld: [\n                [[1e220, 1e240, 1e260, 1e280, 1e300], [1, 1, 1, 1, 2]],\n                [[40000, 46000, 52000, 58000], [1, 1, 1, 2]]\n            ],\n            unlock: [5, 3]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `Vaporize ${player.inflation.vacuum ? 'to at least' : ''} ${Limit(global.milestonesInfo[2].need[0]).format()} ${player.inflation.vacuum ? 'Clouds' : 'Drops at once'}.`,\n                () => `Have at least ${Limit(global.milestonesInfo[2].need[1]).format()} Puddles at same time.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Clouds softcap starts ${format(global.milestonesInfo[2].reward[0])} times later.` : 'A new Intergalactic Structure.',\n                () => player.inflation.vacuum ? `Puddles are even stronger, boost is ${format(global.milestonesInfo[2].reward[1])}x.` : \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            need: [[1, 30], [3, 3]],\n            reward: [1, 1],\n            scalingOld: [\n                [[1e30, 1e35, 1e40, 1e45, 1e50], [1, 1, 1, 2, 3]],\n                [[3000, 5000, 9000, 18000], [1, 2, 2, 3]]\n            ],\n            unlock: [3, 4]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Have at least ${Limit(global.milestonesInfo[3].need[0]).format()} Mass at once.`,\n                () => `Have more Satellites ${player.inflation.vacuum ? 'and Subsatellites' : ''} than ${Limit(global.milestonesInfo[3].need[1]).format()}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Accretion speed increased by ${format(global.milestonesInfo[3].reward[0])}x. (Affected by hardcap)` : 'A new Intergalactic Structure.',\n                () => player.inflation.vacuum ? `Improve effect of 'Planetary system' base by +${format(global.milestonesInfo[3].reward[1])}.` : \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            need: [[1, 30], [2.5, 1]],\n            reward: [1, 1],\n            scalingOld: [\n                [[1e30, 1e35, 1e40, 1e46, 1e52, 1e58], [1, 1, 1, 2, 2, 3]],\n                [[25, 40, 55, 70, 85], [1, 2, 2, 3, 3]]\n            ],\n            unlock: [3, 5]\n        }, { //Stage 4\n            name: [\n                'Supermassive',\n                'Biggest of all'\n            ],\n            needText: [\n                () => `Collapse ${player.inflation.vacuum ? '' : 'to'} at least ${Limit(global.milestonesInfo[4].need[0]).format()} ${player.inflation.vacuum ? 'Elements' : 'Solar mass'}.`,\n                () => `Collapse to ${Limit(global.milestonesInfo[4].need[1]).format()} Black holes or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Stars produce ${format(global.milestonesInfo[4].reward[0])} times more Elements.` : 'New Intergalactic themed Strangenesses.',\n                () => player.inflation.vacuum ? `Max Mass shift value increased by ${format(global.milestonesInfo[4].reward[1])}.` : \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            need: [[9, 3], [1, 2]],\n            reward: [1, 1],\n            scalingOld: [\n                [[9000, 15000, 22000, 30000, 40000, 60000, 80000], [1, 2, 3, 4, 5, 6, 8]],\n                [[100, 150, 200, 250, 300], [1, 2, 3, 4, 5]]\n            ],\n            unlock: [3, 5]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'Greatest of the walls'\n            ],\n            needText: [\n                () => `Have ${player.inflation.vacuum ? 'all' : 'self-made'} Stars count reach at least ${Limit(global.milestonesInfo[5].need[0]).format()}.`,\n                () => `Have ${Limit(global.milestonesInfo[5].need[1]).format()} Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Strange reward increased by ${format(global.milestonesInfo[5].reward[0])}x.` : 'Intergalactic is always unlocked with Interstellar.',\n                () => player.inflation.vacuum ? `Boost per Filament is now +${format(global.milestonesInfo[5].reward[1])} bigger.` : \"Unknown Structure, it doesn't belong to this Universe.\\nYou can view it in stats.\"\n            ],\n            need: [[1.2, 3], [1, 0]],\n            reward: [5, 25],\n            scalingOld: [\n                [[1200, 1400, 1600, 1800, 2000, 2200, 2400], [5, 5, 10, 10, 20, 20, 50]],\n                [[1, 2, 4, 8, 12, 16, 20, 24], [25, 25, 50, 50, 100, 100, 200, 0]]\n            ],\n            unlock: [4, 8]\n        }\n    ],\n    challengesInfo: {\n        name: [\n            'Void'\n        ],\n        description: [\n            'Result of Vacuum Instabillity, investigate at your own will'\n        ],\n        effectText: [\n            () => {\n                const progress = player.challenges.void;\n                if (progress[1] === 0) { return '<span class=\"orangeText\">- Unknown, but maybe if more Energy</span>'; }\n                let text = '<span class=\"orangeText\">- Energy gain is decreased by 20%\\n- Discharge base reduced</span>'; //\\n- 'Impulse' cost increased\n                if (progress[1] >= 3) { text += `<span class=\"blueText\">\\n\\n- ${progress[2] > 0 ? `Mole softcap no longer delayed by self-made amount and is much stronger (^${format(0.5)} > ^${format(0.1)})\\n- Excessive Puddles are now softcapped ^${format(0.5)} (delayed by self-made amount)\\n- Clouds gain is a little weaker (-${format(0.02)})\\n- Puddles are 10 times weaker` : 'Unknown, but maybe if deeper'}</span>`; }\n                if (progress[1] >= 2) { text += `<span class=\"grayText\">\\n\\n- ${progress[3] > 0 ? `Cosmic dust production softcapped ^${format(Math.floor(100 - 3.3 * (player.accretion.rank - 1)) / 100)}\\n- Increasing Rank doesn't increase effective Rank` : 'Unknown, but maybe if more Mass'}</span>`; }\n                if (progress[3] >= 5) { text += `<span class=\"darkorchidText\">\\n\\n- ${progress[4] > 0 ? \"'Star system' effective level softcapped instanly\\n- 'Nova' cost increased\\n- Intergalactic unlocked later\" : 'Unknown, but maybe if far enough'}</span>`; }\n                //Iron cost increased\n                //Black holes boost maxMass shift value instead\n                //Intergalactic should be unlocked instanly but until Iron be softcapped ^0.01\n                if (progress[4] >= 5) { text += '<span class=\"cyanText\">\\n\\n- </span>'; }\n                //(Think more later, something like no X increase on research weaker upgrades?)\n                return text;\n            }\n\n            //Reach Rank 7 ('New rank'?) (Rank itself is Universe or Protogalaxy; Could be multiple extras)\n            //Reach Rank 8 ('Void', 'Inflation', 'Universe Structure'?)\n\n            //Get \"Iron\" ('New Upgrade 2'?)\n\n            //Get a Galaxy (Galaxy doesn't cause reset or Intergalactic 'Strange boost' or Galaxy related strangeness?)\n            //Get x Galaxies (Galaxy merger'?)\n            //Get a filament (Filament doesn't cause an reset)\n\n            /* unassign rewards:\n                'New Upgrade 2' - () => 'Unlock a new Upgrade yet again.\\nLast one is extra good.' //1 - Alpha chain (upgrade); 2 - Brown dwarfs (extra research); 3 - Black dwarfs (extra research)\n                'Strange boost' - () => 'Unspend Strange quarks will boost this Stage. (Reward from Stage reset)' //Or really slowly scaling stronger Galaxy\n                'Galaxy merger' - () => \"Unlock a new Structure. (Obtainable only through 'Merge')\\nSecond level is automatic 'Merge'.\"\n                //Maybe add more levels into 'Isolation' to not affect Galaxy reset?\n\n                Staff that new elements can unlock:\n                Type frequency and Higher density max level increased by 1 (Affects Quasi stars)\n                Impulse now affects Intergalactic (not galaxies)\n\n                New ideas for Elements to unlock:\n                Boost per galaxy is now +0.1\n                Strange reward is now boosted by ^1.1\n            */\n        ],\n        rewardText: [\n            [\n                [],\n                [\"'Micro boost' (Microworld)\", \"'One dust' (Accretion)\", \"'Massive Ranks' (Accretion)\", \"'Fundamental boost' (Microworld)\"],\n                [\"'Cloud density' max level increased\", \"'New Structure' max level increased\", \"'Isolation' (Submerged)\"],\n                ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\"],\n                [\"Unlocked 'New Milestones'\", \"'Energy recycle' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass shift' max level increased\"],\n                []\n            ]\n        ],\n        color: [\n            'darkvioletText'\n        ]\n    },\n    historyStorage: {\n        stage: []\n    }\n};\n\n//Not for deep copy. Actual type is any[], it's because TS is dumb\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone; //[...array] is better when >10000 keys\n\n//For non deep clone use { ...object } or cloneArray when possible\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\nconst createArray = (amount: number, type: 'toggle' | 'toggleAuto' | 'upgrade') => {\n    const array = [];\n    for (let i = 0; i < amount; i++) {\n        if (type === 'toggle') {\n            array.push(true);\n        } else if (type === 'toggleAuto') {\n            array.push(false);\n        } else if (type === 'upgrade') {\n            array.push(0);\n        }\n    }\n    return array;\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.firstCost[s] = cloneArray(global.buildingsInfo.startCost[s]);\n}\nglobal.researchesAutoInfo.cost = cloneArray(global.researchesAutoInfo.startCost);\nfor (const upgradeType of ['researches', 'researchesExtra', 'strangeness'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    for (let s = 1; s < pointer.length; s++) {\n        pointer[s].cost = cloneArray(pointer[s].startCost);\n    }\n}\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.upgradesInfo[5].startCost.length, 'upgrade')\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesInfo[5].startCost.length, 'upgrade')\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[2].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[3].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[4].startCost.length, 'upgrade'),\n        createArray(global.researchesExtraInfo[5].startCost.length, 'upgrade')\n    ],\n    researchesAuto: createArray(global.researchesAutoInfo.startCost.length, 'upgrade'),\n    ASR: createArray(global.ASRInfo.costRange.length, 'upgrade'),\n    elements: createArray(global.elementsInfo.startCost.length, 'upgrade'),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[2].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[3].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[4].startCost.length, 'upgrade'),\n        createArray(global.strangenessInfo[5].startCost.length, 'upgrade')\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[2].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[3].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[4].need.length, 'upgrade'),\n        createArray(global.milestonesInfo[5].need.length, 'upgrade')\n    ]\n});\nObject.assign(player.toggles, { //Done separately to keep 'shop'\n    normal: createArray(document.getElementsByClassName('toggle').length, 'toggle'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, 'toggleAuto'),\n        createArray(player.buildings[2].length, 'toggleAuto'),\n        createArray(player.buildings[3].length, 'toggleAuto'),\n        createArray(player.buildings[4].length, 'toggleAuto'),\n        createArray(player.buildings[5].length, 'toggleAuto')\n    ],\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, 'toggleAuto')\n});\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    const oldNames = [\n        'stage',\n        'discharge',\n        'vaporization',\n        'accretion',\n        'collapse',\n        'inflation',\n        'time',\n        'buildings',\n        'strange',\n        'upgrades',\n        'researches',\n        'researchesExtra',\n        'researchesAuto',\n        'ASR',\n        'elements',\n        'strangeness',\n        'milestones',\n        'challenges'\n    ];\n    const newNames = [\n        't1',\n        'testing1',\n        't2',\n        't3',\n        't4',\n        't5',\n        't6',\n        't7',\n        't8',\n        't9',\n        't10',\n        't11',\n        't12',\n        't13',\n        't14',\n        't15',\n        't16',\n        't17'\n    ];\n    for (const key in load) {\n        if (newNames.includes(key)) {\n            const replaced = oldNames[newNames.indexOf(key)];\n            load[replaced as keyof unknown] = load[key as keyof unknown];\n            delete load[key as keyof unknown];\n        }\n    }\n\n    if (Object.hasOwn(load, 'player')) { load = load['player' as keyof unknown]; } //Old save had it\n\n    for (const key in playerStart) {\n        if (!Object.hasOwn(load, key)) {\n            if (key === 'discharge') {\n                throw new ReferenceError('This save file is missing important information and is most likely not from this game');\n            } else if (key !== 'version') {\n                load[key as 'ASR'] = deepClone(playerStart[key as 'ASR']);\n            } else { load.version = '0.0.0'; }\n        }\n    }\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === '0.0.0') {\n            load.version = 'v0.0.1';\n            if (Object.hasOwn(load, 'energy')) { load.discharge.energy = load['energy' as 'discharge']['current' as 'energy']; }\n        }\n        if (load.version === 'v0.0.1') {\n            load.version = 'v0.0.2';\n            load.stage.resets = load.stage.current - 1;\n        }\n        if (load.version === 'v0.0.2') {\n            load.version = 'v0.0.3';\n            load.toggles = deepClone(playerStart.toggles);\n        }\n        if (load.version === 'v0.0.3') {\n            load.version = 'v0.0.4';\n            delete load['energy' as keyof unknown];\n            delete load['buyToggle' as keyof unknown];\n        }\n        if (load.version === 'v0.0.4' || load.version === 'v0.0.5') {\n            load.version = 'v0.0.6';\n            load.events = [false];\n        }\n        if (load.version === 'v0.0.6') {\n            load.version = 'v0.0.7';\n            load.vaporization.input = 10;\n            load.stage.input = 1;\n        }\n        if (load.version === 'v0.0.7') {\n            load.version = 'v0.0.8';\n            load.stage.export = 1;\n        }\n        if (load.version === 'v0.0.8') {\n            load.version = 'v0.0.9';\n            load.stage.active = Math.min(load.stage.current, 4);\n            const a = load.stage.active;\n            const oldB = load.buildings as unknown as playerType['buildings'][0];\n            load.buildings = deepClone(playerStart.buildings);\n            load.buildings[a] = oldB;\n            const oldU = load.upgrades as unknown as playerType['upgrades'][0];\n            load.upgrades = deepClone(playerStart.upgrades);\n            load.upgrades[a] = oldU;\n            const oldR = load.researches as unknown as playerType['researches'][0];\n            load.researches = deepClone(playerStart.researches);\n            load.researches[a] = oldR;\n            const oldE = load.researchesExtra as unknown as playerType['researchesExtra'][0];\n            load.researchesExtra = deepClone(playerStart.researchesExtra);\n            load.researchesExtra[a] = oldE;\n            if (load.strangeness.length < 5) { load.strangeness.unshift([]); }\n            load.stage.export *= 86400;\n            load.ASR[a] = load.researchesAuto.splice(1, 1)[0];\n        }\n        if (load.version === 'v0.0.9') {\n            load.version = 'v0.1.0';\n            if (load.upgrades[3].length === 12) { load.upgrades[3].splice(8, 0, 0); }\n            load.collapse.show = [];\n        }\n        if (load.version === 'v0.1.0') {\n            load.version = 'v0.1.1';\n            if (Object.hasOwn(load.discharge, 'energyCur')) { load.discharge.energy = load.discharge['energyCur' as 'energy']; }\n            delete load.discharge['energyCur' as keyof unknown];\n            load.collapse.massMax = load.collapse.mass;\n        }\n        if (load.version === 'v0.1.1') {\n            load.version = 'v0.1.2';\n            for (let s = 1; s < load.buildings.length; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    load.buildings[s][i].current = Limit(load.buildings[s][i].current).toArray();\n                    load.buildings[s][i].total = Limit(load.buildings[s][i].total).toArray();\n                    load.buildings[s][i].trueTotal = Limit(load.buildings[s][i].total).toArray(); //Intentional\n                    load.buildings[s][i].highest = [0, 0];\n                }\n            }\n            load.discharge.unlock = load.stage.current === 1 && load.discharge.energy >= 9;\n            load.vaporization.clouds = Limit(load.vaporization.clouds).toArray();\n            load.collapse.elementsMax = cloneArray(load.buildings[4][0].current);\n            if (Object.hasOwn(load.strange[0], 'true')) { load.strange[0].current = load.strange[0]['true' as 'current']; }\n            if (load.upgrades[1].length < 10) { load.upgrades[1].unshift(0, 0); }\n            delete load.vaporization['current' as keyof unknown];\n            delete load.strange[0]['true' as keyof unknown];\n            load.time.offline = 0;\n        }\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.best = 0;\n            load.stage.time = 0;\n            load.inflation.age = 0;\n            load.accretion.input = 600;\n            load.discharge.energyMax = load.discharge.energy;\n            load.vaporization.cloudsMax = cloneArray(load.vaporization.clouds);\n        }\n        if (load.version === 'v0.1.3') {\n            load.version = 'v0.1.4';\n            load.collapse.input = [4, 2];\n            delete load.collapse['disabled' as keyof unknown];\n            delete load.collapse['inputM' as keyof unknown];\n            delete load.collapse['inputS' as keyof unknown];\n            if (!load.inflation.vacuum) { //After enough time or versions can be removed\n                if (load.strangeness[5] === undefined) { load.strangeness[5] = [0]; }\n                for (let s = 1 + load.strangeness[5][0]; s <= (load.stage.current === 5 ? 4 : 5); s++) {\n                    if (Math.min(load.stage.current, 4) === s) { continue; }\n                    load.buildings[s] = deepClone(playerStart.buildings[s]);\n                    load.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n                    load.researches[s] = cloneArray(playerStart.researches[s]);\n                    load.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n                    if (s !== 5) { load.ASR[s] = 0; }\n\n                    if (s === 1) {\n                        load.buildings[1][0].current = [3, 0];\n                        load.discharge.energy = 0;\n                        load.discharge.current = 0;\n                    } else if (s === 2) {\n                        load.buildings[2][0].current = [2.8, -3];\n                        load.vaporization.clouds = [1, 0];\n                    } else if (s === 3) {\n                        load.buildings[3][0].current = [1, -19];\n                        load.accretion.rank = 1;\n                    } else if (s === 4) {\n                        load.buildings[4][0].current = [1, 0];\n                        load.collapse.mass = 0.01235;\n                        load.collapse.stars = [0, 0, 0];\n                        load.elements = cloneArray(playerStart.elements);\n                    }\n                }\n            }\n        }\n        if (load.version === 'v0.1.4') {\n            load.version = 'v0.1.5';\n            load.history.stage.best[2] = 0;\n            for (let i = 0; i < load.history.stage.list.length; i++) {\n                load.history.stage.list[i][2] = 0;\n            }\n            if (load.inflation.vacuum && load.strangeness[5] !== undefined && load.strangeness[5][2] !== 0) { //After enough time or versions can be removed\n                load.strangeness[5][2] = 0;\n                load.strange[0].current += 50;\n            }\n            load.time.disabled = 0;\n            //load.collapse.marks = [0]; //Maybe, new input for when to Collapse, for now will be only 1\n            delete load.toggles.shop['strict' as keyof unknown];\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError('Save file version is higher than game version');\n        }\n    }\n\n    for (let s = 1; s < playerStart.buildings.length; s++) {\n        if (!Array.isArray(load.buildings[s])) {\n            load.buildings[s] = deepClone(playerStart.buildings[s]);\n        } else {\n            for (let i = load.buildings[s].length; i < playerStart.buildings[s].length; i++) {\n                load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n            }\n        }\n    }\n    for (let i = load.strange.length; i < playerStart.strange.length; i++) {\n        load.strange[i] = deepClone(playerStart.strange[i]);\n    }\n\n    for (let s = 1; s < playerStart.upgrades.length; s++) {\n        if (!Array.isArray(load.upgrades[s])) {\n            load.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        } else {\n            for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                load.upgrades[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researches.length; s++) {\n        if (!Array.isArray(load.researches[s])) {\n            load.researches[s] = cloneArray(playerStart.researches[s]);\n        } else {\n            for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n                load.researches[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 1; s < playerStart.researchesExtra.length; s++) {\n        if (!Array.isArray(load.researchesExtra[s])) {\n            load.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        } else {\n            for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                load.researchesExtra[s][i] = 0;\n            }\n        }\n    }\n    for (let i = load.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n        load.researchesAuto[i] = 0;\n    }\n    for (let i = load.ASR.length; i < playerStart.ASR.length; i++) {\n        load.ASR[i] = 0;\n    }\n    for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n        load.elements[i] = 0;\n    }\n    for (let s = 0; s < playerStart.strangeness.length; s++) {\n        if (!Array.isArray(load.strangeness[s])) {\n            load.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        } else {\n            for (let i = load.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                load.strangeness[s][i] = 0;\n            }\n        }\n    }\n    for (let s = 0; s < playerStart.milestones.length; s++) {\n        if (!Array.isArray(load.milestones[s])) {\n            load.milestones[s] = cloneArray(playerStart.milestones[s]);\n        } else {\n            for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                load.milestones[s][i] = 0;\n            }\n        }\n    }\n\n    for (let s = 1; s < playerStart.toggles.buildings.length; s++) {\n        if (!Array.isArray(load.toggles.buildings[s])) {\n            load.toggles.buildings[s] = cloneArray(playerStart.toggles.buildings[s]);\n        } else {\n            for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n                load.toggles.buildings[s][i] = false;\n            }\n        }\n    }\n    for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n        load.toggles.normal[i] = playerStart.toggles.normal[i];\n    }\n    for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n        load.toggles.auto[i] = false;\n    }\n\n    for (let i = load.events.length; i < playerStart.events.length; i++) {\n        load.events[i] = false;\n    }\n\n    Object.assign(player, load);\n\n    /* Prepare fake save file data */\n    prepareVacuum();\n\n    const stars = player.buildings[4];\n    global.collapseInfo.trueStars = stars[1].true + stars[2].true + stars[3].true + stars[4].true + stars[5].true;\n    global.accretionInfo.rankCost[4] = player.stage.true < 3 || (player.stage.true === 3 && !player.events[0]) ? 0 : 5e29;\n    global.historyStorage.stage = player.history.stage.list;\n\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            calculateMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        const strangeness = player.strangeness[s];\n        const strangenessMax = global.strangenessInfo[s].max;\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'strangeness');\n            if (strangeness[i] > strangenessMax[i]) {\n                strangeness[i] = strangenessMax[i];\n                visualUpdateResearches(i, s, 'strangeness');\n                console.warn(`Strangeness (${i + 1} of ${s}) level reduced`);\n            }\n        }\n    }\n    const auto = player.researchesAuto;\n    const { max: autoMax, autoStage } = global.researchesAutoInfo;\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) {\n        calculateMaxLevel(i, autoStage[i], 'researchesAuto');\n        if (auto[i] > autoMax[i]) {\n            auto[i] = autoMax[i];\n            visualUpdateResearches(i, autoStage[i], 'researchesAuto');\n            console.warn(`Automatization research (${i + 1}) level reduced`);\n        }\n    }\n    for (let s = 1; s <= 5; s++) {\n        calculateMaxLevel(0, s, 'ASR');\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) {\n                extra[i] = extraMax[i];\n                console.warn(`Special research (${i + 1} of ${s}) level reduced`);\n            }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) {\n                researches[i] = researchesMax[i];\n                console.warn(`Stage research (${i + 1} of ${s}) level reduced`);\n            }\n        }\n    }\n\n    assignNewMassCap();\n    return oldVersion;\n};\n\nexport const buildVersionInfo = () => {\n    if (global.versionBuild) { return; }\n\n    const changeVersion = (version: string) => {\n        let text = '';\n        switch (version) {\n            case 'v0.0.1':\n                text = '- Stage 2 full rework\\n- Introduced automatic changelog\\n- Auto Structures do not wait for 2x cost if making the 1st one\\n\\n';\n                text += '- Mobile device support\\n\\n';\n                text += '- Tritium now shows how much Molecules being produced per second\\n- Upgrades auto update description';\n                break;\n            case 'v0.0.2':\n                text = '- Added stats subtab\\n- Added Stage resets into save file';\n                break;\n            case 'v0.0.3':\n                text = '- Added new content (Stage 3)\\n- Stage 2 extended\\n- Max offline time base and from research is now 2 times longer\\n- Offline time calculated better\\n- Toggles have been reset due to change in the way they are saved\\n- Researches auto update description\\n- Some new stats';\n                break;\n            case 'v0.0.4':\n                text = '- Buffed all Stages\\n- Added events for early Stages\\n- Update to stats visuals\\n- Intervals have been reset due to change in save file saving\\n\\n';\n                text += '- Numbers are now formated\\n\\n';\n                text += '- New stat for Stage 3';\n                break;\n            case 'v0.0.5':\n                text = '- New content (Stage 4)\\n- Basic loading screen\\n- Full visual update\\n- New formula for multi making Structures\\n- Visual indication for how many Structures can be made\\n\\n';\n                text += '- Created Elements will still show effects, after Collapse\\n- Improved transition when changing themes\\n- Fixed being able to create automatization research when can\\'t afford them\\n\\n';\n                text += '- Added hotkeys\\n- Stage event reset due to small changes\\n\\n';\n                text += '- Fixed unable to progress in Stage 1, but rework is coming';\n                break;\n            case 'v0.0.6':\n                text = '- List of hotkeys can be seen now\\n\\n';\n                text += '- Option to remove text movement\\n- Ability to rename save file';\n                break;\n            case 'v0.0.7':\n                text = '- New content (Stage 5)\\n- Stage 1 rework\\n- Self-made Structures stat moved into Stage tab\\n- Hotkeys for Resets\\n- Pressing keyboard (unless tab) no longer highlights buttons\\n- Removed old number format (it was painfully slow) in favor of self-made one\\n\\n';\n                text += '- Numpad can now be used as digits for hotkeys\\n\\n';\n                text += '- Save file name can now display in game stats';\n                break;\n            case 'v0.0.8':\n                text = '- Minor speed up to almost all Stages (not first one)';\n                break;\n            case 'v0.0.9':\n                text = '- New content (Milestones)\\n- Stage 4 speed up\\n- Fixed export reward not being saved into exported file\\n- Auto Structures toggles have been reset\\n\\n';\n                text += '- Fix being unable to play with save file that was recently created\\n\\n';\n                text += '- Fixed F1 - F12 buttons working as digits\\n- Milestones are now unlocked instanly (with Stage 5)\\n- New event that must be triggered to progress, for changing Active Stage for the first time\\n\\n';\n                text += '- Max offline base and research is increased by 2 times, related Strangeness cost and max level have been balanced\\n\\n';\n                text += '- Some quick balance changes for Stage 3 and 5';\n                break;\n            case 'v0.1.0':\n                text = '- New content and balance for end of Stage 5\\n- New stats for Stage 5';\n                break;\n            case 'v0.1.1':\n                text = '- More balance for Stage 5\\n- New stats for Stage 2 and 4, max energy no longer resets\\n- New hotkeys to change Active Stage';\n                break;\n            case 'v0.1.2':\n                text = '- New content (Vacuum)\\n- Some descriptions have been expanded\\n- Added self-made break infinity\\n- Heavy optimization\\n- Offline time been reworked\\n- Added version window (removed automatic change log)\\n- Removed option to remove text movement, because it\\'s now always on\\n\\n';\n                text += \"- New color theme\\n- Offline warp now unlocked instantly, while Offline storage control toggle isn't\\n- New stats for Stage 4\\n\\n\";\n                text += '- Auto Structures now correctly spend currency';\n                break;\n            case 'v0.1.3':\n                text = '- Puddles production base increased from 3 to 4, Clouds gain decreased by -1 (formula fix)\\n- New stats for Stage 3, 4 and 5\\n- More Stage 6 balance (Strangeness, reduced max level and adjusted cost; Submerged proper balance; Strange boost new effects)\\n- Replay event button\\n\\n';\n                text += '- History for Stage resets\\n- New hotkeys (A - toggle all Structures, O - toggle Offline)\\n\\n';\n                text += '- Added requirement to unlock better control over Warp (also Warp now has a minimum value)\\n- Automatically made Structures/Upgrades no longer visually update numbers';\n                break;\n            case 'v0.1.4':\n                text = '- Warps now waste offline (half of normal); Max offline from upgrades decreased, cost adjusted\\n- Custom scrolls\\n- Notifications\\n- Fixed and updated special supports\\n- Auto Collapse settings reset';\n                break;\n            case 'v0.1.5':\n                text = \"- New content (Void)\\n- Stage 6 minor balance changes\\n-Images should no longer unload on Stage change\\n- Many small changes to improve quality of life\\n- 'Any' make toggle is now always Strict, related button removed\\n- More information for save files\\n- New hotkeys\\n- Small visual update\";\n        }\n        getId('versionText').textContent = text;\n        getId('currentVesion').textContent = version;\n    };\n\n    const max = 15; //v0.2.4 -> 24\n    let autoText = '';\n    for (let i = 1; i <= max; i++) {\n        const index = i < 10 ? `0${i}` : `${i}`;\n        const version = `v0.${index[0]}.${index[1]}`;\n        autoText += `<button id=\"${version}\">${version}</button>`;\n    }\n\n    /* All related CSS is here, because I don't want it to be part of main HTML; also inserted rules with insertRule() gets auto deleted after some time... */\n    getId('versionInfo').innerHTML = `<div style=\"display: flex; flex-direction: column; justify-content: space-between; align-items: center; width: clamp(42vw, 36em, 80vw); height: clamp(26vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em;\">\n        <div style=\"display: flex; justify-content: center; flex-wrap: wrap; gap: 0.06em;\">${autoText}</div>\n        <div style=\"width: 100%; overflow-y: auto;\">\n            <label id=\"currentVesion\" class=\"bigWord\"></label>\n            <p id=\"versionText\" class=\"whiteText\" style=\"white-space: pre-line; line-height: 1.3em; margin-top: 0.4em;\"></p>\n        </div>\n        <button id=\"closeVersionInfo\" style=\"width: 6em; border-radius: 4px; font-size: 0.92em;\">Close</button>\n    </div>`;\n    document.head.appendChild(document.createElement('style')).textContent = '#versionInfo > div > div:first-of-type > button { width: 3.8em; height: 2em; font-size: 0.88em; }';\n    getId('closeVersionInfo').addEventListener('click', () => { getId('versionInfo').style.display = 'none'; });\n    for (let i = 1; i <= max; i++) {\n        const index = i < 10 ? `0${i}` : `${i}`;\n        const version = `v0.${index[0]}.${index[1]}`;\n        getId(version).addEventListener('click', () => changeVersion(version));\n    }\n    changeVersion(playerStart.version);\n\n    global.versionBuild = true;\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseAsyncReset, dischargeAsyncReset, rankAsyncReset, stageAsyncReset, switchStage, toggleSwap, vaporizationAsyncReset } from './Stage';\nimport { timeWarp } from './Main';\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    if (check.code === 'Tab') {\n        document.body.classList.add('outlineOnFocus');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement).type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.body.classList.remove('outlineOnFocus');\n    }\n    if (check.ctrlKey || check.altKey) { return; }\n    const key = check.key;\n\n    if (key.length === 1) {\n        const numberKey = Number(check.code.slice(-1));\n\n        if (!isNaN(numberKey)) { //Spacebar goes here as 0\n            if (check.code[0] === 'F' || numberKey < 1) { return; }\n            if (check.shiftKey) {\n                toggleSwap(numberKey, 'buildings', true);\n            } else { buyBuilding(numberKey); }\n            return;\n        }\n\n        const stringKey = (player.toggles.normal[6] ? check.code.replace('Key', '') : key).toLowerCase();\n\n        if (check.shiftKey) {\n            if (stringKey === 'a') {\n                toggleSwap(0, 'buildings', true);\n            }\n        } else {\n            if (stringKey === 'o') {\n                toggleSwap(0, 'normal', true);\n            } else if (stringKey === 'w') {\n                check.preventDefault();\n                void timeWarp();\n            } else if (stringKey === 's') {\n                void stageAsyncReset();\n            } else if (stringKey === 'd') {\n                if (global.stageInfo.activeAll.includes(1)) { void dischargeAsyncReset(); }\n            } else if (stringKey === 'v') {\n                if (global.stageInfo.activeAll.includes(2)) { void vaporizationAsyncReset(); }\n            } else if (stringKey === 'r') {\n                if (global.stageInfo.activeAll.includes(3)) { void rankAsyncReset(); }\n            } else if (stringKey === 'c') {\n                if (global.stageInfo.activeAll.includes(4)) { void collapseAsyncReset(); }\n            }\n        }\n        return;\n    }\n\n    if (!check.repeat) {\n        if (check.shiftKey) {\n            if (key === 'ArrowLeft' || key === 'ArrowRight') {\n                const { activeAll } = global.stageInfo;\n                if (activeAll.length === 1) { return; }\n                let index = activeAll.indexOf(player.stage.active);\n\n                if (key === 'ArrowLeft') {\n                    if (index <= 0) {\n                        index = activeAll.length - 1;\n                    } else { index--; }\n                    switchStage(activeAll[index]);\n                } else {\n                    if (index >= activeAll.length - 1) {\n                        index = 0;\n                    } else { index++; }\n                    switchStage(activeAll[index]);\n                }\n            }\n        } else {\n            if (key === 'ArrowLeft' || key === 'ArrowRight') {\n                const { tabs } = global.tabList;\n                let index = tabs.indexOf(global.tab);\n\n                if (key === 'ArrowLeft') {\n                    do {\n                        if (index <= 0) {\n                            index = tabs.length - 1;\n                        } else { index--; }\n                    } while (!checkTab(tabs[index]));\n                    switchTab(tabs[index]);\n                } else {\n                    do {\n                        if (index >= tabs.length - 1) {\n                            index = 0;\n                        } else { index++; }\n                    } while (!checkTab(tabs[index]));\n                    switchTab(tabs[index]);\n                }\n            } else if (key === 'ArrowDown' || key === 'ArrowUp') {\n                if (!Object.hasOwn(global.subtab, `${global.tab}Current`)) { return; }\n                const subtabs = global.tabList[`${global.tab as 'stage'}Subtabs`];\n                let index = subtabs.indexOf(global.subtab[`${global.tab as 'stage'}Current`]);\n\n                if (key === 'ArrowDown') {\n                    do {\n                        if (index <= 0) {\n                            index = subtabs.length - 1;\n                        } else { index--; }\n                    } while (!checkTab(global.tab, subtabs[index]));\n                    switchTab(global.tab, subtabs[index]);\n                } else {\n                    do {\n                        if (index >= subtabs.length - 1) {\n                            index = 0;\n                        } else { index++; }\n                    } while (!checkTab(global.tab, subtabs[index]));\n                    switchTab(global.tab, subtabs[index]);\n                }\n            }\n        }\n    }\n};\n", "import { player, global, playerStart, updatePlayer, buildVersionInfo, deepClone } from './Player';\nimport { getUpgradeDescription, timeUpdate, switchTab, numbersUpdate, visualUpdate, format, stageCheck, maxOfflineTime, exportMultiplier, maxExportTime, getChallengeDescription } from './Update';\nimport { assignNewMassCap, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyUpgrades, collapseAsyncReset, dischargeAsyncReset, enterChallenge, rankAsyncReset, stageAsyncReset, switchStage, toggleBuy, toggleSwap, vaporizationAsyncReset } from './Stage';\nimport { Alert, hideFooter, Prompt, setTheme, changeFontSize, screenReaderSupport, mobileDeviceSupport, changeFormat, specialHTML, AlertWait, replayEvent, Confirm, preventImageUnload } from './Special';\nimport { detectHotkey } from './Hotkeys';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/* This is how much I like to non stop write that element is not null */\nexport const getId = (id: string) => document.getElementById(id) as HTMLElement;\nexport const getClass = (idCollection: string) => document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\nexport const getQuery = (query: string) => document.querySelector(query) as HTMLElement;\n\nexport const reLoad = (firstLoad = false) => {\n    if (firstLoad) {\n        preventImageUnload(); //Must be done before prepareVacuum\n        const save = localStorage.getItem('testing_save');\n        if (save !== null) {\n            const load = JSON.parse(atob(save));\n            const versionCheck = updatePlayer(load);\n\n            const { time } = player;\n            const offlineTime = (Date.now() - time.updated) / 1000;\n            const maxOffline = maxOfflineTime();\n            time.updated = Date.now();\n            global.lastSave += offlineTime;\n            time.offline = Math.min(time.offline + offlineTime, maxOffline);\n            player.stage.export = Math.min(player.stage.export + Math.min(offlineTime, maxOffline), maxExportTime());\n            Alert(`Welcome back, you were away for ${format(offlineTime, { type: 'time' })}.${time.offline >= maxOffline ? ' (Offline storage is full)' : ''}\\n${versionCheck !== player.version ? `Game have been updated from ${versionCheck} to ${player.version}` : `Current version is ${player.version}`}`);\n        } else {\n            prepareVacuum();\n            updatePlayer(deepClone(playerStart));\n            player.buildings[3][0].current = [5.97, 27];\n            Alert(`Welcome to 'Fundamental'.\\nThis is a test-project made by awWhy. Should be supported by modern browsers, phones and screen readers (need to turn support ON in settings).\\nWas inspired by 'Synergism', 'Antimatter Dimensions' and others.\\nCurrent version is ${player.version}`);\n        }\n\n        mobileDeviceSupport();\n        screenReaderSupport();\n        changeFontSize();\n    }\n\n    const theme = localStorage.getItem('theme');\n    setTheme(Number(theme), theme === null);\n\n    stageCheck('reload');\n    if (firstLoad) {\n        getId('body').style.display = '';\n        getId('loading').style.display = 'none';\n    }\n\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('mainInterval') as HTMLInputElement).value = `${player.intervals.main}`;\n    (getId('numbersInterval') as HTMLInputElement).value = `${player.intervals.numbers}`;\n    (getId('visualInterval') as HTMLInputElement).value = `${player.intervals.visual}`;\n    (getId('autoSaveInterval') as HTMLInputElement).value = `${player.intervals.autoSave}`;\n    (getId('thousandSeparator') as HTMLInputElement).value = player.separator[0];\n    (getId('decimalPoint') as HTMLInputElement).value = player.separator[1];\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input, { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input, { type: 'input' });\n    (getId('rankShiftInput') as HTMLInputElement).value = format(player.accretion.input, { type: 'input' });\n    (getId('collapseMassInput') as HTMLInputElement).value = format(player.collapse.input[0], { type: 'input' });\n    (getId('collapseStarsInput') as HTMLInputElement).value = format(player.collapse.input[1], { type: 'input' });\n    (getId('stageResetsSave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageResetsKeep') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    getId('stageSelect').classList.remove('active');\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    toggleBuy();\n\n    changeIntervals();\n};\nreLoad(true); //Start everything\n\n{\n    /* Global */\n    const { screenReader: SR } = global;\n    const hover = global.mobileDevice ? 'touchstart' : 'mouseover';\n    document.addEventListener('keydown', (key: KeyboardEvent) => detectHotkey(key));\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggle${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => toggleSwap(i, 'auto', true));\n    }\n\n    if (!player.toggles.normal[7]) {\n        const elementsArea = getId('researchSubtabElements');\n        elementsArea.remove();\n        elementsArea.id = 'ElementsTab';\n        getId('researchTab').insertAdjacentElement('afterend', elementsArea);\n\n        const elementsButton = getId('researchSubtabBtnElements');\n        elementsButton.remove();\n        elementsButton.id = 'ElementsTabBtn';\n        elementsButton.classList.add('stage4Include');\n        elementsButton.style.display = global.stageInfo.activeAll.includes(4) ? '' : 'none';\n        getId('researchTabBtn').insertAdjacentElement('afterend', elementsButton);\n\n        const tabList = global.tabList;\n        tabList.researchSubtabs.splice(tabList.researchSubtabs.indexOf('Elements'), 1);\n        tabList.tabs.splice(tabList.tabs.indexOf('research') + 1, 0, 'Elements');\n    }\n\n    /* Stage tab */\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Btn`).addEventListener('click', () => buyBuilding(i));\n    }\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, player.stage.active, 'upgrades')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, player.stage.active, 'upgrades'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'upgrades'));\n    }\n    getId('stageReset').addEventListener('click', () => { void stageAsyncReset(); });\n    getId('reset1Button').addEventListener('click', () => {\n        const { active } = player.stage;\n        if (active === 1) {\n            void dischargeAsyncReset();\n        } else if (active === 2) {\n            void vaporizationAsyncReset();\n        } else if (active === 3) {\n            void rankAsyncReset();\n        } else if (active === 4) {\n            void collapseAsyncReset();\n        }\n    });\n    getId('buy1x').addEventListener('click', () => toggleBuy('1'));\n    getId('buyAny').addEventListener('click', () => toggleBuy('any'));\n    getId('buyAnyInput').addEventListener('blur', () => toggleBuy('any'));\n    getId('buyMax').addEventListener('click', () => toggleBuy('max'));\n\n    for (let i = -1; i < global.challengesInfo.name.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (SR) { image.addEventListener('focus', () => getChallengeDescription(i)); }\n        image.addEventListener(hover, () => getChallengeDescription(i));\n        image.addEventListener('click', i === -1 ? switchVacuum : () => { void enterChallenge(i); });\n    }\n\n    /* Research tab */\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, player.stage.active, 'researches')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, player.stage.active, 'researches'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'researches'));\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, player.stage.active, 'researchesExtra')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, player.stage.active, 'researchesExtra'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'researchesExtra'));\n    }\n    for (let i = 0; i < global.researchesAutoInfo.startCost.length; i++) {\n        const image = getId(`researchAuto${i + 1}Image`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, player.stage.active, 'researchesAuto')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, player.stage.active, 'researchesAuto'));\n        image.addEventListener('click', () => buyUpgrades(i, player.stage.active, 'researchesAuto'));\n    }\n    {\n        const image = getId('ASRImage');\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(0, player.stage.active, 'ASR')); }\n        image.addEventListener(hover, () => getUpgradeDescription(0, player.stage.active, 'ASR'));\n        image.addEventListener('click', () => buyUpgrades(0, player.stage.active, 'ASR'));\n    }\n\n    getId('element0').addEventListener('dblclick', () => getUpgradeDescription(0, 4, 'elements'));\n    for (let i = 1; i < global.elementsInfo.startCost.length; i++) {\n        const image = getId(`element${i}`);\n        if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, 4, 'elements')); }\n        image.addEventListener(hover, () => getUpgradeDescription(i, 4, 'elements'));\n        image.addEventListener('click', () => buyUpgrades(i, 4, 'elements'));\n    }\n\n    /* Strangeness tab */\n    for (let s = 1; s < global.strangenessInfo.length; s++) {\n        for (let i = 0; i < global.strangenessInfo[s].startCost.length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`);\n            if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, s, 'strangeness')); }\n            image.addEventListener(hover, () => getUpgradeDescription(i, s, 'strangeness'));\n            image.addEventListener('click', () => buyUpgrades(i, s, 'strangeness'));\n        }\n    }\n    for (let s = 1; s < global.milestonesInfo.length; s++) {\n        for (let i = 0; i < global.milestonesInfo[s].need.length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > img`);\n            if (SR) { image.addEventListener('focus', () => getUpgradeDescription(i, s, 'milestones')); }\n            image.addEventListener(hover, () => getUpgradeDescription(i, s, 'milestones'));\n        }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('blur', () => {\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        player.vaporization.input = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input, { type: 'input' });\n    });\n    getId('rankShiftInput').addEventListener('blur', () => {\n        const input = getId('rankShiftInput') as HTMLInputElement;\n        player.accretion.input = Number(input.value);\n        input.value = format(player.accretion.input, { type: 'input' });\n        assignNewMassCap();\n    });\n    getId('collapseMassInput').addEventListener('blur', () => {\n        const input = getId('collapseMassInput') as HTMLInputElement;\n        player.collapse.input[0] = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input[0], { type: 'input' });\n    });\n    getId('collapseStarsInput').addEventListener('blur', () => {\n        const input = getId('collapseStarsInput') as HTMLInputElement;\n        player.collapse.input[1] = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input[1], { type: 'input' });\n    });\n    getId('stageInput').addEventListener('blur', () => {\n        const input = getId('stageInput') as HTMLInputElement;\n        player.stage.input = Math.max(Math.floor(Number(input.value)), 1);\n        input.value = format(player.stage.input, { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', () => {\n        buildVersionInfo();\n        getId('versionInfo').style.display = '';\n    });\n    getId('save').addEventListener('click', () => { void saveLoad('save'); });\n    getId('file').addEventListener('change', () => { void saveLoad('import'); });\n    getId('export').addEventListener('click', () => { void saveLoad('export'); });\n    getId('delete').addEventListener('click', () => { void saveLoad('delete'); });\n    getId('switchTheme0').addEventListener('click', () => setTheme(0, true));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('toggleAuto8').addEventListener('click', () => autoElementsSet());\n    getId('toggleAuto5').addEventListener('click', () => autoUpgradesSet('all'));\n    getId('toggleAuto6').addEventListener('click', () => autoResearchesSet('researches', 'all'));\n    getId('toggleAuto7').addEventListener('click', () => autoResearchesSet('researchesExtra', 'all'));\n    getId('saveFileNameInput').addEventListener('blur', () => changeSaveFileName());\n    {\n        const image = getId('saveFileHoverButton');\n        if (SR) { image.addEventListener('focus', () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials())); }\n        image.addEventListener(hover, () => (getId('saveFileNamePreview').textContent = replaceSaveFileSpecials()));\n    }\n    getId('mainInterval').addEventListener('blur', () => {\n        const mainInput = getId('mainInterval') as HTMLInputElement;\n        player.intervals.main = Math.min(Math.max(Math.trunc(Number(mainInput.value)), 20), 100);\n        mainInput.value = `${player.intervals.main}`;\n        changeIntervals();\n    });\n    getId('numbersInterval').addEventListener('blur', () => {\n        const numberInput = getId('numbersInterval') as HTMLInputElement;\n        player.intervals.numbers = Math.min(Math.max(Math.trunc(Number(numberInput.value)), 50), 200);\n        numberInput.value = `${player.intervals.numbers}`;\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('blur', () => {\n        const visualInput = getId('visualInterval') as HTMLInputElement;\n        player.intervals.visual = Math.min(Math.max(Math.trunc(Number(visualInput.value) * 10) / 10, 0.2), 4);\n        visualInput.value = `${player.intervals.visual}`;\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('blur', () => {\n        const autoSaveInput = getId('autoSaveInterval') as HTMLInputElement;\n        player.intervals.autoSave = Math.max(Math.trunc(Number(autoSaveInput.value)), 10);\n        autoSaveInput.value = `${player.intervals.autoSave}`;\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('blur', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('blur', () => changeFormat(true));\n    getId('mobileDeviceToggle').addEventListener('click', () => mobileDeviceSupport(true));\n    getId('screenReaderToggle').addEventListener('click', () => screenReaderSupport(true));\n    getId('pauseGame').addEventListener('click', () => { void pauseGame(); });\n    getId('reviewEvents').addEventListener('click', () => { void replayEvent(); });\n    getId('offlineWarp').addEventListener('click', () => { void timeWarp(); });\n    getId('customFontSize').addEventListener('blur', () => changeFontSize(true));\n\n    getId('stageResetsSave').addEventListener('blur', () => {\n        const inputID = getId('stageResetsSave') as HTMLInputElement;\n        const { input } = player.history.stage;\n        input[0] = Math.min(Math.max(Math.floor(Number(inputID.value)), 0), 20);\n        inputID.value = `${input[0]}`;\n\n        if (input[1] < input[0]) {\n            (getId('stageResetsKeep') as HTMLInputElement).value = inputID.value;\n            input[1] = input[0];\n        }\n    });\n    getId('stageResetsKeep').addEventListener('blur', () => {\n        const input = getId('stageResetsKeep') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.floor(Number(input.value)), player.history.stage.input[0], 3), 100);\n        input.value = `${player.history.stage.input[1]}`;\n    });\n\n    getId('firstPlay').addEventListener('click', () => { global.timeMode = !global.timeMode; });\n\n    /* Footer */\n    getId('hideToggle').addEventListener('click', hideFooter);\n    for (const tabText of global.tabList.tabs) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        if (!Object.hasOwn(global.tabList, `${tabText}Subtabs`)) { continue; }\n        for (const subtabText of global.tabList[`${tabText as 'stage'}Subtabs`]) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`${global.stageInfo.word[i]}Switch`).addEventListener('click', () => switchStage(i));\n    }\n    getId('currentSwitch').addEventListener('click', () => getId('stageSelect').classList.add('active'));\n}\n\nconsole.timeEnd('Game loaded in'); //Started in Player.ts\n\nfunction changeIntervals(pause = false) {\n    const { intervalsId } = global;\n    const { intervals } = player;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = pause ? undefined : setInterval(timeUpdate, intervals.main);\n    intervalsId.numbers = pause ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = pause ? undefined : setInterval(visualUpdate, intervals.visual * 1000);\n    intervalsId.autoSave = pause ? undefined : setInterval(saveLoad, intervals.autoSave * 1000, 'save');\n}\n\nconst prepareFake = () => {\n    const fake = deepClone(player);\n\n    const renameThese = [\n        'stage',\n        'discharge',\n        'vaporization',\n        'accretion',\n        'collapse',\n        'inflation',\n        'time',\n        'buildings',\n        'strange',\n        'upgrades',\n        'researches',\n        'researchesExtra',\n        'researchesAuto',\n        'ASR',\n        'elements',\n        'strangeness',\n        'milestones',\n        'challenges'\n    ];\n    const newName = [\n        't1',\n        'testing1',\n        't2',\n        't3',\n        't4',\n        't5',\n        't6',\n        't7',\n        't8',\n        't9',\n        't10',\n        't11',\n        't12',\n        't13',\n        't14',\n        't15',\n        't16',\n        't17'\n    ];\n    for (const key in fake) {\n        if (renameThese.includes(key)) {\n            const replaced = newName[renameThese.indexOf(key)];\n            fake[replaced as keyof unknown] = fake[key as keyof unknown];\n            delete fake[key as keyof unknown];\n        }\n    }\n\n    return fake;\n};\n\nasync function saveLoad(type: 'import' | 'save' | 'export' | 'delete'): Promise<void> {\n    switch (type) {\n        case 'import': {\n            const id = getId('file') as HTMLInputElement;\n            changeIntervals(true);\n\n            try {\n                const save = await (id.files as FileList)[0].text();\n                const load = JSON.parse(atob(save));\n                const versionCheck = updatePlayer(load);\n\n                const { time } = player;\n                const offlineTime = (Date.now() - time.updated) / 1000;\n                const maxOffline = maxOfflineTime();\n                time.updated = Date.now();\n                time.offline = Math.min(time.offline + offlineTime, maxOffline);\n                player.stage.export = Math.min(player.stage.export + Math.min(offlineTime, maxOffline), maxExportTime());\n                Alert(`This save is ${format(offlineTime, { type: 'time' })} old${time.offline >= maxOffline ? ', Offline storage is maxed' : ''}.\\n${versionCheck !== player.version ? `Also save file version is ${versionCheck}, while game version is ${player.version}` : `Save file version is ${player.version}`}`);\n\n                getId('isSaved').textContent = 'Imported';\n                global.lastSave = 0;\n                reLoad();\n            } catch (error) {\n                changeIntervals();\n                Alert(`Incorrect save file format.\\nFull error is: '${error}'`);\n            } finally { id.value = ''; }\n            return;\n        }\n        case 'save': {\n            if (player.time.disabled !== 0) {\n                if (Date.now() < player.time.disabled) {\n                    Alert(`Not allowed to save until ${new Date(player.time.disabled).toLocaleString()}\\nReason: time manipulations`);\n                    clearInterval(global.intervalsId.autoSave);\n                    global.intervalsId.autoSave = setInterval(saveLoad, 3600000, 'save');\n                    return;\n                } else { player.time.disabled = 0; }\n            }\n            try {\n                player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n\n                const save = btoa(JSON.stringify(prepareFake()));\n                localStorage.setItem('testing_save', save);\n                clearInterval(global.intervalsId.autoSave);\n                global.intervalsId.autoSave = setInterval(saveLoad, player.intervals.autoSave * 1000, 'save');\n                getId('isSaved').textContent = 'Saved';\n                global.lastSave = 0;\n            } catch (error) {\n                Alert(`Failed to save file.\\nFull error is: '${error}'`);\n            }\n            return;\n        }\n        case 'export': {\n            player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n\n            if (player.strangeness[4][7] >= 1) {\n                const rewardType = player.strangeness[5][9];\n                const multiplier = exportMultiplier();\n\n                let strangeGain;\n                if (rewardType >= 1) {\n                    strangeGain = player.stage.export * multiplier / 86400 / 100 ** rewardType;\n                    player.stage.export = 0;\n                } else {\n                    strangeGain = Math.floor(player.stage.export * multiplier / 86400);\n                    player.stage.export -= strangeGain * 86400 / multiplier;\n                }\n                player.strange[rewardType].current += strangeGain;\n                player.strange[rewardType].total += strangeGain;\n            }\n\n            if (player.time.disabled !== 0) { return void saveLoad('save'); }\n            const save = btoa(JSON.stringify(prepareFake()));\n            const a = document.createElement('a');\n            a.href = `data:text/plain;charset=utf-8,${save}`;\n            a.download = replaceSaveFileSpecials();\n            a.click();\n            return;\n        }\n        case 'delete': {\n            const ok = await Prompt(\"This will truly delete your save file and clear local storage!\\nType 'delete' to confirm.\");\n            if (ok === null || ok === '') { return; }\n            if (ok.toLowerCase() === 'delete') {\n                changeIntervals(true);\n                localStorage.removeItem('testing_save');\n                Alert('Game will auto refresh. If not then do it manually');\n                window.location.reload();\n            } else { Alert(`You wrote '${ok}', so save file wasn't deleted`); }\n        }\n    }\n}\n\nconst changeSaveFileName = () => {\n    const input = getId('saveFileNameInput') as HTMLInputElement;\n    const newValue = input.value.length === 0 ? playerStart.fileName : input.value.replaceAll(/[\\\\/:*?\"<>|]/g, '_');\n\n    try {\n        btoa(newValue); //Test for any illegal characters\n        player.fileName = newValue;\n        input.value = newValue;\n    } catch (error) {\n        Alert(`Save file name is not allowed.\\nFull error is: '${error}'`);\n    }\n};\n\nconst replaceSaveFileSpecials = (): string => {\n    let realName = player.fileName;\n    const special = [\n        '[stage]',\n        '[true]',\n        '[strange]',\n        '[vacuum]',\n        '[date]',\n        '[time]'\n    ];\n    const replaceWith = [\n        global.stageInfo.word[player.stage.active],\n        global.stageInfo.word[player.stage.true],\n        `${global.strangeInfo.gain(player.stage.active)}`,\n        `${player.inflation.vacuum}`,\n        getDate('dateDMY'),\n        getDate('timeHMS')\n    ];\n    for (let i = 0; i < special.length; i++) {\n        realName = realName.replaceAll(special[i], replaceWith[i]);\n    }\n    return `${realName}.txt`;\n};\n\nconst getDate = (type: 'dateDMY' | 'timeHMS'): string => {\n    const current = new Date();\n    switch (type) {\n        case 'dateDMY': {\n            const day = current.getDate();\n            const month = current.getMonth() + 1;\n            return `${day < 10 ? `0${day}` : day}.${month < 10 ? `0${month}` : month}.${current.getFullYear()}`;\n        }\n        case 'timeHMS': {\n            const minutes = current.getMinutes();\n            const seconds = current.getSeconds();\n            return `${current.getHours()}-${minutes < 10 ? `0${minutes}` : minutes}-${seconds < 10 ? `0${seconds}` : seconds}`;\n        }\n    }\n};\n\nexport const timeWarp = async() => {\n    const { time } = player;\n    const waste = (6 - (player.stage.true >= 6 ? player.strangeness[2][7] : 0)) / 2;\n    if (time.offline < 1200 * waste) { return Alert(`Need at least ${format(1200 * waste, { type: 'time' })} (20 minutes effective) of Storaged Offline time to Warp`); }\n\n    const warpTime = Math.min(player.researchesAuto[0] < 3 ? (await Confirm(`Do you wish to Warp forward? Current effective Offline time is ${format(time.offline / waste, { type: 'time' })}, will be consumed up to 1 hour (uses ${format(waste)} seconds per added second)\\nCalculates a minute per tick`) ? 3600 : 0) :\n        Number(await Prompt(`How many seconds do you wish to Warp forward? Current effective Offline time is ${format(time.offline / waste, { type: 'time' })} (uses ${format(waste)} seconds per added second, minimum value is 20 minutes)\\nBigger number will result in more lag (calculates a minute per tick)`, '1200')), time.offline / waste);\n    if (warpTime < 1200 || !isFinite(warpTime)) { return warpTime === 0 ? undefined : Alert('Warp failed, possible reason: not enough offline time or incorrect value'); }\n\n    time.offline -= warpTime * waste;\n    timeUpdate(warpTime);\n};\n\nconst pauseGame = async() => {\n    changeIntervals(true);\n    await AlertWait(\"Game is currently paused. Press 'confirm' to unpause it. Time spend here will be moved into offline storage\");\n\n    const { time } = player;\n    const offlineTime = (Date.now() - time.updated) / 1000;\n    const maxOffline = maxOfflineTime();\n    time.updated = Date.now();\n    global.lastSave += offlineTime;\n    time.offline = Math.min(time.offline + offlineTime, maxOffline);\n    player.stage.export = Math.min(player.stage.export + Math.min(offlineTime, maxOffline), maxExportTime());\n\n    changeIntervals();\n    numbersUpdate();\n    visualUpdate();\n};\n"],
  "mappings": "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",
  "names": ["overlimit", "number", "technical", "result", "numbers", "array", "i", "power", "base", "compare", "allEqual", "settings", "toSort", "descend", "main", "initial", "target", "merge", "first", "second", "f", "s", "clone", "left", "right", "check", "difference", "after", "digits", "negative", "base10", "tooSmall", "test", "player", "exponent", "formated", "index", "convert", "Limit", "LimitAlt", "Limit_default", "checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "Limit_default", "allowedToBeReset", "check", "milestoneCheck", "need", "specialHTML", "preventImageUnload", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "i", "setTheme", "themeNumber", "initial", "player", "global", "switchTheme", "theme", "body", "getId", "dropStatColor", "waterStatColor", "text", "getQuery", "Alert", "AlertWait", "resolve", "blocker", "confirm", "key", "button", "close", "Confirm", "rejectValue", "cancel", "yes", "no", "result", "Prompt", "inputValue", "input", "notify", "notification", "mainDiv", "timeout", "remove", "hideFooter", "toggle", "arrow", "animationReset", "numbersUpdate", "visualUpdate", "mobileDeviceSupport", "change", "enabled", "screenReaderSupport", "changeFontSize", "size", "changeFormat", "point", "htmlInput", "assignWithNoMove", "html", "newWidth", "replayEvent", "event", "allowed", "playEvent", "index", "prepareVacuum", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "player", "specialHTML", "maxBuildings", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "getId", "milestone1S2", "getQuery", "milestone2S5", "s", "element", "getClass", "i", "newValue", "cloneArray", "switchVacuum", "Alert", "milestones", "count", "Confirm", "AlertWait", "resetVacuum", "updateUnknown", "text", "div", "switchTab", "tab", "subtab", "oldTab", "global", "getId", "inside", "subtabAmount", "checkTab", "oldSubtab", "switchStage", "active", "player", "visualUpdate", "numbersUpdate", "maxOfflineTime", "maxExportTime", "exportMultiplier", "mult", "alerted", "timeUpdate", "timeWarp", "toggles", "inflation", "passedSeconds", "extraTime", "time", "currentTime", "buildingsInfo", "automatization", "calculateGainedStrangeness", "assignBuildingInformation", "stageResetCheck", "s", "collapseResetCheck", "autoElementsBuy", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "autoUpgradesBuy", "autoResearchesBuy", "i", "buyBuilding", "calculateGainedBuildings", "research", "getEnergy", "energyType", "test", "buildings", "Alert", "check", "Limit_default", "format", "howMany", "trueCountID", "assignWithNoMove", "costName", "currency", "e", "extra", "totalBuy", "totalCost", "calculateBuildingsCost", "increase", "firstCost", "alreadyBought", "totalBefore", "maxAfford", "assignDischargeInformation", "effect", "assignVaporizationInformation", "collapse", "collapseInfo", "assignCollapseInformation", "getUpgradeDescription", "trueSubtab", "stageGain", "moles", "mass", "minShift", "maxShift", "starEffect", "massEffect", "before", "stars", "fix", "playEvent", "researchAuto0", "ASR", "resetMessage", "failMessage", "discharge", "upgrades", "nova", "nebula", "cluster", "grid", "vacuum", "bound", "voidProgress", "strange5", "stage", "researchesAuto", "strangeness", "stageBest", "updateHistory", "updateUnknown", "index", "stageIndex", "type", "pointer", "researchesAutoInfo", "ASRInfo", "autoIndex", "elementsInfo", "stageText", "getChallengeDescription", "text", "info", "color", "visualUpdateUpgrades", "visualUpdateResearches", "max", "level", "upgradeHTML", "list", "listID", "input", "settings", "inputAbs", "digits", "result", "formated", "precision", "stageCheck", "stageInfo", "current", "highest", "resets", "activeAll", "element", "getClass", "resetType", "stageWord", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "specialHTML", "showU", "showR", "showRE", "showF", "updateRankInfo", "buildingHTML", "image", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "researchExtraDivHTML", "getQuery", "footerStatsHTML", "body", "switchTheme", "name", "accretionInfo", "rank", "reset", "type", "stageIndex", "player", "global", "elements", "i", "allowedToBeReset", "visualUpdateUpgrades", "autoElementsSet", "s", "buildings", "cloneArray", "playerStart", "upgrades", "autoUpgradesSet", "researches", "visualUpdateResearches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "assignEnergy", "assignBuildingInformation", "numbersUpdate", "visualUpdate", "resetStage", "update", "buildingsStart", "calculateMaxLevel", "stageCheck", "active", "updateRankInfo", "resetVacuum", "autoStage", "calculateMilestoneInformation", "assignNewMassCap", "logAny", "number", "base", "assignBuildingInformation", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "dischargeInfo", "inflationInfo", "global", "buildings", "upgrades", "researches", "researchesExtra", "strangeness", "player", "producing", "stageBoost", "strangeQuarks", "activeAll", "vacuum", "inVoid", "discharge", "v", "dischargeBase", "totalMultiplier", "listForMult5", "prod5Number", "Limit_default", "radiation", "listForMult4", "prod4Number", "listForMult3", "prod3Number", "listForMult2", "listForMult1", "dischargeBoost", "current5", "current4", "current3", "current2", "prod2Number", "excess", "weakerDischargeBoost", "satellitesBoost", "prod1Number", "elements", "capGain", "maxShift", "stars", "starEffect", "listForTotal", "planetBase", "totalNumber", "clusterBoost", "buyBuilding", "index", "stageIndex", "auto", "checkBuilding", "buildingsInfo", "building", "galaxy", "convert", "extra", "stageExtra", "currency", "budget", "calculateBuildingsCost", "howMany", "canAfford", "total", "increase", "firstCost", "alreadyBought", "totalBefore", "maxAfford", "cloneArray", "reset", "numbersUpdate", "assignEnergy", "awardMilestone", "playEvent", "getId", "format", "add", "getEnergy", "energyType", "s", "i", "calculateGainedBuildings", "get", "time", "stageGet", "calculateGainedStrangeness", "strange", "max", "buyUpgrades", "upgrade", "type", "checkUpgrade", "pointer", "switchTab", "level", "calculateMaxLevel", "stageCheck", "elementsInfo", "assignNewMassCap", "visualUpdateUpgrades", "dischargeResetCheck", "old", "calculateResearchCost", "visualUpdateResearches", "getUpgradeDescription", "research", "digits", "addAuto", "autoResearchesSet", "autoUpgradesSet", "which", "startCost", "a", "b", "autoUpgradesBuy", "autoResearchesBuy", "sort", "bought", "autoElementsSet", "autoElementsBuy", "toggleSwap", "change", "toggles", "toggle", "active", "anyOn", "status", "extraText", "toggleBuy", "shop", "input", "stageResetCheck", "allowed", "stageResetReward", "stageAsyncReset", "stage", "ok", "Confirm", "exitChallenge", "Alert", "researchesAuto", "update", "resetThese", "maxOffline", "trueGain", "resetType", "postGain", "storage", "history", "resetStage", "switchStage", "assignDischargeInformation", "dischargeReset", "dischargeAsyncReset", "progress", "notify", "calculateCloudSoftcap", "assignVaporizationInformation", "clouds", "assignGet", "cloudsTill", "softcap", "next", "cloudTest", "effective", "vaporizationResetCheck", "vaporizationReset", "vaporizationAsyncReset", "vaporization", "rankResetCheck", "requirement", "rankReset", "rankAsyncReset", "updateRankInfo", "minShift", "value", "min", "assignCollapseInformation", "massGain", "starCheck", "nova", "collapseResetCheck", "collapseInfo", "collapse", "starBoost", "collapseReset", "collapseAsyncReset", "message", "starMessage", "calculateMilestoneInformation", "need", "reward", "scaling", "count", "milestoneCheck", "enterChallenge", "getChallengeDescription", "player", "global", "index", "stageIndex", "value", "Limit_default", "post", "effect", "stars", "logAny", "blackHoles", "stage", "gain", "format", "assignVaporizationInformation", "isSoft", "calculateCloudSoftcap", "capText", "progress", "text", "cloneArray", "array", "deepClone", "toClone", "i", "check", "createArray", "amount", "type", "s", "upgradeType", "pointer", "playerStart", "updatePlayer", "load", "oldNames", "newNames", "key", "replaced", "oldVersion", "a", "oldB", "oldU", "oldR", "oldE", "prepareVacuum", "calculateMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "visualUpdateResearches", "auto", "autoMax", "autoStage", "extra", "extraMax", "researches", "researchesMax", "assignNewMassCap", "buildVersionInfo", "changeVersion", "version", "getId", "max", "autoText", "detectHotkey", "check", "activeType", "key", "numberKey", "toggleSwap", "buyBuilding", "stringKey", "player", "timeWarp", "stageAsyncReset", "global", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "activeAll", "index", "switchStage", "tabs", "checkTab", "switchTab", "subtabs", "getId", "id", "getClass", "idCollection", "getQuery", "query", "reLoad", "firstLoad", "preventImageUnload", "save", "load", "versionCheck", "updatePlayer", "time", "player", "offlineTime", "maxOffline", "maxOfflineTime", "global", "maxExportTime", "Alert", "format", "prepareVacuum", "deepClone", "playerStart", "mobileDeviceSupport", "screenReaderSupport", "changeFontSize", "theme", "setTheme", "stageCheck", "i", "toggleSwap", "toggleBuy", "changeIntervals", "SR", "hover", "key", "detectHotkey", "specialHTML", "elementsArea", "elementsButton", "tabList", "buyBuilding", "image", "getUpgradeDescription", "buyUpgrades", "stageAsyncReset", "active", "dischargeAsyncReset", "vaporizationAsyncReset", "rankAsyncReset", "collapseAsyncReset", "getChallengeDescription", "switchVacuum", "enterChallenge", "s", "input", "assignNewMassCap", "buildVersionInfo", "saveLoad", "autoElementsSet", "autoUpgradesSet", "autoResearchesSet", "changeSaveFileName", "replaceSaveFileSpecials", "mainInput", "numberInput", "visualInput", "autoSaveInput", "changeFormat", "pauseGame", "replayEvent", "timeWarp", "inputID", "hideFooter", "tabText", "switchTab", "subtabText", "switchStage", "pause", "intervalsId", "intervals", "timeUpdate", "numbersUpdate", "visualUpdate", "prepareFake", "fake", "renameThese", "newName", "replaced", "type", "error", "rewardType", "multiplier", "exportMultiplier", "strangeGain", "a", "ok", "Prompt", "newValue", "realName", "special", "replaceWith", "getDate", "current", "day", "month", "minutes", "seconds", "waste", "warpTime", "Confirm", "AlertWait"]
}
